Z80 Macro Assembler ZMA v1.0.15
=====================================================
Programmed by t.hara

<< code >>
[	INCLUDE ".//MSXBIOS.ASM"] begin
[	INCLUDE ".//MSXBIOS.ASM"] end

[	INCLUDE ".//WORKAREA.ASM"] begin
[	INCLUDE ".//WORKAREA.ASM"] end

[	ORG 0X4000]
	code address: 0x004000

[ROM_HEADER_ID :]
	label address: 0x004000

[	DS "AB"]
004000: 41 42

[ROM_HEADER_INIT :]
	label address: 0x004002

[	DW INIT_CODE]
004002: 10 40

[ROM_HEADER_STATEMENT :]
	label address: 0x004004

[	DW CALL_STATEMENT_ENTRY]
004004: c4 40

[ROM_HEADER_DEVICE :]
	label address: 0x004006

[	DW 0]
004006: 00 00

[ROM_HEADER_TEXT :]
	label address: 0x004008

[	DW 0]
004008: 00 00

[ROM_HEADER_RESERVED :]
	label address: 0x00400a

[SPACE 0X0010 - 0X000A , 0]
	Allocate space: 6byte(s)
		Fill value: 0

[	SCOPE INIT_CODE]
	Scope path: INIT_CODE:

[INIT_CODE ::]
	global label address: 0x004010

[	CALL CHECK_RAM] Z80:18cyc, R800:5cyc
004010: cd 85 42

[	JP Z , THIS_IS_ON_THE_RAM] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004013: ca 5b 40

[THIS_IS_ON_THE_ROM :]
	label address: 0x004016

[	CALL GET_P1_SLOT] Z80:18cyc, R800:5cyc
004016: cd d4 41

[	PUSH AF] Z80:12cyc, R800:6cyc
004019: f5

[	CALL GET_SLTWRK] Z80:18cyc, R800:5cyc
00401a: cd 72 42

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00401d: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00401e: 23

[	OR A , [ HL ]] Z80:8cyc, R800:4cyc
00401f: b6

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
004020: c0

[	DEC HL] Z80:7cyc, R800:1cyc
004021: 2b

[	PUSH HL] Z80:12cyc, R800:6cyc
004022: e5

[	LD HL , [ BOTTOM ]] Z80:17cyc, R800:7cyc
004023: 2a 48 fc

[	PUSH HL] Z80:12cyc, R800:6cyc
004026: e5

[	LD DE , WORK_AREA_SIZE] Z80:11cyc, R800:3cyc
004027: 11 09 02

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00402a: 19

[	LD [ BOTTOM ] , HL] Z80:17cyc, R800:7cyc
00402b: 22 48 fc

[	POP DE] Z80:11cyc, R800:5cyc
00402e: d1

[	POP HL] Z80:11cyc, R800:5cyc
00402f: e1

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004030: 73

[	INC HL] Z80:7cyc, R800:1cyc
004031: 23

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004032: 72

[	INC HL] Z80:7cyc, R800:1cyc
004033: 23

[	PUSH DE] Z80:12cyc, R800:6cyc
004034: d5

[	CALL BACKUP_H_TIMI] Z80:18cyc, R800:5cyc
004035: cd ad 40

[	PUSH HL] Z80:12cyc, R800:6cyc
004038: e5

[	CALL GET_P2_SLOT] Z80:18cyc, R800:5cyc
004039: cd 00 42

[	POP HL] Z80:11cyc, R800:5cyc
00403c: e1

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00403d: 77

[	POP IX] Z80:16cyc, R800:6cyc
00403e: dd e1

[	CALL INITIALIZE_WORKAREA] Z80:18cyc, R800:5cyc
004040: cd 82 40

[	LD HL , NEW_H_TIMI] Z80:11cyc, R800:3cyc
004043: 21 cf 41

[	LD DE , H_TIMI] Z80:11cyc, R800:3cyc
004046: 11 9f fd

[	LD BC , 5] Z80:11cyc, R800:3cyc
004049: 01 05 00

[	POP AF] Z80:11cyc, R800:5cyc
00404c: f1

[	DI] Z80:5cyc, R800:2cyc
00404d: f3

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00404e: ed b0

[	LD [ H_TIMI + 1 ] , A] Z80:14cyc, R800:6cyc
004050: 32 a0 fd

[	LD HL , INTERVAL_TIMER_PROC_FOR_ROM] Z80:11cyc, R800:3cyc
004053: 21 92 41

[	LD [ H_TIMI + 2 ] , HL] Z80:17cyc, R800:7cyc
004056: 22 a1 fd

[	EI] Z80:5cyc, R800:1cyc
004059: fb

[	RET] Z80:11cyc, R800:5cyc
00405a: c9

[THIS_IS_ON_THE_RAM :]
	label address: 0x00405b

[	LD IX , 0X8000 - WORK_AREA_SIZE] Z80:16cyc, R800:4cyc
00405b: dd 21 f7 7d

[	CALL INITIALIZE_WORKAREA] Z80:18cyc, R800:5cyc
00405f: cd 82 40

[	LD HL , 0X8000 - WORK_AREA_SIZE - H_TIMI_BACKUP_SIZE] Z80:11cyc, R800:3cyc
004062: 21 f2 7d

[	CALL BACKUP_H_TIMI] Z80:18cyc, R800:5cyc
004065: cd ad 40

[	CALL GET_P1_SLOT] Z80:18cyc, R800:5cyc
004068: cd d4 41

[	LD HL , NEW_H_TIMI] Z80:11cyc, R800:3cyc
00406b: 21 cf 41

[	LD DE , H_TIMI] Z80:11cyc, R800:3cyc
00406e: 11 9f fd

[	LD BC , 5] Z80:11cyc, R800:3cyc
004071: 01 05 00

[	DI] Z80:5cyc, R800:2cyc
004074: f3

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
004075: ed b0

[	LD [ H_TIMI + 1 ] , A] Z80:14cyc, R800:6cyc
004077: 32 a0 fd

[	LD HL , INTERVAL_TIMER_PROC_FOR_RAM] Z80:11cyc, R800:3cyc
00407a: 21 bd 41

[	LD [ H_TIMI + 2 ] , HL] Z80:17cyc, R800:7cyc
00407d: 22 a1 fd

[	EI] Z80:5cyc, R800:1cyc
004080: fb

[	RET] Z80:11cyc, R800:5cyc
004081: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE INITIALIZE_WORKAREA]
	Scope path: INITIALIZE_WORKAREA:

[INITIALIZE_WORKAREA ::]
	global label address: 0x004082

[	CALL GET_P1_SLOT] Z80:18cyc, R800:5cyc
004082: cd d4 41

[	LD [ IX + WORK_P1_SLOT ] , A] Z80:8cyc, R800:4cyc
004085: dd 77 00

[	CALL GET_P2_SLOT] Z80:18cyc, R800:5cyc
004088: cd 00 42

[	LD [ IX + WORK_P2_SLOT ] , A] Z80:8cyc, R800:4cyc
00408b: dd 77 01

[	XOR A , A] Z80:5cyc, R800:1cyc
00408e: af

[	LD [ IX + WORK_VSYNC_COUNT + 0 ] , A] Z80:8cyc, R800:4cyc
00408f: dd 77 04

[	LD [ IX + WORK_VSYNC_COUNT + 1 ] , A] Z80:8cyc, R800:4cyc
004092: dd 77 05

[	LD [ IX + WORK_1ST_SPRITE ] , A] Z80:8cyc, R800:4cyc
004095: dd 77 06

[	LD [ IX + WORK_SPRITE_DRIVE_ON ] , A] Z80:8cyc, R800:4cyc
004098: dd 77 07

[	PUSH IX] Z80:17cyc, R800:7cyc
00409b: dd e5

[	POP HL] Z80:11cyc, R800:5cyc
00409d: e1

[	LD DE , WORK_SPRITE_INFO] Z80:11cyc, R800:3cyc
00409e: 11 09 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0040a1: 19

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
0040a2: 36 00

[	LD E , L] Z80:5cyc, R800:2cyc
0040a4: 5d

[	LD D , H] Z80:5cyc, R800:2cyc
0040a5: 54

[	INC DE] Z80:7cyc, R800:1cyc
0040a6: 13

[	LD BC , SIZE_SPRITE_INFO - 1] Z80:11cyc, R800:3cyc
0040a7: 01 ff 01

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
0040aa: ed b0

[	RET] Z80:11cyc, R800:5cyc
0040ac: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE BACKUP_H_TIMI]
	Scope path: BACKUP_H_TIMI:

[BACKUP_H_TIMI ::]
	global label address: 0x0040ad

[	LD BC , [ H_TIMI + 0 ]] Z80:22cyc, R800:8cyc
0040ad: ed 4b 9f fd

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
0040b1: 71

[	INC HL] Z80:7cyc, R800:1cyc
0040b2: 23

[	LD [ HL ] , B] Z80:8cyc, R800:4cyc
0040b3: 70

[	INC HL] Z80:7cyc, R800:1cyc
0040b4: 23

[	LD BC , [ H_TIMI + 2 ]] Z80:22cyc, R800:8cyc
0040b5: ed 4b a1 fd

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
0040b9: 71

[	INC HL] Z80:7cyc, R800:1cyc
0040ba: 23

[	LD [ HL ] , B] Z80:8cyc, R800:4cyc
0040bb: 70

[	INC HL] Z80:7cyc, R800:1cyc
0040bc: 23

[	LD BC , [ H_TIMI + 4 ]] Z80:22cyc, R800:8cyc
0040bd: ed 4b a3 fd

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
0040c1: 71

[	INC HL] Z80:7cyc, R800:1cyc
0040c2: 23

[	RET] Z80:11cyc, R800:5cyc
0040c3: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_STATEMENT_ENTRY]
	Scope path: CALL_STATEMENT_ENTRY:

[CALL_STATEMENT_ENTRY ::]
	global label address: 0x0040c4

[	PUSH HL] Z80:12cyc, R800:6cyc
0040c4: e5

[	LD DE , COMMAND_JUMP_TABLE] Z80:11cyc, R800:3cyc
0040c5: 11 48 4c

[SEARCH_COMMAND_LOOP :]
	label address: 0x0040c8

[	LD HL , PROCNM] Z80:11cyc, R800:3cyc
0040c8: 21 89 fd

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0040cb: 1a

[	OR A , A] Z80:5cyc, R800:1cyc
0040cc: b7

[	JP Z , NO_MATCH] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040cd: ca 05 41

[	INC DE] Z80:7cyc, R800:1cyc
0040d0: 13

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0040d1: be

[	JP NZ , SEARCH_NEXT_COMMAND] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040d2: c2 f9 40

[	INC HL] Z80:7cyc, R800:1cyc
0040d5: 23

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0040d6: 1a

[	INC DE] Z80:7cyc, R800:1cyc
0040d7: 13

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0040d8: be

[	JP NZ , SEARCH_NEXT_COMMAND] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040d9: c2 f9 40

[	INC HL] Z80:7cyc, R800:1cyc
0040dc: 23

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0040dd: 1a

[	INC DE] Z80:7cyc, R800:1cyc
0040de: 13

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0040df: be

[	JP NZ , SEARCH_NEXT_COMMAND] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040e0: c2 f9 40

[	INC HL] Z80:7cyc, R800:1cyc
0040e3: 23

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0040e4: 1a

[	INC DE] Z80:7cyc, R800:1cyc
0040e5: 13

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0040e6: be

[	JP NZ , SEARCH_NEXT_COMMAND] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040e7: c2 f9 40

[	INC HL] Z80:7cyc, R800:1cyc
0040ea: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0040eb: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
0040ec: b7

[	JP NZ , SEARCH_NEXT_COMMAND] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040ed: c2 f9 40

[	EX DE , HL] Z80:5cyc, R800:1cyc
0040f0: eb

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0040f1: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0040f2: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0040f3: 56

[	POP HL] Z80:11cyc, R800:5cyc
0040f4: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
0040f5: d5

[	RET] Z80:11cyc, R800:5cyc
0040f6: c9

[EXIT_CALL_STATEMENT ::]
	global label address: 0x0040f7

[	OR A , A] Z80:5cyc, R800:1cyc
0040f7: b7

[	RET] Z80:11cyc, R800:5cyc
0040f8: c9

[SEARCH_NEXT_COMMAND :]
	label address: 0x0040f9

[	LD A , E] Z80:5cyc, R800:2cyc
0040f9: 7b

[	AND A , 0XF8] Z80:8cyc, R800:2cyc
0040fa: e6 f8

[	LD E , A] Z80:5cyc, R800:2cyc
0040fc: 5f

[	LD HL , 8] Z80:11cyc, R800:3cyc
0040fd: 21 08 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004100: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
004101: eb

[	JP SEARCH_COMMAND_LOOP] Z80:11cyc, R800:5cyc
004102: c3 c8 40

[NO_MATCH :]
	label address: 0x004105

[	POP HL] Z80:11cyc, R800:5cyc
004105: e1

[	SCF] Z80:5cyc, R800:1cyc
004106: 37

[	RET] Z80:11cyc, R800:5cyc
004107: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SC15]
	Scope path: CALL_SC15:

[CALL_SC15 ::]
	global label address: 0x004108

[	PUSH HL] Z80:12cyc, R800:6cyc
004108: e5

[	CALL INIGRP] Z80:18cyc, R800:5cyc
004109: cd 72 00

[	LD A , 1] Z80:8cyc, R800:2cyc
00410c: 3e 01

[	LD [ SCRMOD ] , A] Z80:14cyc, R800:6cyc
00410e: 32 af fc

[	LD A , 32] Z80:8cyc, R800:2cyc
004111: 3e 20

[	LD [ LINL32 ] , A] Z80:14cyc, R800:6cyc
004113: 32 af f3

[	LD [ LINLEN ] , A] Z80:14cyc, R800:6cyc
004116: 32 b0 f3

[	LD A , 32] Z80:8cyc, R800:2cyc
004119: 3e 20

[	LD HL , 0X1800] Z80:11cyc, R800:3cyc
00411b: 21 00 18

[	LD BC , 0X300] Z80:11cyc, R800:3cyc
00411e: 01 00 03

[	CALL BSUP_FILVRM] Z80:18cyc, R800:5cyc
004121: cd 1c 43

[	LD HL , [ 0X0004 ]] Z80:17cyc, R800:7cyc
004124: 2a 04 00

[	LD DE , 0X0000] Z80:11cyc, R800:3cyc
004127: 11 00 00

[	LD BC , 0X800 - 8] Z80:11cyc, R800:3cyc
00412a: 01 f8 07

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
00412d: cd 33 43

[	LD HL , [ 0X0004 ]] Z80:17cyc, R800:7cyc
004130: 2a 04 00

[	LD DE , 0X0800] Z80:11cyc, R800:3cyc
004133: 11 00 08

[	LD BC , 0X800 - 8] Z80:11cyc, R800:3cyc
004136: 01 f8 07

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004139: cd 33 43

[	LD HL , [ 0X0004 ]] Z80:17cyc, R800:7cyc
00413c: 2a 04 00

[	LD DE , 0X1000] Z80:11cyc, R800:3cyc
00413f: 11 00 10

[	LD BC , 0X800 - 8] Z80:11cyc, R800:3cyc
004142: 01 f8 07

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004145: cd 33 43

[	LD HL , 0X1000 - 8] Z80:11cyc, R800:3cyc
004148: 21 f8 0f

[	LD BC , 8] Z80:11cyc, R800:3cyc
00414b: 01 08 00

[	LD A , 0XFF] Z80:8cyc, R800:2cyc
00414e: 3e ff

[	CALL BSUP_FILVRM] Z80:18cyc, R800:5cyc
004150: cd 1c 43

[	LD HL , 0X1800 - 8] Z80:11cyc, R800:3cyc
004153: 21 f8 17

[	LD BC , 8] Z80:11cyc, R800:3cyc
004156: 01 08 00

[	LD A , 0XFF] Z80:8cyc, R800:2cyc
004159: 3e ff

[	CALL BSUP_FILVRM] Z80:18cyc, R800:5cyc
00415b: cd 1c 43

[	LD A , [ FORCLR ]] Z80:14cyc, R800:6cyc
00415e: 3a e9 f3

[	ADD A , A] Z80:5cyc, R800:1cyc
004161: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004162: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004163: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004164: 87

[	LD B , A] Z80:5cyc, R800:2cyc
004165: 47

[	LD A , [ BAKCLR ]] Z80:14cyc, R800:6cyc
004166: 3a ea f3

[	OR A , B] Z80:5cyc, R800:1cyc
004169: b0

[	LD HL , 0X2000] Z80:11cyc, R800:3cyc
00416a: 21 00 20

[	LD BC , 0X1800] Z80:11cyc, R800:3cyc
00416d: 01 00 18

[	CALL BSUP_FILVRM] Z80:18cyc, R800:5cyc
004170: cd 1c 43

[	POP HL] Z80:11cyc, R800:5cyc
004173: e1

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004174: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE SYNTAX_ERROR]
	Scope path: SYNTAX_ERROR:

[SYNTAX_ERROR ::]
	global label address: 0x004177

[	LD E , 2] Z80:8cyc, R800:2cyc
004177: 1e 02

[	LD IX , CALBAS_ERRHAND] Z80:16cyc, R800:4cyc
004179: dd 21 6f 40

[	JP CALBAS] Z80:11cyc, R800:5cyc
00417d: c3 59 01

[	ENDSCOPE]
	Scope path: 

[	SCOPE ILLEGAL_FUNCTION_CALL_ERROR]
	Scope path: ILLEGAL_FUNCTION_CALL_ERROR:

[ILLEGAL_FUNCTION_CALL_ERROR ::]
	global label address: 0x004180

[	LD E , 5] Z80:8cyc, R800:2cyc
004180: 1e 05

[	LD IX , CALBAS_ERRHAND] Z80:16cyc, R800:4cyc
004182: dd 21 6f 40

[	JP CALBAS] Z80:11cyc, R800:5cyc
004186: c3 59 01

[	ENDSCOPE]
	Scope path: 

[	SCOPE TYPE_MISMATCH_ERROR]
	Scope path: TYPE_MISMATCH_ERROR:

[TYPE_MISMATCH_ERROR ::]
	global label address: 0x004189

[	LD E , 13] Z80:8cyc, R800:2cyc
004189: 1e 0d

[	LD IX , CALBAS_ERRHAND] Z80:16cyc, R800:4cyc
00418b: dd 21 6f 40

[	JP CALBAS] Z80:11cyc, R800:5cyc
00418f: c3 59 01

[	ENDSCOPE]
	Scope path: 

[	SCOPE INTERVAL_TIMER_PROC_FOR_ROM]
	Scope path: INTERVAL_TIMER_PROC_FOR_ROM:

[INTERVAL_TIMER_PROC_FOR_ROM ::]
	global label address: 0x004192

[	CALL GET_P1_SLOT] Z80:18cyc, R800:5cyc
004192: cd d4 41

[	CALL GET_SLTWRK] Z80:18cyc, R800:5cyc
004195: cd 72 42

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004198: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004199: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00419a: 56

[	INC HL] Z80:7cyc, R800:1cyc
00419b: 23

[	PUSH HL] Z80:12cyc, R800:6cyc
00419c: e5

[	LD IXL , E] Z80:10cyc, R800:2cyc
00419d: dd 6b

[	LD IXH , D] Z80:10cyc, R800:2cyc
00419f: dd 62

[	LD DE , 5] Z80:11cyc, R800:3cyc
0041a1: 11 05 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0041a4: 19

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0041a5: 56

[	CALL GET_P2_SLOT] Z80:18cyc, R800:5cyc
0041a6: cd 00 42

[	PUSH AF] Z80:12cyc, R800:6cyc
0041a9: f5

[	LD A , D] Z80:5cyc, R800:2cyc
0041aa: 7a

[	CALL SET_P2_SLOT] Z80:18cyc, R800:5cyc
0041ab: cd 2f 42

[	POP AF] Z80:11cyc, R800:5cyc
0041ae: f1

[	LD [ IX + WORK_CURRENT_P2_SLOT ] , A] Z80:8cyc, R800:4cyc
0041af: dd 77 02

[	CALL INTERVAL_TIMER_PROC] Z80:18cyc, R800:5cyc
0041b2: cd c8 41

[	LD A , [ IX + WORK_CURRENT_P2_SLOT ]] Z80:21cyc, R800:7cyc
0041b5: dd 7e 02

[	CALL SET_P2_SLOT] Z80:18cyc, R800:5cyc
0041b8: cd 2f 42

[	POP HL] Z80:11cyc, R800:5cyc
0041bb: e1

[	JP HL] Z80:5cyc, R800:3cyc
0041bc: e9

[	ENDSCOPE]
	Scope path: 

[	SCOPE INTERVAL_TIMER_PROC_FOR_RAM]
	Scope path: INTERVAL_TIMER_PROC_FOR_RAM:

[INTERVAL_TIMER_PROC_FOR_RAM ::]
	global label address: 0x0041bd

[	LD IX , 0X8000 - WORK_AREA_SIZE] Z80:16cyc, R800:4cyc
0041bd: dd 21 f7 7d

[	CALL INTERVAL_TIMER_PROC] Z80:18cyc, R800:5cyc
0041c1: cd c8 41

[	LD HL , 0X8000 - WORK_AREA_SIZE - H_TIMI_BACKUP_SIZE] Z80:11cyc, R800:3cyc
0041c4: 21 f2 7d

[	JP HL] Z80:5cyc, R800:3cyc
0041c7: e9

[	ENDSCOPE]
	Scope path: 

[	SCOPE INTERVAL_TIMER_PROC]
	Scope path: INTERVAL_TIMER_PROC:

[INTERVAL_TIMER_PROC ::]
	global label address: 0x0041c8

[	CALL VSYNC_COUNTER] Z80:18cyc, R800:5cyc
0041c8: cd cc 4b

[	CALL SPRITE_DRIVER] Z80:18cyc, R800:5cyc
0041cb: cd 03 4a

[	RET] Z80:11cyc, R800:5cyc
0041ce: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE NEW_H_TIMI]
	Scope path: NEW_H_TIMI:

[NEW_H_TIMI ::]
	global label address: 0x0041cf

[	RST 0X30] Z80:12cyc, R800:6 or 7cyc
0041cf: f7

[	DB 0]
0041d0: 00

[	DW INTERVAL_TIMER_PROC_FOR_RAM]
0041d1: bd 41

[	RET] Z80:11cyc, R800:5cyc
0041d3: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//SLTWRK.ASM"] begin
[	SCOPE GET_P1_SLOT]
	Scope path: GET_P1_SLOT:

[GET_P1_SLOT ::]
	global label address: 0x0041d4

[	IN A , [ 0XA8 ]] Z80:12cyc, R800:10 or 9cyc
0041d4: db a8

[	LD C , A] Z80:5cyc, R800:2cyc
0041d6: 4f

[	AND A , 0X0C] Z80:8cyc, R800:2cyc
0041d7: e6 0c

[	RRCA] Z80:5cyc, R800:1cyc
0041d9: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0041da: 0f

[	LD B , A] Z80:5cyc, R800:2cyc
0041db: 47

[	ADD A , 0XC1] Z80:8cyc, R800:2cyc
0041dc: c6 c1

[	LD L , A] Z80:5cyc, R800:2cyc
0041de: 6f

[	LD H , 0XFC] Z80:8cyc, R800:2cyc
0041df: 26 fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0041e1: 7e

[	AND A , 0X80] Z80:8cyc, R800:2cyc
0041e2: e6 80

[	LD A , B] Z80:5cyc, R800:2cyc
0041e4: 78

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0041e5: c8

[	RRCA] Z80:5cyc, R800:1cyc
0041e6: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0041e7: 0f

[	LD L , A] Z80:5cyc, R800:2cyc
0041e8: 6f

[	LD A , C] Z80:5cyc, R800:2cyc
0041e9: 79

[	AND A , 0X3F] Z80:8cyc, R800:2cyc
0041ea: e6 3f

[	OR A , L] Z80:5cyc, R800:1cyc
0041ec: b5

[	DI] Z80:5cyc, R800:2cyc
0041ed: f3

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
0041ee: d3 a8

[	LD A , [ 0XFFFF ]] Z80:14cyc, R800:6cyc
0041f0: 3a ff ff

[	LD L , A] Z80:5cyc, R800:2cyc
0041f3: 6f

[	LD A , C] Z80:5cyc, R800:2cyc
0041f4: 79

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
0041f5: d3 a8

[	EI] Z80:5cyc, R800:1cyc
0041f7: fb

[	LD A , L] Z80:5cyc, R800:2cyc
0041f8: 7d

[	CPL] Z80:5cyc, R800:1cyc
0041f9: 2f

[	AND A , 0X0C] Z80:8cyc, R800:2cyc
0041fa: e6 0c

[	OR A , B] Z80:5cyc, R800:1cyc
0041fc: b0

[	OR A , 0X80] Z80:8cyc, R800:2cyc
0041fd: f6 80

[	RET] Z80:11cyc, R800:5cyc
0041ff: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_P2_SLOT]
	Scope path: GET_P2_SLOT:

[GET_P2_SLOT ::]
	global label address: 0x004200

[	IN A , [ 0XA8 ]] Z80:12cyc, R800:10 or 9cyc
004200: db a8

[	LD C , A] Z80:5cyc, R800:2cyc
004202: 4f

[	AND A , 0X30] Z80:8cyc, R800:2cyc
004203: e6 30

[	RRCA] Z80:5cyc, R800:1cyc
004205: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004206: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004207: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004208: 0f

[	LD B , A] Z80:5cyc, R800:2cyc
004209: 47

[	ADD A , 0XC1] Z80:8cyc, R800:2cyc
00420a: c6 c1

[	LD L , A] Z80:5cyc, R800:2cyc
00420c: 6f

[	LD H , 0XFC] Z80:8cyc, R800:2cyc
00420d: 26 fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00420f: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
004210: b7

[	LD A , B] Z80:5cyc, R800:2cyc
004211: 78

[	RET P] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
004212: f0

[	RRCA] Z80:5cyc, R800:1cyc
004213: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004214: 0f

[	LD L , A] Z80:5cyc, R800:2cyc
004215: 6f

[	LD A , C] Z80:5cyc, R800:2cyc
004216: 79

[	AND A , 0X3F] Z80:8cyc, R800:2cyc
004217: e6 3f

[	OR A , L] Z80:5cyc, R800:1cyc
004219: b5

[	DI] Z80:5cyc, R800:2cyc
00421a: f3

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
00421b: d3 a8

[	LD A , [ 0XFFFF ]] Z80:14cyc, R800:6cyc
00421d: 3a ff ff

[	LD L , A] Z80:5cyc, R800:2cyc
004220: 6f

[	LD A , C] Z80:5cyc, R800:2cyc
004221: 79

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
004222: d3 a8

[	EI] Z80:5cyc, R800:1cyc
004224: fb

[	LD A , L] Z80:5cyc, R800:2cyc
004225: 7d

[	CPL] Z80:5cyc, R800:1cyc
004226: 2f

[	RRCA] Z80:5cyc, R800:1cyc
004227: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004228: 0f

[	AND A , 0X0C] Z80:8cyc, R800:2cyc
004229: e6 0c

[	OR A , B] Z80:5cyc, R800:1cyc
00422b: b0

[	OR A , 0X80] Z80:8cyc, R800:2cyc
00422c: f6 80

[	RET] Z80:11cyc, R800:5cyc
00422e: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SET_P2_SLOT]
	Scope path: SET_P2_SLOT:

[SET_P2_SLOT ::]
	global label address: 0x00422f

[	OR A , A] Z80:5cyc, R800:1cyc
00422f: b7

[	JP M , EXTENDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004230: fa 43 42

[	AND A , 0X03] Z80:8cyc, R800:2cyc
004233: e6 03

[	RRCA] Z80:5cyc, R800:1cyc
004235: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004236: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004237: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004238: 0f

[	LD C , A] Z80:5cyc, R800:2cyc
004239: 4f

[	IN A , [ 0XA8 ]] Z80:12cyc, R800:10 or 9cyc
00423a: db a8

[	AND A , 0XCF] Z80:8cyc, R800:2cyc
00423c: e6 cf

[	OR A , C] Z80:5cyc, R800:1cyc
00423e: b1

[	DI] Z80:5cyc, R800:2cyc
00423f: f3

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
004240: d3 a8

[	RET] Z80:11cyc, R800:5cyc
004242: c9

[EXTENDED_SLOT :]
	label address: 0x004243

[	LD B , A] Z80:5cyc, R800:2cyc
004243: 47

[	RRCA] Z80:5cyc, R800:1cyc
004244: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004245: 0f

[	AND A , 0XC0] Z80:8cyc, R800:2cyc
004246: e6 c0

[	LD C , A] Z80:5cyc, R800:2cyc
004248: 4f

[	RRCA] Z80:5cyc, R800:1cyc
004249: 0f

[	RRCA] Z80:5cyc, R800:1cyc
00424a: 0f

[	OR A , C] Z80:5cyc, R800:1cyc
00424b: b1

[	LD C , A] Z80:5cyc, R800:2cyc
00424c: 4f

[	IN A , [ 0XA8 ]] Z80:12cyc, R800:10 or 9cyc
00424d: db a8

[	LD D , A] Z80:5cyc, R800:2cyc
00424f: 57

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
004250: e6 0f

[	OR A , C] Z80:5cyc, R800:1cyc
004252: b1

[	DI] Z80:5cyc, R800:2cyc
004253: f3

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
004254: d3 a8

[	AND A , 0X3F] Z80:8cyc, R800:2cyc
004256: e6 3f

[	LD C , A] Z80:5cyc, R800:2cyc
004258: 4f

[	LD A , D] Z80:5cyc, R800:2cyc
004259: 7a

[	AND A , 0XC0] Z80:8cyc, R800:2cyc
00425a: e6 c0

[	OR A , C] Z80:5cyc, R800:1cyc
00425c: b1

[	LD C , A] Z80:5cyc, R800:2cyc
00425d: 4f

[	LD A , B] Z80:5cyc, R800:2cyc
00425e: 78

[	RLCA] Z80:5cyc, R800:1cyc
00425f: 07

[	RLCA] Z80:5cyc, R800:1cyc
004260: 07

[	AND A , 0X30] Z80:8cyc, R800:2cyc
004261: e6 30

[	LD B , A] Z80:5cyc, R800:2cyc
004263: 47

[	LD A , [ 0XFFFF ]] Z80:14cyc, R800:6cyc
004264: 3a ff ff

[	CPL] Z80:5cyc, R800:1cyc
004267: 2f

[	AND A , 0XCF] Z80:8cyc, R800:2cyc
004268: e6 cf

[	OR A , B] Z80:5cyc, R800:1cyc
00426a: b0

[	LD [ 0XFFFF ] , A] Z80:14cyc, R800:6cyc
00426b: 32 ff ff

[	LD A , C] Z80:5cyc, R800:2cyc
00426e: 79

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
00426f: d3 a8

[	RET] Z80:11cyc, R800:5cyc
004271: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_SLTWRK]
	Scope path: GET_SLTWRK:

[GET_SLTWRK ::]
	global label address: 0x004272

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
004272: e6 0f

[	LD L , A] Z80:5cyc, R800:2cyc
004274: 6f

[	AND A , 0X03] Z80:8cyc, R800:2cyc
004275: e6 03

[	ADD A , A] Z80:5cyc, R800:1cyc
004277: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004278: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004279: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
00427a: 87

[	OR A , L] Z80:5cyc, R800:1cyc
00427b: b5

[	AND A , 0X3C] Z80:8cyc, R800:2cyc
00427c: e6 3c

[	ADD A , A] Z80:5cyc, R800:1cyc
00427e: 87

[	ADD A , 0X09] Z80:8cyc, R800:2cyc
00427f: c6 09

[	LD L , A] Z80:5cyc, R800:2cyc
004281: 6f

[	LD H , 0XFD] Z80:8cyc, R800:2cyc
004282: 26 fd

[	RET] Z80:11cyc, R800:5cyc
004284: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE CHECK_RAM]
	Scope path: CHECK_RAM:

[CHECK_RAM ::]
	global label address: 0x004285

[	PUSH HL] Z80:12cyc, R800:6cyc
004285: e5

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
004286: 21 00 40

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004289: 7e

[	CPL] Z80:5cyc, R800:1cyc
00428a: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00428b: 77

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00428c: be

[	CPL] Z80:5cyc, R800:1cyc
00428d: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00428e: 77

[	POP HL] Z80:11cyc, R800:5cyc
00428f: e1

[	RET] Z80:11cyc, R800:5cyc
004290: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE ACTIVATE_WORKAREA]
	Scope path: ACTIVATE_WORKAREA:

[ACTIVATE_WORKAREA ::]
	global label address: 0x004291

[	CALL CHECK_RAM] Z80:18cyc, R800:5cyc
004291: cd 85 42

[	LD IX , 0X8000 - WORK_AREA_SIZE] Z80:16cyc, R800:4cyc
004294: dd 21 f7 7d

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
004298: c8

[	CALL GET_P1_SLOT] Z80:18cyc, R800:5cyc
004299: cd d4 41

[	CALL GET_SLTWRK] Z80:18cyc, R800:5cyc
00429c: cd 72 42

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00429f: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0042a0: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0042a1: 56

[	LD IXL , E] Z80:10cyc, R800:2cyc
0042a2: dd 6b

[	LD IXH , D] Z80:10cyc, R800:2cyc
0042a4: dd 62

[	PUSH HL] Z80:12cyc, R800:6cyc
0042a6: e5

[	CALL GET_P2_SLOT] Z80:18cyc, R800:5cyc
0042a7: cd 00 42

[	POP HL] Z80:11cyc, R800:5cyc
0042aa: e1

[	LD DE , 6] Z80:11cyc, R800:3cyc
0042ab: 11 06 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0042ae: 19

[	LD E , A] Z80:5cyc, R800:2cyc
0042af: 5f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0042b0: 7e

[	CALL SET_P2_SLOT] Z80:18cyc, R800:5cyc
0042b1: cd 2f 42

[	LD [ IX + WORK_SAVE_P2_SLOT ] , E] Z80:8cyc, R800:4cyc
0042b4: dd 73 03

[	RET] Z80:11cyc, R800:5cyc
0042b7: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RESTORE_P2_SLOT]
	Scope path: RESTORE_P2_SLOT:

[RESTORE_P2_SLOT ::]
	global label address: 0x0042b8

[	CALL CHECK_RAM] Z80:18cyc, R800:5cyc
0042b8: cd 85 42

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0042bb: c8

[	LD A , [ IX + WORK_SAVE_P2_SLOT ]] Z80:21cyc, R800:7cyc
0042bc: dd 7e 03

[	JP SET_P2_SLOT] Z80:11cyc, R800:5cyc
0042bf: c3 2f 42

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//SLTWRK.ASM"] end

[	INCLUDE ".//VRAM.ASM"] begin
[	SCOPE CALL_VFIL]
	Scope path: CALL_VFIL:

[CALL_VFIL ::]
	global label address: 0x0042c2

[	DEC HL] Z80:7cyc, R800:1cyc
0042c2: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0042c3: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0042c7: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
0042ca: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0042cc: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0042cf: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
0042d0: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0042d4: cd 59 01

[	PUSH DE] Z80:12cyc, R800:6cyc
0042d7: d5

[	DEC HL] Z80:7cyc, R800:1cyc
0042d8: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0042d9: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0042dd: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0042e0: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0042e2: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0042e5: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
0042e6: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0042ea: cd 59 01

[	PUSH DE] Z80:12cyc, R800:6cyc
0042ed: d5

[	DEC HL] Z80:7cyc, R800:1cyc
0042ee: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0042ef: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0042f3: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0042f6: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0042f8: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0042fb: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0042fc: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004300: cd 59 01

[	EX DE , HL] Z80:5cyc, R800:1cyc
004303: eb

[	POP BC] Z80:11cyc, R800:5cyc
004304: c1

[	POP HL] Z80:11cyc, R800:5cyc
004305: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
004306: d5

[	CALL BSUP_FILVRM] Z80:18cyc, R800:5cyc
004307: cd 1c 43

[	POP HL] Z80:11cyc, R800:5cyc
00430a: e1

[	DEC HL] Z80:7cyc, R800:1cyc
00430b: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00430c: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004310: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004313: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004315: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004318: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004319: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE BSUP_FILVRM]
	Scope path: BSUP_FILVRM:

[BSUP_FILVRM ::]
	global label address: 0x00431c

[	PUSH AF] Z80:12cyc, R800:6cyc
00431c: f5

[	LD A , L] Z80:5cyc, R800:2cyc
00431d: 7d

[	DI] Z80:5cyc, R800:2cyc
00431e: f3

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
00431f: d3 99

[	LD A , H] Z80:5cyc, R800:2cyc
004321: 7c

[	OR A , 0X40] Z80:8cyc, R800:2cyc
004322: f6 40

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
004324: d3 99

[	POP AF] Z80:11cyc, R800:5cyc
004326: f1

[LOOP :]
	label address: 0x004327

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004327: d3 98

[	NOP] Z80:5cyc, R800:1cyc
004329: 00

[	DEC C] Z80:5cyc, R800:1cyc
00432a: 0d

[	JR NZ , LOOP] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00432b: 20 fa

[	DEC B] Z80:5cyc, R800:1cyc
00432d: 05

[	JP P , LOOP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00432e: f2 27 43

[	EI] Z80:5cyc, R800:1cyc
004331: fb

[	RET] Z80:11cyc, R800:5cyc
004332: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE BSUP_LDIRVM]
	Scope path: BSUP_LDIRVM:

[BSUP_LDIRVM ::]
	global label address: 0x004333

[	EX DE , HL] Z80:5cyc, R800:1cyc
004333: eb

[	LD A , L] Z80:5cyc, R800:2cyc
004334: 7d

[	DI] Z80:5cyc, R800:2cyc
004335: f3

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
004336: d3 99

[	LD A , H] Z80:5cyc, R800:2cyc
004338: 7c

[	OR A , 0X40] Z80:8cyc, R800:2cyc
004339: f6 40

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
00433b: d3 99

[	EX DE , HL] Z80:5cyc, R800:1cyc
00433d: eb

[LOOP :]
	label address: 0x00433e

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00433e: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00433f: 23

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004340: d3 98

[	DEC C] Z80:5cyc, R800:1cyc
004342: 0d

[	JR NZ , LOOP] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004343: 20 f9

[	DEC B] Z80:5cyc, R800:1cyc
004345: 05

[	JP P , LOOP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004346: f2 3e 43

[	EI] Z80:5cyc, R800:1cyc
004349: fb

[	RET] Z80:11cyc, R800:5cyc
00434a: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//VRAM.ASM"] end

[	INCLUDE ".//NAMETBL.ASM"] begin
[	SCOPE CALL_BFIL]
	Scope path: CALL_BFIL:

[CALL_BFIL ::]
	global label address: 0x00434b

[	DEC HL] Z80:7cyc, R800:1cyc
00434b: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00434c: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004350: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004353: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004355: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004358: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004359: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00435d: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004360: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004361: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004362: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004366: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004369: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00436b: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00436e: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
00436f: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004373: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004376: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004377: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004378: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00437c: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
00437f: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004381: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004384: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004385: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004389: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
00438c: f5

[	DEC HL] Z80:7cyc, R800:1cyc
00438d: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00438e: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004392: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004395: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004397: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00439a: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
00439b: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00439f: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
0043a2: f5

[	DEC HL] Z80:7cyc, R800:1cyc
0043a3: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0043a4: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0043a8: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0043ab: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043ad: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0043b0: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0043b1: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0043b5: cd 59 01

[	POP BC] Z80:11cyc, R800:5cyc
0043b8: c1

[	LD C , A] Z80:5cyc, R800:2cyc
0043b9: 4f

[	POP AF] Z80:11cyc, R800:5cyc
0043ba: f1

[	LD E , A] Z80:5cyc, R800:2cyc
0043bb: 5f

[	POP AF] Z80:11cyc, R800:5cyc
0043bc: f1

[	LD D , A] Z80:5cyc, R800:2cyc
0043bd: 57

[	POP AF] Z80:11cyc, R800:5cyc
0043be: f1

[	PUSH HL] Z80:12cyc, R800:6cyc
0043bf: e5

[	LD L , A] Z80:5cyc, R800:2cyc
0043c0: 6f

[	OR A , A] Z80:5cyc, R800:1cyc
0043c1: b7

[	JP Z , END_OF_BFIL] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043c2: ca 10 44

[	CP A , 33] Z80:8cyc, R800:2cyc
0043c5: fe 21

[	JP NC , END_OF_BFIL] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043c7: d2 10 44

[	ADD A , E] Z80:5cyc, R800:1cyc
0043ca: 83

[	CP A , 33] Z80:8cyc, R800:2cyc
0043cb: fe 21

[	JP C , SKIP_ADJUST_W] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043cd: da d4 43

[	LD A , 32] Z80:8cyc, R800:2cyc
0043d0: 3e 20

[	SUB A , H] Z80:5cyc, R800:1cyc
0043d2: 94

[	LD E , A] Z80:5cyc, R800:2cyc
0043d3: 5f

[SKIP_ADJUST_W :]
	label address: 0x0043d4

[	LD A , D] Z80:5cyc, R800:2cyc
0043d4: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
0043d5: b7

[	JP Z , END_OF_BFIL] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043d6: ca 10 44

[	CP A , 25] Z80:8cyc, R800:2cyc
0043d9: fe 19

[	JP NC , END_OF_BFIL] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043db: d2 10 44

[	ADD A , B] Z80:5cyc, R800:1cyc
0043de: 80

[	CP A , 25] Z80:8cyc, R800:2cyc
0043df: fe 19

[	JP C , SKIP_ADJUST_H] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043e1: da e8 43

[	LD A , 24] Z80:8cyc, R800:2cyc
0043e4: 3e 18

[	SUB A , D] Z80:5cyc, R800:1cyc
0043e6: 92

[	LD B , A] Z80:5cyc, R800:2cyc
0043e7: 47

[SKIP_ADJUST_H :]
	label address: 0x0043e8

[	LD A , D] Z80:5cyc, R800:2cyc
0043e8: 7a

[	LD H , 0X18 >> 2] Z80:8cyc, R800:2cyc
0043e9: 26 06

[	ADD A , A] Z80:5cyc, R800:1cyc
0043eb: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0043ec: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0043ed: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0043ee: 87

[	RL H] Z80:10cyc, R800:2cyc
0043ef: cb 14

[	ADD A , A] Z80:5cyc, R800:1cyc
0043f1: 87

[	RL H] Z80:10cyc, R800:2cyc
0043f2: cb 14

[	ADD A , L] Z80:5cyc, R800:1cyc
0043f4: 85

[	LD L , A] Z80:5cyc, R800:2cyc
0043f5: 6f

[	JP NC , LOOP_Y] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043f6: d2 fa 43

[	INC H] Z80:5cyc, R800:1cyc
0043f9: 24

[LOOP_Y :]
	label address: 0x0043fa

[	PUSH HL] Z80:12cyc, R800:6cyc
0043fa: e5

[	DI] Z80:5cyc, R800:2cyc
0043fb: f3

[	CALL SETWRT] Z80:18cyc, R800:5cyc
0043fc: cd 53 00

[	LD A , C] Z80:5cyc, R800:2cyc
0043ff: 79

[	LD H , E] Z80:5cyc, R800:2cyc
004400: 63

[LOOP_X :]
	label address: 0x004401

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004401: d3 98

[	NOP] Z80:5cyc, R800:1cyc
004403: 00

[	DEC H] Z80:5cyc, R800:1cyc
004404: 25

[	JR NZ , LOOP_X] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004405: 20 fa

[	POP HL] Z80:11cyc, R800:5cyc
004407: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
004408: d5

[	LD DE , 32] Z80:11cyc, R800:3cyc
004409: 11 20 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00440c: 19

[	POP DE] Z80:11cyc, R800:5cyc
00440d: d1

[	DJNZ LOOP_Y] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00440e: 10 ea

[END_OF_BFIL :]
	label address: 0x004410

[	EI] Z80:5cyc, R800:1cyc
004410: fb

[	POP HL] Z80:11cyc, R800:5cyc
004411: e1

[	DEC HL] Z80:7cyc, R800:1cyc
004412: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004413: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004417: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
00441a: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00441c: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00441f: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004420: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_BCLS]
	Scope path: CALL_BCLS:

[CALL_BCLS ::]
	global label address: 0x004423

[	PUSH HL] Z80:12cyc, R800:6cyc
004423: e5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
004424: cd 91 42

[	LD A , [ IX + WORK_SPRITE_DRIVE_ON ]] Z80:21cyc, R800:7cyc
004427: dd 7e 07

[	PUSH AF] Z80:12cyc, R800:6cyc
00442a: f5

[	XOR A , A] Z80:5cyc, R800:1cyc
00442b: af

[	LD [ IX + WORK_SPRITE_DRIVE_ON ] , A] Z80:8cyc, R800:4cyc
00442c: dd 77 07

[	CALL CLS] Z80:18cyc, R800:5cyc
00442f: cd c3 00

[	POP AF] Z80:11cyc, R800:5cyc
004432: f1

[	LD [ IX + WORK_SPRITE_DRIVE_ON ] , A] Z80:8cyc, R800:4cyc
004433: dd 77 07

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
004436: cd b8 42

[	POP HL] Z80:11cyc, R800:5cyc
004439: e1

[	RET] Z80:11cyc, R800:5cyc
00443a: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//NAMETBL.ASM"] end

[	INCLUDE ".//PCG.ASM"] begin
[	SCOPE CALL_PCG_PARAM_SUB]
	Scope path: CALL_PCG_PARAM_SUB:

[CALL_PCG_PARAM_SUB ::]
	global label address: 0x00443b

[	DEC HL] Z80:7cyc, R800:1cyc
00443b: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00443c: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004440: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004443: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004445: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004448: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004449: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00444d: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004450: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004451: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004452: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004456: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004459: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00445b: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00445e: 23

[	LD IX , CALBAS_FRMEVL] Z80:16cyc, R800:4cyc
00445f: dd 21 64 4c

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004463: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
004466: e5

[	LD IX , CALBAS_FRESTR] Z80:16cyc, R800:4cyc
004467: dd 21 d0 67

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00446b: cd 59 01

[	EX DE , HL] Z80:5cyc, R800:1cyc
00446e: eb

[	POP HL] Z80:11cyc, R800:5cyc
00446f: e1

[	POP AF] Z80:11cyc, R800:5cyc
004470: f1

[	POP BC] Z80:11cyc, R800:5cyc
004471: c1

[	PUSH HL] Z80:12cyc, R800:6cyc
004472: e5

[	LD HL , - 8] Z80:11cyc, R800:3cyc
004473: 21 f8 ff

[	ADD HL , SP] Z80:12cyc, R800:1cyc
004476: 39

[	LD SP , HL] Z80:7cyc, R800:1cyc
004477: f9

[	PUSH BC] Z80:12cyc, R800:6cyc
004478: c5

[	LD B , A] Z80:5cyc, R800:2cyc
004479: 47

[	LD DE , [ DAC + 2 ]] Z80:22cyc, R800:8cyc
00447a: ed 5b f8 f7

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00447e: 1a

[	CP A , 16] Z80:8cyc, R800:2cyc
00447f: fe 10

[	JP NZ , ILLEGAL_FUNCTION_CALL_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004481: c2 80 41

[	PUSH HL] Z80:12cyc, R800:6cyc
004484: e5

[	INC DE] Z80:7cyc, R800:1cyc
004485: 13

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
004486: 1a

[	LD L , A] Z80:5cyc, R800:2cyc
004487: 6f

[	INC DE] Z80:7cyc, R800:1cyc
004488: 13

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
004489: 1a

[	LD H , A] Z80:5cyc, R800:2cyc
00448a: 67

[	POP DE] Z80:11cyc, R800:5cyc
00448b: d1

[	PUSH DE] Z80:12cyc, R800:6cyc
00448c: d5

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
00448d: cd ad 44

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
004490: cd ad 44

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
004493: cd ad 44

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
004496: cd ad 44

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
004499: cd ad 44

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
00449c: cd ad 44

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
00449f: cd ad 44

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
0044a2: cd ad 44

[	LD L , B] Z80:5cyc, R800:2cyc
0044a5: 68

[	LD H , 0] Z80:8cyc, R800:2cyc
0044a6: 26 00

[	ADD HL , HL] Z80:12cyc, R800:1cyc
0044a8: 29

[	ADD HL , HL] Z80:12cyc, R800:1cyc
0044a9: 29

[	ADD HL , HL] Z80:12cyc, R800:1cyc
0044aa: 29

[	POP DE] Z80:11cyc, R800:5cyc
0044ab: d1

[	RET] Z80:11cyc, R800:5cyc
0044ac: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_ONE_BYTE]
	Scope path: GET_ONE_BYTE:

[GET_ONE_BYTE ::]
	global label address: 0x0044ad

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0044ad: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0044ae: 23

[	BIT 6 , A] Z80:10cyc, R800:2cyc
0044af: cb 77

[	JP Z , SKIP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0044b1: ca b6 44

[	ADD A , 9] Z80:8cyc, R800:2cyc
0044b4: c6 09

[SKIP1 :]
	label address: 0x0044b6

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
0044b6: e6 0f

[	ADD A , A] Z80:5cyc, R800:1cyc
0044b8: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0044b9: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0044ba: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0044bb: 87

[	LD C , A] Z80:5cyc, R800:2cyc
0044bc: 4f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0044bd: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0044be: 23

[	BIT 6 , A] Z80:10cyc, R800:2cyc
0044bf: cb 77

[	JP Z , SKIP2] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0044c1: ca c6 44

[	ADD A , 9] Z80:8cyc, R800:2cyc
0044c4: c6 09

[SKIP2 :]
	label address: 0x0044c6

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
0044c6: e6 0f

[	OR A , C] Z80:5cyc, R800:1cyc
0044c8: b1

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
0044c9: 12

[	INC DE] Z80:7cyc, R800:1cyc
0044ca: 13

[	RET] Z80:11cyc, R800:5cyc
0044cb: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_PCG0]
	Scope path: CALL_PCG0:

[CALL_PCG0 ::]
	global label address: 0x0044cc

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
0044cc: cd 3b 44

[	EX DE , HL] Z80:5cyc, R800:1cyc
0044cf: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
0044d0: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
0044d3: cd 33 43

[EXIT_CALL_PCG ::]
	global label address: 0x0044d6

[	LD HL , 8] Z80:11cyc, R800:3cyc
0044d6: 21 08 00

[	ADD HL , SP] Z80:12cyc, R800:1cyc
0044d9: 39

[	LD SP , HL] Z80:7cyc, R800:1cyc
0044da: f9

[	POP HL] Z80:11cyc, R800:5cyc
0044db: e1

[	DEC HL] Z80:7cyc, R800:1cyc
0044dc: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0044dd: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0044e1: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
0044e4: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0044e6: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0044e9: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
0044ea: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_PCG1]
	Scope path: CALL_PCG1:

[CALL_PCG1 ::]
	global label address: 0x0044ed

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
0044ed: cd 3b 44

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
0044f0: 01 00 08

[	ADD HL , BC] Z80:12cyc, R800:1cyc
0044f3: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
0044f4: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
0044f5: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
0044f8: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
0044fb: c3 d6 44

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_PCG2]
	Scope path: CALL_PCG2:

[CALL_PCG2 ::]
	global label address: 0x0044fe

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
0044fe: cd 3b 44

[	LD BC , 0X1000] Z80:11cyc, R800:3cyc
004501: 01 00 10

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004504: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004505: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004506: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004509: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
00450c: c3 d6 44

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_PCG3]
	Scope path: CALL_PCG3:

[CALL_PCG3 ::]
	global label address: 0x00450f

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
00450f: cd 3b 44

[	PUSH HL] Z80:12cyc, R800:6cyc
004512: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
004513: d5

[	EX DE , HL] Z80:5cyc, R800:1cyc
004514: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004515: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004518: cd 33 43

[	POP DE] Z80:11cyc, R800:5cyc
00451b: d1

[	POP HL] Z80:11cyc, R800:5cyc
00451c: e1

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
00451d: 01 00 08

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004520: 09

[	PUSH HL] Z80:12cyc, R800:6cyc
004521: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
004522: d5

[	EX DE , HL] Z80:5cyc, R800:1cyc
004523: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004524: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004527: cd 33 43

[	POP DE] Z80:11cyc, R800:5cyc
00452a: d1

[	POP HL] Z80:11cyc, R800:5cyc
00452b: e1

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
00452c: 01 00 08

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00452f: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004530: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004531: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004534: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
004537: c3 d6 44

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_COL0]
	Scope path: CALL_COL0:

[CALL_COL0 ::]
	global label address: 0x00453a

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
00453a: cd 3b 44

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00453d: 01 00 20

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004540: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004541: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004542: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004545: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
004548: c3 d6 44

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_COL1]
	Scope path: CALL_COL1:

[CALL_COL1 ::]
	global label address: 0x00454b

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
00454b: cd 3b 44

[	LD BC , 0X2800] Z80:11cyc, R800:3cyc
00454e: 01 00 28

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004551: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004552: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004553: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004556: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
004559: c3 d6 44

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_COL2]
	Scope path: CALL_COL2:

[CALL_COL2 ::]
	global label address: 0x00455c

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
00455c: cd 3b 44

[	LD BC , 0X3000] Z80:11cyc, R800:3cyc
00455f: 01 00 30

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004562: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004563: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004564: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004567: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
00456a: c3 d6 44

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_COL3]
	Scope path: CALL_COL3:

[CALL_COL3 ::]
	global label address: 0x00456d

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
00456d: cd 3b 44

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
004570: 01 00 20

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004573: 09

[	PUSH HL] Z80:12cyc, R800:6cyc
004574: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
004575: d5

[	EX DE , HL] Z80:5cyc, R800:1cyc
004576: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004577: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
00457a: cd 33 43

[	POP DE] Z80:11cyc, R800:5cyc
00457d: d1

[	POP HL] Z80:11cyc, R800:5cyc
00457e: e1

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
00457f: 01 00 08

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004582: 09

[	PUSH HL] Z80:12cyc, R800:6cyc
004583: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
004584: d5

[	EX DE , HL] Z80:5cyc, R800:1cyc
004585: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004586: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004589: cd 33 43

[	POP DE] Z80:11cyc, R800:5cyc
00458c: d1

[	POP HL] Z80:11cyc, R800:5cyc
00458d: e1

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
00458e: 01 00 08

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004591: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004592: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004593: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004596: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
004599: c3 d6 44

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_BFNT]
	Scope path: CALL_BFNT:

[CALL_BFNT ::]
	global label address: 0x00459c

[	PUSH HL] Z80:12cyc, R800:6cyc
00459c: e5

[	LD HL , 0] Z80:11cyc, R800:3cyc
00459d: 21 00 00

[	DI] Z80:5cyc, R800:2cyc
0045a0: f3

[	CALL SETWRT] Z80:18cyc, R800:5cyc
0045a1: cd 53 00

[	CALL SET_FONT] Z80:18cyc, R800:5cyc
0045a4: cd b2 45

[	CALL SET_FONT] Z80:18cyc, R800:5cyc
0045a7: cd b2 45

[	CALL SET_FONT] Z80:18cyc, R800:5cyc
0045aa: cd b2 45

[	EI] Z80:5cyc, R800:1cyc
0045ad: fb

[	POP HL] Z80:11cyc, R800:5cyc
0045ae: e1

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
0045af: c3 f7 40

[SET_FONT :]
	label address: 0x0045b2

[	LD HL , [ 0X0004 ]] Z80:17cyc, R800:7cyc
0045b2: 2a 04 00

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
0045b5: 01 00 08

[LOOP1 :]
	label address: 0x0045b8

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0045b8: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0045b9: 23

[	LD D , A] Z80:5cyc, R800:2cyc
0045ba: 57

[	SRL A] Z80:10cyc, R800:2cyc
0045bb: cb 3f

[	OR A , D] Z80:5cyc, R800:1cyc
0045bd: b2

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
0045be: d3 98

[	DEC BC] Z80:7cyc, R800:1cyc
0045c0: 0b

[	LD A , C] Z80:5cyc, R800:2cyc
0045c1: 79

[	OR A , B] Z80:5cyc, R800:1cyc
0045c2: b0

[	JP NZ , LOOP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0045c3: c2 b8 45

[	RET] Z80:11cyc, R800:5cyc
0045c6: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//PCG.ASM"] end

[	INCLUDE ".//SPRITE.ASM"] begin
[	SCOPE CALL_SDRV]
	Scope path: CALL_SDRV:

[CALL_SDRV ::]
	global label address: 0x0045c7

[	DEC HL] Z80:7cyc, R800:1cyc
0045c7: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0045c8: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0045cc: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
0045cf: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0045d1: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0045d4: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0045d5: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0045d9: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
0045dc: e5

[	PUSH AF] Z80:12cyc, R800:6cyc
0045dd: f5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
0045de: cd 91 42

[	POP AF] Z80:11cyc, R800:5cyc
0045e1: f1

[	LD [ IX + WORK_SPRITE_DRIVE_ON ] , A] Z80:8cyc, R800:4cyc
0045e2: dd 77 07

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
0045e5: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
0045e8: fb

[	POP HL] Z80:11cyc, R800:5cyc
0045e9: e1

[	DEC HL] Z80:7cyc, R800:1cyc
0045ea: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0045eb: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0045ef: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
0045f2: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0045f4: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0045f7: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
0045f8: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SSTP]
	Scope path: CALL_SSTP:

[CALL_SSTP ::]
	global label address: 0x0045fb

[	DEC HL] Z80:7cyc, R800:1cyc
0045fb: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0045fc: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004600: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004603: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004605: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004608: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004609: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00460d: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
004610: e5

[	PUSH AF] Z80:12cyc, R800:6cyc
004611: f5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
004612: cd 91 42

[	POP AF] Z80:11cyc, R800:5cyc
004615: f1

[	LD [ IX + WORK_SPRITE_STOP_AUTO_MOVE ] , A] Z80:8cyc, R800:4cyc
004616: dd 77 08

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
004619: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
00461c: fb

[	POP HL] Z80:11cyc, R800:5cyc
00461d: e1

[	DEC HL] Z80:7cyc, R800:1cyc
00461e: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00461f: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004623: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004626: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004628: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00462b: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
00462c: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SPUT]
	Scope path: CALL_SPUT:

[CALL_SPUT ::]
	global label address: 0x00462f

[	DEC HL] Z80:7cyc, R800:1cyc
00462f: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004630: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004634: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004637: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004639: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00463c: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
00463d: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004641: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
004644: e5

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
004645: e6 1f

[	ADD A , A] Z80:5cyc, R800:1cyc
004647: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004648: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004649: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
00464a: 87

[	LD H , 0] Z80:8cyc, R800:2cyc
00464b: 26 00

[	RL H] Z80:10cyc, R800:2cyc
00464d: cb 14

[	LD L , A] Z80:5cyc, R800:2cyc
00464f: 6f

[	LD DE , WORK_SPRITE_INFO + 12] Z80:11cyc, R800:3cyc
004650: 11 15 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004653: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
004654: eb

[	POP HL] Z80:11cyc, R800:5cyc
004655: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
004656: d5

[	DEC HL] Z80:7cyc, R800:1cyc
004657: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004658: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00465c: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
00465f: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004661: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004664: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004665: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004669: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
00466c: f5

[	DEC HL] Z80:7cyc, R800:1cyc
00466d: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00466e: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004672: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004675: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004677: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00467a: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
00467b: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00467f: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004682: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004683: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004684: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004688: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
00468b: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00468d: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004690: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004691: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004695: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004698: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004699: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00469a: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00469e: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0046a1: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0046a3: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0046a6: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0046a7: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0046ab: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
0046ae: f5

[	EXX] Z80:5cyc, R800:1cyc
0046af: d9

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
0046b0: cd 91 42

[	LD HL , 8] Z80:11cyc, R800:3cyc
0046b3: 21 08 00

[	ADD HL , SP] Z80:12cyc, R800:1cyc
0046b6: 39

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0046b7: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0046b8: 23

[	LD H , [ HL ]] Z80:8cyc, R800:4cyc
0046b9: 66

[	LD L , E] Z80:5cyc, R800:2cyc
0046ba: 6b

[	LD E , IXL] Z80:10cyc, R800:2cyc
0046bb: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
0046bd: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0046bf: 19

[	DI] Z80:5cyc, R800:2cyc
0046c0: f3

[	LD E , 0] Z80:8cyc, R800:2cyc
0046c1: 1e 00

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
0046c3: 73

[	DEC HL] Z80:7cyc, R800:1cyc
0046c4: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
0046c5: 73

[	DEC HL] Z80:7cyc, R800:1cyc
0046c6: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
0046c7: 73

[	DEC HL] Z80:7cyc, R800:1cyc
0046c8: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
0046c9: 73

[	DEC HL] Z80:7cyc, R800:1cyc
0046ca: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
0046cb: 73

[	DEC HL] Z80:7cyc, R800:1cyc
0046cc: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
0046cd: 73

[	DEC HL] Z80:7cyc, R800:1cyc
0046ce: 2b

[	POP AF] Z80:11cyc, R800:5cyc
0046cf: f1

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0046d0: 77

[	DEC HL] Z80:7cyc, R800:1cyc
0046d1: 2b

[	POP AF] Z80:11cyc, R800:5cyc
0046d2: f1

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0046d3: 77

[	DEC HL] Z80:7cyc, R800:1cyc
0046d4: 2b

[	POP DE] Z80:11cyc, R800:5cyc
0046d5: d1

[	POP BC] Z80:11cyc, R800:5cyc
0046d6: c1

[	XOR A , A] Z80:5cyc, R800:1cyc
0046d7: af

[	LD E , A] Z80:5cyc, R800:2cyc
0046d8: 5f

[	SRA D] Z80:10cyc, R800:2cyc
0046d9: cb 2a

[	RR E] Z80:10cyc, R800:2cyc
0046db: cb 1b

[	LD C , A] Z80:5cyc, R800:2cyc
0046dd: 4f

[	SRA B] Z80:10cyc, R800:2cyc
0046de: cb 28

[	RR C] Z80:10cyc, R800:2cyc
0046e0: cb 19

[	LD [ HL ] , B] Z80:8cyc, R800:4cyc
0046e2: 70

[	DEC HL] Z80:7cyc, R800:1cyc
0046e3: 2b

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
0046e4: 71

[	DEC HL] Z80:7cyc, R800:1cyc
0046e5: 2b

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
0046e6: 72

[	DEC HL] Z80:7cyc, R800:1cyc
0046e7: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
0046e8: 73

[	DEC HL] Z80:7cyc, R800:1cyc
0046e9: 2b

[	INC A] Z80:5cyc, R800:1cyc
0046ea: 3c

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0046eb: 77

[	EI] Z80:5cyc, R800:1cyc
0046ec: fb

[	POP DE] Z80:11cyc, R800:5cyc
0046ed: d1

[	EXX] Z80:5cyc, R800:1cyc
0046ee: d9

[	PUSH HL] Z80:12cyc, R800:6cyc
0046ef: e5

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
0046f0: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
0046f3: fb

[	POP HL] Z80:11cyc, R800:5cyc
0046f4: e1

[	DEC HL] Z80:7cyc, R800:1cyc
0046f5: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0046f6: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0046fa: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
0046fd: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0046ff: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004702: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004703: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SLNK]
	Scope path: CALL_SLNK:

[CALL_SLNK ::]
	global label address: 0x004706

[	DEC HL] Z80:7cyc, R800:1cyc
004706: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004707: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00470b: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
00470e: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004710: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004713: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004714: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004718: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
00471b: e5

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
00471c: e6 1f

[	ADD A , A] Z80:5cyc, R800:1cyc
00471e: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
00471f: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004720: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004721: 87

[	LD H , 0] Z80:8cyc, R800:2cyc
004722: 26 00

[	RL H] Z80:10cyc, R800:2cyc
004724: cb 14

[	LD L , A] Z80:5cyc, R800:2cyc
004726: 6f

[	LD DE , WORK_SPRITE_INFO + 12] Z80:11cyc, R800:3cyc
004727: 11 15 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00472a: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
00472b: eb

[	POP HL] Z80:11cyc, R800:5cyc
00472c: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
00472d: d5

[	DEC HL] Z80:7cyc, R800:1cyc
00472e: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00472f: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004733: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004736: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004738: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00473b: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
00473c: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004740: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004743: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004744: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004745: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004749: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
00474c: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00474e: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004751: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004752: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004756: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004759: f5

[	DEC HL] Z80:7cyc, R800:1cyc
00475a: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00475b: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00475f: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004762: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004764: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004767: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004768: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00476c: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
00476f: f5

[	EXX] Z80:5cyc, R800:1cyc
004770: d9

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
004771: cd 91 42

[	LD HL , 6] Z80:11cyc, R800:3cyc
004774: 21 06 00

[	ADD HL , SP] Z80:12cyc, R800:1cyc
004777: 39

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004778: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004779: 23

[	LD H , [ HL ]] Z80:8cyc, R800:4cyc
00477a: 66

[	LD L , E] Z80:5cyc, R800:2cyc
00477b: 6b

[	LD E , IXL] Z80:10cyc, R800:2cyc
00477c: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
00477e: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004780: 19

[	DI] Z80:5cyc, R800:2cyc
004781: f3

[	LD E , 0] Z80:8cyc, R800:2cyc
004782: 1e 00

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004784: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004785: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004786: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004787: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004788: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004789: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
00478a: 73

[	DEC HL] Z80:7cyc, R800:1cyc
00478b: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
00478c: 73

[	DEC HL] Z80:7cyc, R800:1cyc
00478d: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
00478e: 73

[	DEC HL] Z80:7cyc, R800:1cyc
00478f: 2b

[	POP AF] Z80:11cyc, R800:5cyc
004790: f1

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004791: 77

[	DEC HL] Z80:7cyc, R800:1cyc
004792: 2b

[	POP AF] Z80:11cyc, R800:5cyc
004793: f1

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004794: 77

[	DEC HL] Z80:7cyc, R800:1cyc
004795: 2b

[	POP DE] Z80:11cyc, R800:5cyc
004796: d1

[	LD E , 0] Z80:8cyc, R800:2cyc
004797: 1e 00

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004799: 73

[	DEC HL] Z80:7cyc, R800:1cyc
00479a: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
00479b: 73

[	DEC HL] Z80:7cyc, R800:1cyc
00479c: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
00479d: 73

[	DEC HL] Z80:7cyc, R800:1cyc
00479e: 2b

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
00479f: 72

[	DEC HL] Z80:7cyc, R800:1cyc
0047a0: 2b

[	LD A , 2] Z80:8cyc, R800:2cyc
0047a1: 3e 02

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0047a3: 77

[	EI] Z80:5cyc, R800:1cyc
0047a4: fb

[	POP DE] Z80:11cyc, R800:5cyc
0047a5: d1

[	EXX] Z80:5cyc, R800:1cyc
0047a6: d9

[	PUSH HL] Z80:12cyc, R800:6cyc
0047a7: e5

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
0047a8: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
0047ab: fb

[	POP HL] Z80:11cyc, R800:5cyc
0047ac: e1

[	DEC HL] Z80:7cyc, R800:1cyc
0047ad: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0047ae: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0047b2: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
0047b5: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0047b7: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0047ba: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
0047bb: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SMOV]
	Scope path: CALL_SMOV:

[CALL_SMOV ::]
	global label address: 0x0047be

[	DEC HL] Z80:7cyc, R800:1cyc
0047be: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0047bf: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0047c3: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
0047c6: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0047c8: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0047cb: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0047cc: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0047d0: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
0047d3: e5

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
0047d4: e6 1f

[	ADD A , A] Z80:5cyc, R800:1cyc
0047d6: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0047d7: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0047d8: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0047d9: 87

[	LD H , 0] Z80:8cyc, R800:2cyc
0047da: 26 00

[	RL H] Z80:10cyc, R800:2cyc
0047dc: cb 14

[	LD L , A] Z80:5cyc, R800:2cyc
0047de: 6f

[	LD DE , WORK_SPRITE_INFO + 12] Z80:11cyc, R800:3cyc
0047df: 11 15 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0047e2: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
0047e3: eb

[	POP HL] Z80:11cyc, R800:5cyc
0047e4: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
0047e5: d5

[	DEC HL] Z80:7cyc, R800:1cyc
0047e6: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0047e7: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0047eb: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0047ee: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0047f0: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0047f3: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
0047f4: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0047f8: cd 59 01

[	PUSH DE] Z80:12cyc, R800:6cyc
0047fb: d5

[	DEC HL] Z80:7cyc, R800:1cyc
0047fc: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0047fd: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004801: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004804: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004806: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004809: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
00480a: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00480e: cd 59 01

[	PUSH DE] Z80:12cyc, R800:6cyc
004811: d5

[	DEC HL] Z80:7cyc, R800:1cyc
004812: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004813: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004817: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
00481a: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00481c: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00481f: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
004820: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004824: cd 59 01

[	LD A , D] Z80:5cyc, R800:2cyc
004827: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
004828: b7

[	JP P , SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004829: f2 2f 48

[	LD DE , 0] Z80:11cyc, R800:3cyc
00482c: 11 00 00

[SKIP :]
	label address: 0x00482f

[	PUSH DE] Z80:12cyc, R800:6cyc
00482f: d5

[	EXX] Z80:5cyc, R800:1cyc
004830: d9

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
004831: cd 91 42

[	LD HL , 6] Z80:11cyc, R800:3cyc
004834: 21 06 00

[	ADD HL , SP] Z80:12cyc, R800:1cyc
004837: 39

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004838: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004839: 23

[	LD H , [ HL ]] Z80:8cyc, R800:4cyc
00483a: 66

[	LD L , E] Z80:5cyc, R800:2cyc
00483b: 6b

[	LD E , IXL] Z80:10cyc, R800:2cyc
00483c: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
00483e: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004840: 19

[	DI] Z80:5cyc, R800:2cyc
004841: f3

[	POP IY] Z80:16cyc, R800:6cyc
004842: fd e1

[	POP DE] Z80:11cyc, R800:5cyc
004844: d1

[	POP BC] Z80:11cyc, R800:5cyc
004845: c1

[	LD [ HL ] , B] Z80:8cyc, R800:4cyc
004846: 70

[	DEC HL] Z80:7cyc, R800:1cyc
004847: 2b

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
004848: 71

[	DEC HL] Z80:7cyc, R800:1cyc
004849: 2b

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
00484a: 72

[	DEC HL] Z80:7cyc, R800:1cyc
00484b: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
00484c: 73

[	DEC HL] Z80:7cyc, R800:1cyc
00484d: 2b

[	LD E , IYL] Z80:10cyc, R800:2cyc
00484e: fd 5d

[	LD D , IYH] Z80:10cyc, R800:2cyc
004850: fd 54

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004852: 72

[	DEC HL] Z80:7cyc, R800:1cyc
004853: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004854: 73

[	EI] Z80:5cyc, R800:1cyc
004855: fb

[	POP DE] Z80:11cyc, R800:5cyc
004856: d1

[	EXX] Z80:5cyc, R800:1cyc
004857: d9

[	PUSH HL] Z80:12cyc, R800:6cyc
004858: e5

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
004859: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
00485c: fb

[	POP HL] Z80:11cyc, R800:5cyc
00485d: e1

[	DEC HL] Z80:7cyc, R800:1cyc
00485e: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00485f: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004863: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004866: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004868: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00486b: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
00486c: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SEPT]
	Scope path: CALL_SEPT:

[CALL_SEPT ::]
	global label address: 0x00486f

[	DEC HL] Z80:7cyc, R800:1cyc
00486f: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004870: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004874: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004877: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004879: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00487c: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
00487d: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004881: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
004884: e5

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
004885: e6 1f

[	ADD A , A] Z80:5cyc, R800:1cyc
004887: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004888: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004889: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
00488a: 87

[	LD H , 0] Z80:8cyc, R800:2cyc
00488b: 26 00

[	RL H] Z80:10cyc, R800:2cyc
00488d: cb 14

[	LD L , A] Z80:5cyc, R800:2cyc
00488f: 6f

[	LD DE , WORK_SPRITE_INFO] Z80:11cyc, R800:3cyc
004890: 11 09 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004893: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
004894: eb

[	POP HL] Z80:11cyc, R800:5cyc
004895: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
004896: d5

[	DEC HL] Z80:7cyc, R800:1cyc
004897: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004898: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00489c: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
00489f: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0048a1: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0048a4: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0048a5: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048a9: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
0048ac: f5

[	DEC HL] Z80:7cyc, R800:1cyc
0048ad: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0048ae: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048b2: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0048b5: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0048b7: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0048ba: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0048bb: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048bf: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
0048c2: f5

[	DEC HL] Z80:7cyc, R800:1cyc
0048c3: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0048c4: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048c8: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0048cb: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0048cd: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0048d0: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0048d1: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048d5: cd 59 01

[	DEC A] Z80:5cyc, R800:1cyc
0048d8: 3d

[	AND A , 127] Z80:8cyc, R800:2cyc
0048d9: e6 7f

[	INC A] Z80:5cyc, R800:1cyc
0048db: 3c

[	PUSH AF] Z80:12cyc, R800:6cyc
0048dc: f5

[	DEC HL] Z80:7cyc, R800:1cyc
0048dd: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0048de: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048e2: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0048e5: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0048e7: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0048ea: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0048eb: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048ef: cd 59 01

[	AND A , 1] Z80:8cyc, R800:2cyc
0048f2: e6 01

[	PUSH AF] Z80:12cyc, R800:6cyc
0048f4: f5

[	EXX] Z80:5cyc, R800:1cyc
0048f5: d9

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
0048f6: cd 91 42

[	LD HL , 8] Z80:11cyc, R800:3cyc
0048f9: 21 08 00

[	ADD HL , SP] Z80:12cyc, R800:1cyc
0048fc: 39

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0048fd: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0048fe: 23

[	LD H , [ HL ]] Z80:8cyc, R800:4cyc
0048ff: 66

[	LD L , E] Z80:5cyc, R800:2cyc
004900: 6b

[	LD E , IXL] Z80:10cyc, R800:2cyc
004901: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
004903: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004905: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
004906: eb

[	LD IYL , E] Z80:10cyc, R800:2cyc
004907: fd 6b

[	LD IYH , D] Z80:10cyc, R800:2cyc
004909: fd 62

[	DI] Z80:5cyc, R800:2cyc
00490b: f3

[	XOR A , A] Z80:5cyc, R800:1cyc
00490c: af

[	LD [ IY + 11 ] , A] Z80:8cyc, R800:4cyc
00490d: fd 77 0b

[	POP AF] Z80:11cyc, R800:5cyc
004910: f1

[	LD [ IY + 7 ] , A] Z80:8cyc, R800:4cyc
004911: fd 77 07

[	LD A , 0X80] Z80:8cyc, R800:2cyc
004914: 3e 80

[	LD [ IY + 8 ] , A] Z80:8cyc, R800:4cyc
004916: fd 77 08

[	POP AF] Z80:11cyc, R800:5cyc
004919: f1

[	LD [ IY + 13 ] , A] Z80:8cyc, R800:4cyc
00491a: fd 77 0d

[	POP AF] Z80:11cyc, R800:5cyc
00491d: f1

[	LD [ IY + 14 ] , A] Z80:8cyc, R800:4cyc
00491e: fd 77 0e

[	LD E , [ IY + 1 ]] Z80:21cyc, R800:7cyc
004921: fd 5e 01

[	RLC E] Z80:10cyc, R800:2cyc
004924: cb 03

[	LD D , [ IY + 2 ]] Z80:21cyc, R800:7cyc
004926: fd 56 02

[	RL D] Z80:10cyc, R800:2cyc
004929: cb 12

[	SUB A , D] Z80:5cyc, R800:1cyc
00492b: 92

[	LD D , A] Z80:5cyc, R800:2cyc
00492c: 57

[	JP NC , SKIP_BIGGER_THAN_EP_Y] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00492d: d2 3b 49

[	NEG] Z80:10cyc, R800:2cyc
004930: ed 44

[	LD D , A] Z80:5cyc, R800:2cyc
004932: 57

[	LD A , [ IY + 11 ]] Z80:21cyc, R800:7cyc
004933: fd 7e 0b

[	OR A , 0X80] Z80:8cyc, R800:2cyc
004936: f6 80

[	LD [ IY + 11 ] , A] Z80:8cyc, R800:4cyc
004938: fd 77 0b

[SKIP_BIGGER_THAN_EP_Y :]
	label address: 0x00493b

[	POP AF] Z80:11cyc, R800:5cyc
00493b: f1

[	LD [ IY + 15 ] , A] Z80:8cyc, R800:4cyc
00493c: fd 77 0f

[	LD E , [ IY + 3 ]] Z80:21cyc, R800:7cyc
00493f: fd 5e 03

[	RLC E] Z80:10cyc, R800:2cyc
004942: cb 03

[	LD B , [ IY + 4 ]] Z80:21cyc, R800:7cyc
004944: fd 46 04

[	RL B] Z80:10cyc, R800:2cyc
004947: cb 10

[	SUB A , B] Z80:5cyc, R800:1cyc
004949: 90

[	LD B , A] Z80:5cyc, R800:2cyc
00494a: 47

[	JP NC , SKIP_BIGGER_THAN_EP_X] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00494b: d2 59 49

[	NEG] Z80:10cyc, R800:2cyc
00494e: ed 44

[	LD B , A] Z80:5cyc, R800:2cyc
004950: 47

[	LD A , [ IY + 11 ]] Z80:21cyc, R800:7cyc
004951: fd 7e 0b

[	OR A , 0X40] Z80:8cyc, R800:2cyc
004954: f6 40

[	LD [ IY + 11 ] , A] Z80:8cyc, R800:4cyc
004956: fd 77 0b

[SKIP_BIGGER_THAN_EP_X :]
	label address: 0x004959

[	LD A , B] Z80:5cyc, R800:2cyc
004959: 78

[	CP A , D] Z80:5cyc, R800:1cyc
00495a: ba

[	JP NC , SKIP_LONG_BOUNDARY_IS_X] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00495b: d2 69 49

[	LD A , D] Z80:5cyc, R800:2cyc
00495e: 7a

[	LD D , B] Z80:5cyc, R800:2cyc
00495f: 50

[	LD B , A] Z80:5cyc, R800:2cyc
004960: 47

[	LD A , [ IY + 11 ]] Z80:21cyc, R800:7cyc
004961: fd 7e 0b

[	OR A , 0X01] Z80:8cyc, R800:2cyc
004964: f6 01

[	LD [ IY + 11 ] , A] Z80:8cyc, R800:4cyc
004966: fd 77 0b

[SKIP_LONG_BOUNDARY_IS_X :]
	label address: 0x004969

[	LD [ IY + 9 ] , B] Z80:8cyc, R800:4cyc
004969: fd 70 09

[	LD [ IY + 10 ] , D] Z80:8cyc, R800:4cyc
00496c: fd 72 0a

[	XOR A , A] Z80:5cyc, R800:1cyc
00496f: af

[	LD [ IY + 12 ] , A] Z80:8cyc, R800:4cyc
004970: fd 77 0c

[	EI] Z80:5cyc, R800:1cyc
004973: fb

[	POP DE] Z80:11cyc, R800:5cyc
004974: d1

[	EXX] Z80:5cyc, R800:1cyc
004975: d9

[	PUSH HL] Z80:12cyc, R800:6cyc
004976: e5

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
004977: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
00497a: fb

[	POP HL] Z80:11cyc, R800:5cyc
00497b: e1

[	DEC HL] Z80:7cyc, R800:1cyc
00497c: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00497d: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004981: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004984: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004986: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004989: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
00498a: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SSEE]
	Scope path: CALL_SSEE:

[CALL_SSEE ::]
	global label address: 0x00498d

[	DEC HL] Z80:7cyc, R800:1cyc
00498d: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00498e: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004992: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004995: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004997: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00499a: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
00499b: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00499f: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
0049a2: e5

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
0049a3: e6 1f

[	ADD A , A] Z80:5cyc, R800:1cyc
0049a5: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0049a6: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0049a7: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0049a8: 87

[	LD H , 0] Z80:8cyc, R800:2cyc
0049a9: 26 00

[	RL H] Z80:10cyc, R800:2cyc
0049ab: cb 14

[	LD L , A] Z80:5cyc, R800:2cyc
0049ad: 6f

[	LD DE , WORK_SPRITE_INFO] Z80:11cyc, R800:3cyc
0049ae: 11 09 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0049b1: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
0049b2: eb

[	POP HL] Z80:11cyc, R800:5cyc
0049b3: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
0049b4: d5

[	DEC HL] Z80:7cyc, R800:1cyc
0049b5: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0049b6: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0049ba: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0049bd: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0049bf: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0049c2: 23

[	XOR A , A] Z80:5cyc, R800:1cyc
0049c3: af

[	LD [ SUBFLG ] , A] Z80:14cyc, R800:6cyc
0049c4: 32 a5 f6

[	LD IX , CALBAS_PTRGET] Z80:16cyc, R800:4cyc
0049c7: dd 21 a4 5e

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0049cb: cd 59 01

[	DEC DE] Z80:7cyc, R800:1cyc
0049ce: 1b

[	DEC DE] Z80:7cyc, R800:1cyc
0049cf: 1b

[	DEC DE] Z80:7cyc, R800:1cyc
0049d0: 1b

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0049d1: 1a

[	CP A , 2] Z80:8cyc, R800:2cyc
0049d2: fe 02

[	JP NZ , TYPE_MISMATCH_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0049d4: c2 89 41

[	INC DE] Z80:7cyc, R800:1cyc
0049d7: 13

[	INC DE] Z80:7cyc, R800:1cyc
0049d8: 13

[	INC DE] Z80:7cyc, R800:1cyc
0049d9: 13

[	PUSH DE] Z80:12cyc, R800:6cyc
0049da: d5

[	PUSH HL] Z80:12cyc, R800:6cyc
0049db: e5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
0049dc: cd 91 42

[	POP DE] Z80:11cyc, R800:5cyc
0049df: d1

[	POP BC] Z80:11cyc, R800:5cyc
0049e0: c1

[	POP HL] Z80:11cyc, R800:5cyc
0049e1: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
0049e2: d5

[	LD E , IXL] Z80:10cyc, R800:2cyc
0049e3: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
0049e5: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0049e7: 19

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0049e8: 7e

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
0049e9: 02

[	INC BC] Z80:7cyc, R800:1cyc
0049ea: 03

[	XOR A , A] Z80:5cyc, R800:1cyc
0049eb: af

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
0049ec: 02

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
0049ed: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
0049f0: fb

[	POP HL] Z80:11cyc, R800:5cyc
0049f1: e1

[	DEC HL] Z80:7cyc, R800:1cyc
0049f2: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0049f3: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0049f7: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
0049fa: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0049fc: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0049ff: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004a00: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE SPRITE_DRIVER]
	Scope path: SPRITE_DRIVER:

[SPRITE_DRIVER ::]
	global label address: 0x004a03

[	LD A , [ IX + WORK_SPRITE_DRIVE_ON ]] Z80:21cyc, R800:7cyc
004a03: dd 7e 07

[	OR A , A] Z80:5cyc, R800:1cyc
004a06: b7

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
004a07: c8

[	LD A , [ IX + WORK_SPRITE_STOP_AUTO_MOVE ]] Z80:21cyc, R800:7cyc
004a08: dd 7e 08

[	OR A , A] Z80:5cyc, R800:1cyc
004a0b: b7

[	JP NZ , SKIP_AUTO_MOVE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a0c: c2 78 4a

[	LD B , 32] Z80:8cyc, R800:2cyc
004a0f: 06 20

[	PUSH IX] Z80:17cyc, R800:7cyc
004a11: dd e5

[	POP HL] Z80:11cyc, R800:5cyc
004a13: e1

[	LD DE , WORK_SPRITE_INFO] Z80:11cyc, R800:3cyc
004a14: 11 09 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004a17: 19

[SPRITE_AUTO_MOVE :]
	label address: 0x004a18

[	PUSH BC] Z80:12cyc, R800:6cyc
004a18: c5

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004a19: 7e

[	DEC A] Z80:5cyc, R800:1cyc
004a1a: 3d

[	JP NZ , SPRITE_AUTO_MOVE_NEXT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a1b: c2 71 4a

[	LD DE , 7] Z80:11cyc, R800:3cyc
004a1e: 11 07 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004a21: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004a22: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004a23: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004a24: 56

[	LD A , D] Z80:5cyc, R800:2cyc
004a25: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
004a26: b7

[	JP M , SPRITE_BRESENHAM_MOVE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a27: fa be 4a

[	OR A , E] Z80:5cyc, R800:1cyc
004a2a: b3

[	LD BC , - 8] Z80:11cyc, R800:3cyc
004a2b: 01 f8 ff

[	JP Z , SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a2e: ca 70 4a

[	DEC DE] Z80:7cyc, R800:1cyc
004a31: 1b

[	DEC HL] Z80:7cyc, R800:1cyc
004a32: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004a33: 73

[	INC HL] Z80:7cyc, R800:1cyc
004a34: 23

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004a35: 72

[	INC HL] Z80:7cyc, R800:1cyc
004a36: 23

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004a37: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004a38: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004a39: 56

[	LD C , - 10 + 1] Z80:8cyc, R800:2cyc
004a3a: 0e f7

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004a3c: 09

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
004a3d: 4e

[	INC HL] Z80:7cyc, R800:1cyc
004a3e: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
004a3f: 46

[	EX DE , HL] Z80:5cyc, R800:1cyc
004a40: eb

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004a41: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004a42: eb

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004a43: 72

[	DEC HL] Z80:7cyc, R800:1cyc
004a44: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004a45: 73

[	LD A , D] Z80:5cyc, R800:2cyc
004a46: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
004a47: b7

[	LD BC , - 1] Z80:11cyc, R800:3cyc
004a48: 01 ff ff

[	JP M , OUTSIDE_SPRITE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a4b: fa 6a 4a

[	LD BC , - 1 + 11] Z80:11cyc, R800:3cyc
004a4e: 01 0a 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004a51: 09

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004a52: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004a53: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004a54: 56

[	LD BC , - 12 + 3] Z80:11cyc, R800:3cyc
004a55: 01 f7 ff

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004a58: 09

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
004a59: 4e

[	INC HL] Z80:7cyc, R800:1cyc
004a5a: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
004a5b: 46

[	EX DE , HL] Z80:5cyc, R800:1cyc
004a5c: eb

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004a5d: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004a5e: eb

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004a5f: 72

[	DEC HL] Z80:7cyc, R800:1cyc
004a60: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004a61: 73

[	LD A , D] Z80:5cyc, R800:2cyc
004a62: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
004a63: b7

[	LD BC , - 3] Z80:11cyc, R800:3cyc
004a64: 01 fd ff

[	JP P , SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a67: f2 70 4a

[OUTSIDE_SPRITE :]
	label address: 0x004a6a

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004a6a: 09

[	XOR A , A] Z80:5cyc, R800:1cyc
004a6b: af

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004a6c: 77

[	JP SPRITE_AUTO_MOVE_NEXT] Z80:11cyc, R800:5cyc
004a6d: c3 71 4a

[SPRITE_AUTO_MOVE_NEXT_PRE :]
	label address: 0x004a70

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004a70: 09

[SPRITE_AUTO_MOVE_NEXT :]
	label address: 0x004a71

[	LD DE , 16] Z80:11cyc, R800:3cyc
004a71: 11 10 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004a74: 19

[	POP BC] Z80:11cyc, R800:5cyc
004a75: c1

[	DJNZ SPRITE_AUTO_MOVE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004a76: 10 a0

[SKIP_AUTO_MOVE :]
	label address: 0x004a78

[	LD HL , 0X1B00 | 0X4000] Z80:11cyc, R800:3cyc
004a78: 21 00 5b

[	LD A , L] Z80:5cyc, R800:2cyc
004a7b: 7d

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
004a7c: d3 99

[	LD A , H] Z80:5cyc, R800:2cyc
004a7e: 7c

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
004a7f: d3 99

[	LD E , IXL] Z80:10cyc, R800:2cyc
004a81: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
004a83: dd 54

[	LD HL , WORK_SPRITE_INFO] Z80:11cyc, R800:3cyc
004a85: 21 09 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004a88: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
004a89: eb

[	LD A , [ IX + WORK_1ST_SPRITE ]] Z80:21cyc, R800:7cyc
004a8a: dd 7e 06

[	ADD A , 19] Z80:8cyc, R800:2cyc
004a8d: c6 13

[	AND A , 31] Z80:8cyc, R800:2cyc
004a8f: e6 1f

[	LD [ IX + WORK_1ST_SPRITE ] , A] Z80:8cyc, R800:4cyc
004a91: dd 77 06

[	ADD A , A] Z80:5cyc, R800:1cyc
004a94: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004a95: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004a96: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004a97: 87

[	LD L , A] Z80:5cyc, R800:2cyc
004a98: 6f

[	LD H , 0] Z80:8cyc, R800:2cyc
004a99: 26 00

[	RL H] Z80:10cyc, R800:2cyc
004a9b: cb 14

[	LD B , 32] Z80:8cyc, R800:2cyc
004a9d: 06 20

[LOOP1 :]
	label address: 0x004a9f

[	PUSH HL] Z80:12cyc, R800:6cyc
004a9f: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
004aa0: c5

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004aa1: 19

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004aa2: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004aa3: 23

[	OR A , A] Z80:5cyc, R800:1cyc
004aa4: b7

[	JP Z , HIDE_SPRITE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004aa5: ca 70 4b

[	DEC A] Z80:5cyc, R800:1cyc
004aa8: 3d

[	JP NZ , JOIN_SPRITE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004aa9: c2 98 4b

[	JP NORMAL_SPRITE] Z80:11cyc, R800:5cyc
004aac: c3 7d 4b

[NEXT_SPRITE ::]
	global label address: 0x004aaf

[	POP BC] Z80:11cyc, R800:5cyc
004aaf: c1

[	POP HL] Z80:11cyc, R800:5cyc
004ab0: e1

[	LD A , L] Z80:5cyc, R800:2cyc
004ab1: 7d

[	ADD A , 11 * 16] Z80:8cyc, R800:2cyc
004ab2: c6 b0

[	LD L , A] Z80:5cyc, R800:2cyc
004ab4: 6f

[	LD A , H] Z80:5cyc, R800:2cyc
004ab5: 7c

[	ADC A , 0] Z80:8cyc, R800:2cyc
004ab6: ce 00

[	AND A , 1] Z80:8cyc, R800:2cyc
004ab8: e6 01

[	LD H , A] Z80:5cyc, R800:2cyc
004aba: 67

[	DJNZ LOOP1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004abb: 10 e2

[	RET] Z80:11cyc, R800:5cyc
004abd: c9

[SPRITE_BRESENHAM_MOVE :]
	label address: 0x004abe

[	INC HL] Z80:7cyc, R800:1cyc
004abe: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
004abf: 46

[	INC HL] Z80:7cyc, R800:1cyc
004ac0: 23

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
004ac1: 4e

[	INC HL] Z80:7cyc, R800:1cyc
004ac2: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004ac3: 56

[	INC HL] Z80:7cyc, R800:1cyc
004ac4: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004ac5: 7e

[	ADD A , C] Z80:5cyc, R800:1cyc
004ac6: 81

[	CP A , B] Z80:5cyc, R800:1cyc
004ac7: b8

[	LD C , 1] Z80:8cyc, R800:2cyc
004ac8: 0e 01

[	JR C , SKIP_ADD] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004aca: 38 02

[	INC C] Z80:5cyc, R800:1cyc
004acc: 0c

[	SUB A , B] Z80:5cyc, R800:1cyc
004acd: 90

[SKIP_ADD :]
	label address: 0x004ace

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004ace: 77

[	LD A , D] Z80:5cyc, R800:2cyc
004acf: 7a

[	INC HL] Z80:7cyc, R800:1cyc
004ad0: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
004ad1: 46

[	DEC C] Z80:5cyc, R800:1cyc
004ad2: 0d

[	JP Z , SKIP_VECTOR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004ad3: ca d7 4a

[	LD C , B] Z80:5cyc, R800:2cyc
004ad6: 48

[SKIP_VECTOR :]
	label address: 0x004ad7

[	INC HL] Z80:7cyc, R800:1cyc
004ad7: 23

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004ad8: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004ad9: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004ada: 56

[	PUSH DE] Z80:12cyc, R800:6cyc
004adb: d5

[	BIT 0 , A] Z80:10cyc, R800:2cyc
004adc: cb 47

[	JP Z , LONG_SIDE_IS_X] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004ade: ca e4 4a

[LONG_SIDE_IS_Y :]
	label address: 0x004ae1

[	LD D , B] Z80:5cyc, R800:2cyc
004ae1: 50

[	LD B , C] Z80:5cyc, R800:2cyc
004ae2: 41

[	LD C , D] Z80:5cyc, R800:2cyc
004ae3: 4a

[LONG_SIDE_IS_X :]
	label address: 0x004ae4

[	LD DE , - 12] Z80:11cyc, R800:3cyc
004ae4: 11 f4 ff

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004ae7: 19

[	LD D , A] Z80:5cyc, R800:2cyc
004ae8: 57

[	BIT 6 , A] Z80:10cyc, R800:2cyc
004ae9: cb 77

[	JP NZ , X_ENDPOINT_IS_LEFT1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004aeb: c2 f9 4a

[X_ENDPOINT_IS_RIGHT1 :]
	label address: 0x004aee

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004aee: 7e

[	ADD A , B] Z80:5cyc, R800:1cyc
004aef: 80

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004af0: 77

[	INC HL] Z80:7cyc, R800:1cyc
004af1: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004af2: 7e

[	ADC A , 0] Z80:8cyc, R800:2cyc
004af3: ce 00

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004af5: 77

[	JP Y_MOVE1] Z80:11cyc, R800:5cyc
004af6: c3 01 4b

[X_ENDPOINT_IS_LEFT1 :]
	label address: 0x004af9

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004af9: 7e

[	SUB A , B] Z80:5cyc, R800:1cyc
004afa: 90

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004afb: 77

[	INC HL] Z80:7cyc, R800:1cyc
004afc: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004afd: 7e

[	SBC A , 0] Z80:8cyc, R800:2cyc
004afe: de 00

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004b00: 77

[Y_MOVE1 :]
	label address: 0x004b01

[	DEC HL] Z80:7cyc, R800:1cyc
004b01: 2b

[	DEC HL] Z80:7cyc, R800:1cyc
004b02: 2b

[	DEC HL] Z80:7cyc, R800:1cyc
004b03: 2b

[	BIT 7 , D] Z80:10cyc, R800:2cyc
004b04: cb 7a

[	JP NZ , Y_ENDPOINT_IS_UP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004b06: c2 14 4b

[Y_ENDPOINT_IS_DOWN1 :]
	label address: 0x004b09

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b09: 7e

[	ADD A , C] Z80:5cyc, R800:1cyc
004b0a: 81

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004b0b: 77

[	INC HL] Z80:7cyc, R800:1cyc
004b0c: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b0d: 7e

[	ADC A , 0] Z80:8cyc, R800:2cyc
004b0e: ce 00

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004b10: 77

[	JP SPRITE_BRESENHAM_MOVE_END_CHECK] Z80:11cyc, R800:5cyc
004b11: c3 1c 4b

[Y_ENDPOINT_IS_UP1 :]
	label address: 0x004b14

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b14: 7e

[	SUB A , C] Z80:5cyc, R800:1cyc
004b15: 91

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004b16: 77

[	INC HL] Z80:7cyc, R800:1cyc
004b17: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b18: 7e

[	SBC A , 0] Z80:8cyc, R800:2cyc
004b19: de 00

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004b1b: 77

[SPRITE_BRESENHAM_MOVE_END_CHECK :]
	label address: 0x004b1c

[	LD BC , - 2] Z80:11cyc, R800:3cyc
004b1c: 01 fe ff

[	CP A , 212 / 2] Z80:8cyc, R800:2cyc
004b1f: fe 6a

[	JP NC , SPRITE_WENT_OFFSCREEN] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004b21: d2 6a 4b

[	INC HL] Z80:7cyc, R800:1cyc
004b24: 23

[	INC HL] Z80:7cyc, R800:1cyc
004b25: 23

[	LD C , - 4] Z80:8cyc, R800:2cyc
004b26: 0e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b28: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
004b29: b7

[	JP M , SPRITE_WENT_OFFSCREEN] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004b2a: fa 6a 4b

[	INC HL] Z80:7cyc, R800:1cyc
004b2d: 23

[	INC HL] Z80:7cyc, R800:1cyc
004b2e: 23

[	INC HL] Z80:7cyc, R800:1cyc
004b2f: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b30: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
004b31: b7

[	JP NZ , SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004b32: c2 70 4a

[	LD BC , - 6] Z80:11cyc, R800:3cyc
004b35: 01 fa ff

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004b38: 09

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b39: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004b3a: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004b3b: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b3c: 7e

[	ADC A , A] Z80:5cyc, R800:1cyc
004b3d: 8f

[	LD BC , 12] Z80:11cyc, R800:3cyc
004b3e: 01 0c 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004b41: 09

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
004b42: be

[	LD BC , - 14] Z80:11cyc, R800:3cyc
004b43: 01 f2 ff

[	JP NZ , SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004b46: c2 70 4a

[	INC HL] Z80:7cyc, R800:1cyc
004b49: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b4a: 7e

[	LD BC , - 12] Z80:11cyc, R800:3cyc
004b4b: 01 f4 ff

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004b4e: 09

[	LD B , A] Z80:5cyc, R800:2cyc
004b4f: 47

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b50: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004b51: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004b52: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b53: 7e

[	ADC A , A] Z80:5cyc, R800:1cyc
004b54: 8f

[	CP A , B] Z80:5cyc, R800:1cyc
004b55: b8

[	LD BC , - 4] Z80:11cyc, R800:3cyc
004b56: 01 fc ff

[	JP NZ , SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004b59: c2 70 4a

[	INC HL] Z80:7cyc, R800:1cyc
004b5c: 23

[	INC HL] Z80:7cyc, R800:1cyc
004b5d: 23

[	INC HL] Z80:7cyc, R800:1cyc
004b5e: 23

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
004b5f: 36 00

[	INC HL] Z80:7cyc, R800:1cyc
004b61: 23

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
004b62: 36 00

[	LD BC , - 8] Z80:11cyc, R800:3cyc
004b64: 01 f8 ff

[	JP SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc
004b67: c3 70 4a

[SPRITE_WENT_OFFSCREEN :]
	label address: 0x004b6a

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004b6a: 09

[	XOR A , A] Z80:5cyc, R800:1cyc
004b6b: af

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004b6c: 77

[	JP SPRITE_AUTO_MOVE_NEXT] Z80:11cyc, R800:5cyc
004b6d: c3 71 4a

[	ENDSCOPE]
	Scope path: 

[	SCOPE HIDE_SPRITE]
	Scope path: HIDE_SPRITE:

[HIDE_SPRITE ::]
	global label address: 0x004b70

[	LD C , 4] Z80:8cyc, R800:2cyc
004b70: 0e 04

[	LD A , 212] Z80:8cyc, R800:2cyc
004b72: 3e d4

[LOOP :]
	label address: 0x004b74

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004b74: d3 98

[	NOP] Z80:5cyc, R800:1cyc
004b76: 00

[	DEC C] Z80:5cyc, R800:1cyc
004b77: 0d

[	JR NZ , LOOP] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004b78: 20 fa

[	JP NEXT_SPRITE] Z80:11cyc, R800:5cyc
004b7a: c3 af 4a

[	ENDSCOPE]
	Scope path: 

[	SCOPE NORMAL_SPRITE]
	Scope path: NORMAL_SPRITE:

[NORMAL_SPRITE ::]
	global label address: 0x004b7d

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b7d: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004b7e: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004b7f: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b80: 7e

[	RLA] Z80:5cyc, R800:1cyc
004b81: 17

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004b82: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004b84: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b85: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004b86: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004b87: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b88: 7e

[	RLA] Z80:5cyc, R800:1cyc
004b89: 17

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004b8a: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004b8c: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b8d: 7e

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004b8e: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004b90: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b91: 7e

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004b92: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004b94: 23

[	JP NEXT_SPRITE] Z80:11cyc, R800:5cyc
004b95: c3 af 4a

[	ENDSCOPE]
	Scope path: 

[	SCOPE JOIN_SPRITE]
	Scope path: JOIN_SPRITE:

[JOIN_SPRITE ::]
	global label address: 0x004b98

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b98: 7e

[	PUSH HL] Z80:12cyc, R800:6cyc
004b99: e5

[	ADD A , A] Z80:5cyc, R800:1cyc
004b9a: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004b9b: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004b9c: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004b9d: 87

[	LD L , A] Z80:5cyc, R800:2cyc
004b9e: 6f

[	LD H , 0] Z80:8cyc, R800:2cyc
004b9f: 26 00

[	RL H] Z80:10cyc, R800:2cyc
004ba1: cb 14

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004ba3: 19

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004ba4: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
004ba5: b7

[	JP Z , SKIP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004ba6: ca c8 4b

[	INC HL] Z80:7cyc, R800:1cyc
004ba9: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004baa: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004bab: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004bac: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004bad: 7e

[	RLA] Z80:5cyc, R800:1cyc
004bae: 17

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004baf: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004bb1: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004bb2: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004bb3: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004bb4: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004bb5: 7e

[	RLA] Z80:5cyc, R800:1cyc
004bb6: 17

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004bb7: d3 98

[	POP HL] Z80:11cyc, R800:5cyc
004bb9: e1

[	INC HL] Z80:7cyc, R800:1cyc
004bba: 23

[	INC HL] Z80:7cyc, R800:1cyc
004bbb: 23

[	INC HL] Z80:7cyc, R800:1cyc
004bbc: 23

[	INC HL] Z80:7cyc, R800:1cyc
004bbd: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004bbe: 7e

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004bbf: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004bc1: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004bc2: 7e

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004bc3: d3 98

[	JP NEXT_SPRITE] Z80:11cyc, R800:5cyc
004bc5: c3 af 4a

[SKIP1 :]
	label address: 0x004bc8

[	POP HL] Z80:11cyc, R800:5cyc
004bc8: e1

[	JP HIDE_SPRITE] Z80:11cyc, R800:5cyc
004bc9: c3 70 4b

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//SPRITE.ASM"] end

[	INCLUDE ".//VSYNC.ASM"] begin
[	SCOPE VSYNC_COUNTER]
	Scope path: VSYNC_COUNTER:

[VSYNC_COUNTER ::]
	global label address: 0x004bcc

[	LD E , [ IX + WORK_VSYNC_COUNT + 0 ]] Z80:21cyc, R800:7cyc
004bcc: dd 5e 04

[	LD D , [ IX + WORK_VSYNC_COUNT + 1 ]] Z80:21cyc, R800:7cyc
004bcf: dd 56 05

[	LD A , E] Z80:5cyc, R800:2cyc
004bd2: 7b

[	OR A , D] Z80:5cyc, R800:1cyc
004bd3: b2

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
004bd4: c8

[	DEC DE] Z80:7cyc, R800:1cyc
004bd5: 1b

[	LD [ IX + WORK_VSYNC_COUNT + 0 ] , E] Z80:8cyc, R800:4cyc
004bd6: dd 73 04

[	LD [ IX + WORK_VSYNC_COUNT + 1 ] , D] Z80:8cyc, R800:4cyc
004bd9: dd 72 05

[	RET] Z80:11cyc, R800:5cyc
004bdc: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_COUNT]
	Scope path: GET_COUNT:

[GET_COUNT ::]
	global label address: 0x004bdd

[	DEC HL] Z80:7cyc, R800:1cyc
004bdd: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004bde: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004be2: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004be5: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004be7: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004bea: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
004beb: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004bef: cd 59 01

[	PUSH DE] Z80:12cyc, R800:6cyc
004bf2: d5

[	DEC HL] Z80:7cyc, R800:1cyc
004bf3: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004bf4: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004bf8: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004bfb: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004bfd: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004c00: 23

[	POP DE] Z80:11cyc, R800:5cyc
004c01: d1

[	RET] Z80:11cyc, R800:5cyc
004c02: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_VCST]
	Scope path: CALL_VCST:

[CALL_VCST ::]
	global label address: 0x004c03

[	CALL GET_COUNT] Z80:18cyc, R800:5cyc
004c03: cd dd 4b

[	PUSH HL] Z80:12cyc, R800:6cyc
004c06: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
004c07: d5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
004c08: cd 91 42

[	LD HL , WORK_VSYNC_COUNT] Z80:11cyc, R800:3cyc
004c0b: 21 04 00

[	LD E , IXL] Z80:10cyc, R800:2cyc
004c0e: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
004c10: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004c12: 19

[	POP DE] Z80:11cyc, R800:5cyc
004c13: d1

[	DI] Z80:5cyc, R800:2cyc
004c14: f3

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004c15: 73

[	INC HL] Z80:7cyc, R800:1cyc
004c16: 23

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004c17: 72

[	EI] Z80:5cyc, R800:1cyc
004c18: fb

[	POP HL] Z80:11cyc, R800:5cyc
004c19: e1

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004c1a: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_VCWT]
	Scope path: CALL_VCWT:

[CALL_VCWT ::]
	global label address: 0x004c1d

[	CALL GET_COUNT] Z80:18cyc, R800:5cyc
004c1d: cd dd 4b

[	PUSH HL] Z80:12cyc, R800:6cyc
004c20: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
004c21: d5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
004c22: cd 91 42

[	LD HL , WORK_VSYNC_COUNT] Z80:11cyc, R800:3cyc
004c25: 21 04 00

[	LD E , IXL] Z80:10cyc, R800:2cyc
004c28: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
004c2a: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004c2c: 19

[	POP BC] Z80:11cyc, R800:5cyc
004c2d: c1

[WAIT_LOOP :]
	label address: 0x004c2e

[	DI] Z80:5cyc, R800:2cyc
004c2e: f3

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004c2f: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004c30: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004c31: 56

[	EI] Z80:5cyc, R800:1cyc
004c32: fb

[	DEC HL] Z80:7cyc, R800:1cyc
004c33: 2b

[	EX DE , HL] Z80:5cyc, R800:1cyc
004c34: eb

[	OR A , A] Z80:5cyc, R800:1cyc
004c35: b7

[	SBC HL , BC] Z80:17cyc, R800:2cyc
004c36: ed 42

[	EX DE , HL] Z80:5cyc, R800:1cyc
004c38: eb

[	JP Z , SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004c39: ca 3f 4c

[	JP NC , WAIT_LOOP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004c3c: d2 2e 4c

[SKIP :]
	label address: 0x004c3f

[	POP HL] Z80:11cyc, R800:5cyc
004c3f: e1

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004c40: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//VSYNC.ASM"] end

Define macro {COMMAND_JUMP_TABLE_ITEM MACRO S_COMMAND , ADDRESS}

Define macro {COMMAND_JUMP_TABLE_ITEMB MACRO S_COMMAND0 , S_COMMAND1 , S_COMMAND2 , S_COMMAND3 , ADDRESS}

[ALIGN 8]
	Padding: 5byte(s)

[COMMAND_JUMP_TABLE ::]
	global label address: 0x004c48

((COMMAND_JUMP_TABLE_ITEM "SPUT" , CALL_SPUT))
	Scope path: @MACRO0:
[	DS "SPUT"]
004c48: 53 50 55 54

[	DW CALL_SPUT]
004c4c: 2f 46

[	DW 0]
004c4e: 00 00

((COMMAND_JUMP_TABLE_ITEM "SLNK" , CALL_SLNK))
	Scope path: @MACRO1:
[	DS "SLNK"]
004c50: 53 4c 4e 4b

[	DW CALL_SLNK]
004c54: 06 47

[	DW 0]
004c56: 00 00

((COMMAND_JUMP_TABLE_ITEM "SMOV" , CALL_SMOV))
	Scope path: @MACRO2:
[	DS "SMOV"]
004c58: 53 4d 4f 56

[	DW CALL_SMOV]
004c5c: be 47

[	DW 0]
004c5e: 00 00

((COMMAND_JUMP_TABLE_ITEM "SEPT" , CALL_SEPT))
	Scope path: @MACRO3:
[	DS "SEPT"]
004c60: 53 45 50 54

[	DW CALL_SEPT]
004c64: 6f 48

[	DW 0]
004c66: 00 00

((COMMAND_JUMP_TABLE_ITEM "SSEE" , CALL_SSEE))
	Scope path: @MACRO4:
[	DS "SSEE"]
004c68: 53 53 45 45

[	DW CALL_SSEE]
004c6c: 8d 49

[	DW 0]
004c6e: 00 00

((COMMAND_JUMP_TABLE_ITEM "BFIL" , CALL_BFIL))
	Scope path: @MACRO5:
[	DS "BFIL"]
004c70: 42 46 49 4c

[	DW CALL_BFIL]
004c74: 4b 43

[	DW 0]
004c76: 00 00

((COMMAND_JUMP_TABLE_ITEM "VFIL" , CALL_VFIL))
	Scope path: @MACRO6:
[	DS "VFIL"]
004c78: 56 46 49 4c

[	DW CALL_VFIL]
004c7c: c2 42

[	DW 0]
004c7e: 00 00

((COMMAND_JUMP_TABLE_ITEM "PCG0" , CALL_PCG0))
	Scope path: @MACRO7:
[	DS "PCG0"]
004c80: 50 43 47 30

[	DW CALL_PCG0]
004c84: cc 44

[	DW 0]
004c86: 00 00

((COMMAND_JUMP_TABLE_ITEM "PCG1" , CALL_PCG1))
	Scope path: @MACRO8:
[	DS "PCG1"]
004c88: 50 43 47 31

[	DW CALL_PCG1]
004c8c: ed 44

[	DW 0]
004c8e: 00 00

((COMMAND_JUMP_TABLE_ITEM "PCG2" , CALL_PCG2))
	Scope path: @MACRO9:
[	DS "PCG2"]
004c90: 50 43 47 32

[	DW CALL_PCG2]
004c94: fe 44

[	DW 0]
004c96: 00 00

((COMMAND_JUMP_TABLE_ITEM "PCG3" , CALL_PCG3))
	Scope path: @MACRO10:
[	DS "PCG3"]
004c98: 50 43 47 33

[	DW CALL_PCG3]
004c9c: 0f 45

[	DW 0]
004c9e: 00 00

((COMMAND_JUMP_TABLE_ITEM "COL0" , CALL_COL0))
	Scope path: @MACRO11:
[	DS "COL0"]
004ca0: 43 4f 4c 30

[	DW CALL_COL0]
004ca4: 3a 45

[	DW 0]
004ca6: 00 00

((COMMAND_JUMP_TABLE_ITEM "COL1" , CALL_COL1))
	Scope path: @MACRO12:
[	DS "COL1"]
004ca8: 43 4f 4c 31

[	DW CALL_COL1]
004cac: 4b 45

[	DW 0]
004cae: 00 00

((COMMAND_JUMP_TABLE_ITEM "COL2" , CALL_COL2))
	Scope path: @MACRO13:
[	DS "COL2"]
004cb0: 43 4f 4c 32

[	DW CALL_COL2]
004cb4: 5c 45

[	DW 0]
004cb6: 00 00

((COMMAND_JUMP_TABLE_ITEM "COL3" , CALL_COL3))
	Scope path: @MACRO14:
[	DS "COL3"]
004cb8: 43 4f 4c 33

[	DW CALL_COL3]
004cbc: 6d 45

[	DW 0]
004cbe: 00 00

((COMMAND_JUMP_TABLE_ITEM "BCLS" , CALL_BCLS))
	Scope path: @MACRO15:
[	DS "BCLS"]
004cc0: 42 43 4c 53

[	DW CALL_BCLS]
004cc4: 23 44

[	DW 0]
004cc6: 00 00

((COMMAND_JUMP_TABLE_ITEM "VCST" , CALL_VCST))
	Scope path: @MACRO16:
[	DS "VCST"]
004cc8: 56 43 53 54

[	DW CALL_VCST]
004ccc: 03 4c

[	DW 0]
004cce: 00 00

((COMMAND_JUMP_TABLE_ITEM "VCWT" , CALL_VCWT))
	Scope path: @MACRO17:
[	DS "VCWT"]
004cd0: 56 43 57 54

[	DW CALL_VCWT]
004cd4: 1d 4c

[	DW 0]
004cd6: 00 00

((COMMAND_JUMP_TABLE_ITEM "BFNT" , CALL_BFNT))
	Scope path: @MACRO18:
[	DS "BFNT"]
004cd8: 42 46 4e 54

[	DW CALL_BFNT]
004cdc: 9c 45

[	DW 0]
004cde: 00 00

((COMMAND_JUMP_TABLE_ITEM "SSTP" , CALL_SSTP))
	Scope path: @MACRO19:
[	DS "SSTP"]
004ce0: 53 53 54 50

[	DW CALL_SSTP]
004ce4: fb 45

[	DW 0]
004ce6: 00 00

((COMMAND_JUMP_TABLE_ITEM "SDRV" , CALL_SDRV))
	Scope path: @MACRO20:
[	DS "SDRV"]
004ce8: 53 44 52 56

[	DW CALL_SDRV]
004cec: c7 45

[	DW 0]
004cee: 00 00

((COMMAND_JUMP_TABLE_ITEM "SC15" , CALL_SC15))
	Scope path: @MACRO21:
[	DS "SC15"]
004cf0: 53 43 31 35

[	DW CALL_SC15]
004cf4: 08 41

[	DW 0]
004cf6: 00 00

[	DB 0]
004cf8: 00

[ALIGN 16384]
	Padding: 13063byte(s)

<< label >>
ACTIVATE_WORKAREA 17041 ( 0x4291 )
BACKUP_H_TIMI 16557 ( 0x40ad )
BAKCLR 62442 ( 0xf3ea )
BDRCLR 62443 ( 0xf3eb )
BEEP 192 ( 0xc0 )
BIGFIL 363 ( 0x16b )
BOTTOM 64584 ( 0xfc48 )
BREAKV 62245 ( 0xf325 )
BREAKX 183 ( 0xb7 )
BSUP_FILVRM 17180 ( 0x431c )
BSUP_FILVRM:LOOP 17191 ( 0x4327 )
BSUP_LDIRVM 17203 ( 0x4333 )
BSUP_LDIRVM:LOOP 17214 ( 0x433e )
CALATR 135 ( 0x87 )
CALBAS 345 ( 0x159 )
CALBAS_CHRGTR 18022 ( 0x4666 )
CALBAS_CRUNCH 17074 ( 0x42b2 )
CALBAS_ERRHAND 16495 ( 0x406f )
CALBAS_FRESTR 26576 ( 0x67d0 )
CALBAS_FRMEVL 19556 ( 0x4c64 )
CALBAS_FRMQNT 21551 ( 0x542f )
CALBAS_GETBYT 21020 ( 0x521c )
CALBAS_NEWSTT 17921 ( 0x4601 )
CALBAS_PTRGET 24228 ( 0x5ea4 )
CALBAS_READYR 16539 ( 0x409b )
CALLF 48 ( 0x30 )
CALL_BCLS 17443 ( 0x4423 )
CALL_BFIL 17227 ( 0x434b )
CALL_BFIL:END_OF_BFIL 17424 ( 0x4410 )
CALL_BFIL:LOOP_X 17409 ( 0x4401 )
CALL_BFIL:LOOP_Y 17402 ( 0x43fa )
CALL_BFIL:SKIP_ADJUST_H 17384 ( 0x43e8 )
CALL_BFIL:SKIP_ADJUST_W 17364 ( 0x43d4 )
CALL_BFNT 17820 ( 0x459c )
CALL_BFNT:LOOP1 17848 ( 0x45b8 )
CALL_BFNT:SET_FONT 17842 ( 0x45b2 )
CALL_COL0 17722 ( 0x453a )
CALL_COL1 17739 ( 0x454b )
CALL_COL2 17756 ( 0x455c )
CALL_COL3 17773 ( 0x456d )
CALL_PCG0 17612 ( 0x44cc )
CALL_PCG1 17645 ( 0x44ed )
CALL_PCG2 17662 ( 0x44fe )
CALL_PCG3 17679 ( 0x450f )
CALL_PCG_PARAM_SUB 17467 ( 0x443b )
CALL_SC15 16648 ( 0x4108 )
CALL_SDRV 17863 ( 0x45c7 )
CALL_SEPT 18543 ( 0x486f )
CALL_SEPT:SKIP_BIGGER_THAN_EP_X 18777 ( 0x4959 )
CALL_SEPT:SKIP_BIGGER_THAN_EP_Y 18747 ( 0x493b )
CALL_SEPT:SKIP_LONG_BOUNDARY_IS_X 18793 ( 0x4969 )
CALL_SLNK 18182 ( 0x4706 )
CALL_SMOV 18366 ( 0x47be )
CALL_SMOV:SKIP 18479 ( 0x482f )
CALL_SPUT 17967 ( 0x462f )
CALL_SSEE 18829 ( 0x498d )
CALL_SSTP 17915 ( 0x45fb )
CALL_STATEMENT_ENTRY 16580 ( 0x40c4 )
CALL_STATEMENT_ENTRY:NO_MATCH 16645 ( 0x4105 )
CALL_STATEMENT_ENTRY:SEARCH_COMMAND_LOOP 16584 ( 0x40c8 )
CALL_STATEMENT_ENTRY:SEARCH_NEXT_COMMAND 16633 ( 0x40f9 )
CALL_VCST 19459 ( 0x4c03 )
CALL_VCWT 19485 ( 0x4c1d )
CALL_VCWT:SKIP 19519 ( 0x4c3f )
CALL_VCWT:WAIT_LOOP 19502 ( 0x4c2e )
CALL_VFIL 17090 ( 0x42c2 )
CALPAT 132 ( 0x84 )
CALSLT 28 ( 0x1c )
CHECK_RAM 17029 ( 0x4285 )
CHGCAP 306 ( 0x132 )
CHGCLR 98 ( 0x62 )
CHGCPU 384 ( 0x180 )
CHGET 159 ( 0x9f )
CHGMOD 95 ( 0x5f )
CHGSND 309 ( 0x135 )
CHKRAM 0 ( 0x0 )
CHPUT 162 ( 0xa2 )
CHRGTR 16 ( 0x10 )
CHSNS 156 ( 0x9c )
CLIKSW 62427 ( 0xf3db )
CLPRIM 62348 ( 0xf38c )
CLRSPR 105 ( 0x69 )
CLS 195 ( 0xc3 )
CNSDFG 62430 ( 0xf3de )
CNVCHR 171 ( 0xab )
COMMAND_JUMP_TABLE 19528 ( 0x4c48 )
CSRX 62429 ( 0xf3dd )
CSRY 62428 ( 0xf3dc )
CURLIN 62492 ( 0xf41c )
DAC 63478 ( 0xf7f6 )
DCOMPR 32 ( 0x20 )
DEVICE 64921 ( 0xfd99 )
DISKVE 62243 ( 0xf323 )
DISSCR 65 ( 0x41 )
DSPFNK 207 ( 0xcf )
ENASCR 68 ( 0x44 )
ENASLT 36 ( 0x24 )
EOL 360 ( 0x168 )
ERAFNK 204 ( 0xcc )
EXBRSA 64248 ( 0xfaf8 )
EXIT_CALL_PCG 17622 ( 0x44d6 )
EXIT_CALL_STATEMENT 16631 ( 0x40f7 )
EXPTBL 64705 ( 0xfcc1 )
EXTBIO 65482 ( 0xffca )
EXTROM 351 ( 0x15f )
FILVRM 86 ( 0x56 )
FNKSB 201 ( 0xc9 )
FNKSTR 63615 ( 0xf87f )
FORCLR 62441 ( 0xf3e9 )
GETCPU 387 ( 0x183 )
GETYPR 40 ( 0x28 )
GET_COUNT 19421 ( 0x4bdd )
GET_ONE_BYTE 17581 ( 0x44ad )
GET_ONE_BYTE:SKIP1 17590 ( 0x44b6 )
GET_ONE_BYTE:SKIP2 17606 ( 0x44c6 )
GET_P1_SLOT 16852 ( 0x41d4 )
GET_P2_SLOT 16896 ( 0x4200 )
GET_SLTWRK 17010 ( 0x4272 )
GICINI 144 ( 0x90 )
GRPPRT 141 ( 0x8d )
GSPSIZ 138 ( 0x8a )
GTPAD 219 ( 0xdb )
GTPDL 222 ( 0xde )
GTSTCK 213 ( 0xd5 )
GTTRIG 216 ( 0xd8 )
HIDE_SPRITE 19312 ( 0x4b70 )
HIDE_SPRITE:LOOP 19316 ( 0x4b74 )
HIMEM 64586 ( 0xfc4a )
HOKVLD 64288 ( 0xfb20 )
H_CMD 65037 ( 0xfe0d )
H_PROMPT 62031 ( 0xf24f )
H_TIMI 64927 ( 0xfd9f )
H_TIMI_BACKUP_SIZE 5 ( 0x5 )
ILLEGAL_FUNCTION_CALL_ERROR 16768 ( 0x4180 )
INIFNK 62 ( 0x3e )
INIGRP 114 ( 0x72 )
INIMLT 117 ( 0x75 )
INIT32 111 ( 0x6f )
INITIALIZE_WORKAREA 16514 ( 0x4082 )
INITIO 59 ( 0x3b )
INITXT 108 ( 0x6c )
INIT_CODE 16400 ( 0x4010 )
INIT_CODE:THIS_IS_ON_THE_RAM 16475 ( 0x405b )
INIT_CODE:THIS_IS_ON_THE_ROM 16406 ( 0x4016 )
INLIN 177 ( 0xb1 )
INTERVAL_TIMER_PROC 16840 ( 0x41c8 )
INTERVAL_TIMER_PROC_FOR_RAM 16829 ( 0x41bd )
INTERVAL_TIMER_PROC_FOR_ROM 16786 ( 0x4192 )
ISFLIO 330 ( 0x14a )
JOIN_SPRITE 19352 ( 0x4b98 )
JOIN_SPRITE:SKIP1 19400 ( 0x4bc8 )
KEYBUF 64496 ( 0xfbf0 )
KEYINT 56 ( 0x38 )
KILBUF 342 ( 0x156 )
LDIRMV 89 ( 0x59 )
LDIRVM 92 ( 0x5c )
LINL32 62383 ( 0xf3af )
LINL40 62382 ( 0xf3ae )
LINLEN 62384 ( 0xf3b0 )
LINWRK 64536 ( 0xfc18 )
LPTOUT 165 ( 0xa5 )
LPTSTT 168 ( 0xa8 )
MASTERS 62280 ( 0xf348 )
NEWKEY 64485 ( 0xfbe5 )
NEW_H_TIMI 16847 ( 0x41cf )
NEXT_SPRITE 19119 ( 0x4aaf )
NMI 102 ( 0x66 )
NORMAL_SPRITE 19325 ( 0x4b7d )
NRDVRM 372 ( 0x174 )
NSETRD 366 ( 0x16e )
NSTWRT 369 ( 0x171 )
NWRVRM 375 ( 0x177 )
OLDKEY 64474 ( 0xfbda )
OLDSCR 64688 ( 0xfcb0 )
OUTDLP 333 ( 0x14d )
OUTDO 24 ( 0x18 )
PATWRK 64576 ( 0xfc40 )
PCMPLY 390 ( 0x186 )
PCMREC 393 ( 0x189 )
PINLIN 174 ( 0xae )
POSIT 198 ( 0xc6 )
PROCNM 64905 ( 0xfd89 )
QINLIN 180 ( 0xb4 )
RAMAD0 62273 ( 0xf341 )
RAMAD1 62274 ( 0xf342 )
RAMAD2 62275 ( 0xf343 )
RAMAD3 62276 ( 0xf344 )
RDPRIM 62336 ( 0xf380 )
RDPSG 150 ( 0x96 )
RDRES 378 ( 0x17a )
RDSLT 12 ( 0xc )
RDVDP 318 ( 0x13e )
RDVRM 74 ( 0x4a )
RESTORE_P2_SLOT 17080 ( 0x42b8 )
RG0SAV 62431 ( 0xf3df )
RG1SAV 62432 ( 0xf3e0 )
RG2SAV 62433 ( 0xf3e1 )
RG3SAV 62434 ( 0xf3e2 )
RG4SAV 62435 ( 0xf3e3 )
RG5SAV 62436 ( 0xf3e4 )
RG6SAV 62437 ( 0xf3e5 )
RG7SAV 62438 ( 0xf3e6 )
RG8SAV 65511 ( 0xffe7 )
RG9SAV 65512 ( 0xffe8 )
ROM_HEADER_DEVICE 16390 ( 0x4006 )
ROM_HEADER_ID 16384 ( 0x4000 )
ROM_HEADER_INIT 16386 ( 0x4002 )
ROM_HEADER_RESERVED 16394 ( 0x400a )
ROM_HEADER_STATEMENT 16388 ( 0x4004 )
ROM_HEADER_TEXT 16392 ( 0x4008 )
RSLREG 312 ( 0x138 )
SCRMOD 64687 ( 0xfcaf )
SETGRP 126 ( 0x7e )
SETMLT 129 ( 0x81 )
SETRD 80 ( 0x50 )
SETT32 123 ( 0x7b )
SETTXT 120 ( 0x78 )
SETWRT 83 ( 0x53 )
SET_P2_SLOT 16943 ( 0x422f )
SET_P2_SLOT:EXTENDED_SLOT 16963 ( 0x4243 )
SIZE_1ST_SPRITE 1 ( 0x1 )
SIZE_CURRENT_P2_SLOT 1 ( 0x1 )
SIZE_P1_SLOT 1 ( 0x1 )
SIZE_P2_SLOT 1 ( 0x1 )
SIZE_SAVE_P2_SLOT 1 ( 0x1 )
SIZE_SPRITE_DRIVE_ON 1 ( 0x1 )
SIZE_SPRITE_INFO 512 ( 0x200 )
SIZE_SPRITE_STOP_AUTO_MOVE 1 ( 0x1 )
SIZE_VSYNC_COUNT 2 ( 0x2 )
SLTATR 64713 ( 0xfcc9 )
SLTTBL 64709 ( 0xfcc5 )
SLTWRK 64777 ( 0xfd09 )
SNSMAT 321 ( 0x141 )
SPRITE_DRIVER 18947 ( 0x4a03 )
SPRITE_DRIVER:LONG_SIDE_IS_X 19172 ( 0x4ae4 )
SPRITE_DRIVER:LONG_SIDE_IS_Y 19169 ( 0x4ae1 )
SPRITE_DRIVER:LOOP1 19103 ( 0x4a9f )
SPRITE_DRIVER:OUTSIDE_SPRITE 19050 ( 0x4a6a )
SPRITE_DRIVER:SKIP_ADD 19150 ( 0x4ace )
SPRITE_DRIVER:SKIP_AUTO_MOVE 19064 ( 0x4a78 )
SPRITE_DRIVER:SKIP_VECTOR 19159 ( 0x4ad7 )
SPRITE_DRIVER:SPRITE_AUTO_MOVE 18968 ( 0x4a18 )
SPRITE_DRIVER:SPRITE_AUTO_MOVE_NEXT 19057 ( 0x4a71 )
SPRITE_DRIVER:SPRITE_AUTO_MOVE_NEXT_PRE 19056 ( 0x4a70 )
SPRITE_DRIVER:SPRITE_BRESENHAM_MOVE 19134 ( 0x4abe )
SPRITE_DRIVER:SPRITE_BRESENHAM_MOVE_END_CHECK 19228 ( 0x4b1c )
SPRITE_DRIVER:SPRITE_WENT_OFFSCREEN 19306 ( 0x4b6a )
SPRITE_DRIVER:X_ENDPOINT_IS_LEFT1 19193 ( 0x4af9 )
SPRITE_DRIVER:X_ENDPOINT_IS_RIGHT1 19182 ( 0x4aee )
SPRITE_DRIVER:Y_ENDPOINT_IS_DOWN1 19209 ( 0x4b09 )
SPRITE_DRIVER:Y_ENDPOINT_IS_UP1 19220 ( 0x4b14 )
SPRITE_DRIVER:Y_MOVE1 19201 ( 0x4b01 )
STATFL 62439 ( 0xf3e7 )
STMOTR 243 ( 0xf3 )
STRTMS 153 ( 0x99 )
SUBFLG 63141 ( 0xf6a5 )
SUBROM 348 ( 0x15c )
SUB_BEEP 381 ( 0x17d )
SUB_CALATR 253 ( 0xfd )
SUB_CALPAT 249 ( 0xf9 )
SUB_CHGCLR 273 ( 0x111 )
SUB_CHGMDP 437 ( 0x1b5 )
SUB_CHGMOD 209 ( 0xd1 )
SUB_CLRSPR 245 ( 0xf5 )
SUB_CLSSUB 277 ( 0x115 )
SUB_DSPFNK 285 ( 0x11d )
SUB_GETPAT 261 ( 0x105 )
SUB_GETPLT 329 ( 0x149 )
SUB_GSPSIZ 257 ( 0x101 )
SUB_GTPPRT 137 ( 0x89 )
SUB_INIGRP 221 ( 0xdd )
SUB_INIMLT 225 ( 0xe1 )
SUB_INIPLT 321 ( 0x141 )
SUB_INIT32 217 ( 0xd9 )
SUB_INITXT 213 ( 0xd5 )
SUB_KNJPRT 445 ( 0x1bd )
SUB_NEWPAD 429 ( 0x1ad )
SUB_NVBXFL 205 ( 0xcd )
SUB_NVBXLN 201 ( 0xc9 )
SUB_PROMPT 385 ( 0x181 )
SUB_RDVRM 269 ( 0x10d )
SUB_REDCLK 501 ( 0x1f5 )
SUB_RSTPLT 325 ( 0x145 )
SUB_SETGRP 237 ( 0xed )
SUB_SETMLT 241 ( 0xf1 )
SUB_SETPAG 317 ( 0x13d )
SUB_SETPLT 333 ( 0x14d )
SUB_SETT32 233 ( 0xe9 )
SUB_SETTXT 229 ( 0xe5 )
SUB_VDPSTA 305 ( 0x131 )
SUB_WRTCLK 505 ( 0x1f9 )
SUB_WRTVDP 301 ( 0x12d )
SUB_WRTVRM 265 ( 0x109 )
SYNCHR 8 ( 0x8 )
SYNTAX_ERROR 16759 ( 0x4177 )
TAPIN 228 ( 0xe4 )
TAPIOF 231 ( 0xe7 )
TAPION 225 ( 0xe1 )
TAPOOF 240 ( 0xf0 )
TAPOON 234 ( 0xea )
TAPOUT 237 ( 0xed )
TOTEXT 210 ( 0xd2 )
TRPTBL 64588 ( 0xfc4c )
TYPE_MISMATCH_ERROR 16777 ( 0x4189 )
USRTAB 62362 ( 0xf39a )
VALTYP 63075 ( 0xf663 )
VSYNC_COUNTER 19404 ( 0x4bcc )
WORK_1ST_SPRITE 6 ( 0x6 )
WORK_AREA_SIZE 521 ( 0x209 )
WORK_CURRENT_P2_SLOT 2 ( 0x2 )
WORK_P1_SLOT 0 ( 0x0 )
WORK_P2_SLOT 1 ( 0x1 )
WORK_SAVE_P2_SLOT 3 ( 0x3 )
WORK_SPRITE_DRIVE_ON 7 ( 0x7 )
WORK_SPRITE_INFO 9 ( 0x9 )
WORK_SPRITE_STOP_AUTO_MOVE 8 ( 0x8 )
WORK_VSYNC_COUNT 4 ( 0x4 )
WRPRIM 62341 ( 0xf385 )
WRRES 381 ( 0x17d )
WRSLT 20 ( 0x14 )
WRTPSG 147 ( 0x93 )
WRTVDP 71 ( 0x47 )
WRTVRM 77 ( 0x4d )
WSLREG 315 ( 0x13b )
