Z80 Macro Assembler ZMA v1.0.15
=====================================================
Programmed by t.hara

<< code >>
[	INCLUDE ".//MSXBIOS.ASM"] begin
[	INCLUDE ".//MSXBIOS.ASM"] end

[	INCLUDE ".//WORKAREA.ASM"] begin
[	INCLUDE ".//WORKAREA.ASM"] end

[	ORG 0X4000]
	code address: 0x004000

[ROM_HEADER_ID :]
	label address: 0x004000

[	DS "AB"]
004000: 41 42

[ROM_HEADER_INIT :]
	label address: 0x004002

[	DW INIT_CODE]
004002: 10 40

[ROM_HEADER_STATEMENT :]
	label address: 0x004004

[	DW CALL_STATEMENT_ENTRY]
004004: c4 40

[ROM_HEADER_DEVICE :]
	label address: 0x004006

[	DW 0]
004006: 00 00

[ROM_HEADER_TEXT :]
	label address: 0x004008

[	DW 0]
004008: 00 00

[ROM_HEADER_RESERVED :]
	label address: 0x00400a

[SPACE 0X0010 - 0X000A , 0]
	Allocate space: 6byte(s)
		Fill value: 0

[	SCOPE INIT_CODE]
	Scope path: INIT_CODE:

[INIT_CODE ::]
	global label address: 0x004010

[	CALL CHECK_RAM] Z80:18cyc, R800:5cyc
004010: cd 85 42

[	JP Z , THIS_IS_ON_THE_RAM] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004013: ca 5b 40

[THIS_IS_ON_THE_ROM :]
	label address: 0x004016

[	CALL GET_P1_SLOT] Z80:18cyc, R800:5cyc
004016: cd d4 41

[	PUSH AF] Z80:12cyc, R800:6cyc
004019: f5

[	CALL GET_SLTWRK] Z80:18cyc, R800:5cyc
00401a: cd 72 42

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00401d: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00401e: 23

[	OR A , [ HL ]] Z80:8cyc, R800:4cyc
00401f: b6

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
004020: c0

[	DEC HL] Z80:7cyc, R800:1cyc
004021: 2b

[	PUSH HL] Z80:12cyc, R800:6cyc
004022: e5

[	LD HL , [ BOTTOM ]] Z80:17cyc, R800:7cyc
004023: 2a 48 fc

[	PUSH HL] Z80:12cyc, R800:6cyc
004026: e5

[	LD DE , WORK_AREA_SIZE] Z80:11cyc, R800:3cyc
004027: 11 09 02

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00402a: 19

[	LD [ BOTTOM ] , HL] Z80:17cyc, R800:7cyc
00402b: 22 48 fc

[	POP DE] Z80:11cyc, R800:5cyc
00402e: d1

[	POP HL] Z80:11cyc, R800:5cyc
00402f: e1

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004030: 73

[	INC HL] Z80:7cyc, R800:1cyc
004031: 23

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004032: 72

[	INC HL] Z80:7cyc, R800:1cyc
004033: 23

[	PUSH DE] Z80:12cyc, R800:6cyc
004034: d5

[	CALL BACKUP_H_TIMI] Z80:18cyc, R800:5cyc
004035: cd ad 40

[	PUSH HL] Z80:12cyc, R800:6cyc
004038: e5

[	CALL GET_P2_SLOT] Z80:18cyc, R800:5cyc
004039: cd 00 42

[	POP HL] Z80:11cyc, R800:5cyc
00403c: e1

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00403d: 77

[	POP IX] Z80:16cyc, R800:6cyc
00403e: dd e1

[	CALL INITIALIZE_WORKAREA] Z80:18cyc, R800:5cyc
004040: cd 82 40

[	LD HL , NEW_H_TIMI] Z80:11cyc, R800:3cyc
004043: 21 cf 41

[	LD DE , H_TIMI] Z80:11cyc, R800:3cyc
004046: 11 9f fd

[	LD BC , 5] Z80:11cyc, R800:3cyc
004049: 01 05 00

[	POP AF] Z80:11cyc, R800:5cyc
00404c: f1

[	DI] Z80:5cyc, R800:2cyc
00404d: f3

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00404e: ed b0

[	LD [ H_TIMI + 1 ] , A] Z80:14cyc, R800:6cyc
004050: 32 a0 fd

[	LD HL , INTERVAL_TIMER_PROC_FOR_ROM] Z80:11cyc, R800:3cyc
004053: 21 92 41

[	LD [ H_TIMI + 2 ] , HL] Z80:17cyc, R800:7cyc
004056: 22 a1 fd

[	EI] Z80:5cyc, R800:1cyc
004059: fb

[	RET] Z80:11cyc, R800:5cyc
00405a: c9

[THIS_IS_ON_THE_RAM :]
	label address: 0x00405b

[	LD IX , 0X8000 - WORK_AREA_SIZE] Z80:16cyc, R800:4cyc
00405b: dd 21 f7 7d

[	CALL INITIALIZE_WORKAREA] Z80:18cyc, R800:5cyc
00405f: cd 82 40

[	LD HL , 0X8000 - WORK_AREA_SIZE - H_TIMI_BACKUP_SIZE] Z80:11cyc, R800:3cyc
004062: 21 f2 7d

[	CALL BACKUP_H_TIMI] Z80:18cyc, R800:5cyc
004065: cd ad 40

[	CALL GET_P1_SLOT] Z80:18cyc, R800:5cyc
004068: cd d4 41

[	LD HL , NEW_H_TIMI] Z80:11cyc, R800:3cyc
00406b: 21 cf 41

[	LD DE , H_TIMI] Z80:11cyc, R800:3cyc
00406e: 11 9f fd

[	LD BC , 5] Z80:11cyc, R800:3cyc
004071: 01 05 00

[	DI] Z80:5cyc, R800:2cyc
004074: f3

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
004075: ed b0

[	LD [ H_TIMI + 1 ] , A] Z80:14cyc, R800:6cyc
004077: 32 a0 fd

[	LD HL , INTERVAL_TIMER_PROC_FOR_RAM] Z80:11cyc, R800:3cyc
00407a: 21 bd 41

[	LD [ H_TIMI + 2 ] , HL] Z80:17cyc, R800:7cyc
00407d: 22 a1 fd

[	EI] Z80:5cyc, R800:1cyc
004080: fb

[	RET] Z80:11cyc, R800:5cyc
004081: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE INITIALIZE_WORKAREA]
	Scope path: INITIALIZE_WORKAREA:

[INITIALIZE_WORKAREA ::]
	global label address: 0x004082

[	CALL GET_P1_SLOT] Z80:18cyc, R800:5cyc
004082: cd d4 41

[	LD [ IX + WORK_P1_SLOT ] , A] Z80:8cyc, R800:4cyc
004085: dd 77 00

[	CALL GET_P2_SLOT] Z80:18cyc, R800:5cyc
004088: cd 00 42

[	LD [ IX + WORK_P2_SLOT ] , A] Z80:8cyc, R800:4cyc
00408b: dd 77 01

[	XOR A , A] Z80:5cyc, R800:1cyc
00408e: af

[	LD [ IX + WORK_VSYNC_COUNT + 0 ] , A] Z80:8cyc, R800:4cyc
00408f: dd 77 04

[	LD [ IX + WORK_VSYNC_COUNT + 1 ] , A] Z80:8cyc, R800:4cyc
004092: dd 77 05

[	LD [ IX + WORK_1ST_SPRITE ] , A] Z80:8cyc, R800:4cyc
004095: dd 77 06

[	LD [ IX + WORK_SPRITE_DRIVE_ON ] , A] Z80:8cyc, R800:4cyc
004098: dd 77 07

[	PUSH IX] Z80:17cyc, R800:7cyc
00409b: dd e5

[	POP HL] Z80:11cyc, R800:5cyc
00409d: e1

[	LD DE , WORK_SPRITE_INFO] Z80:11cyc, R800:3cyc
00409e: 11 09 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0040a1: 19

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
0040a2: 36 00

[	LD E , L] Z80:5cyc, R800:2cyc
0040a4: 5d

[	LD D , H] Z80:5cyc, R800:2cyc
0040a5: 54

[	INC DE] Z80:7cyc, R800:1cyc
0040a6: 13

[	LD BC , SIZE_SPRITE_INFO - 1] Z80:11cyc, R800:3cyc
0040a7: 01 ff 01

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
0040aa: ed b0

[	RET] Z80:11cyc, R800:5cyc
0040ac: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE BACKUP_H_TIMI]
	Scope path: BACKUP_H_TIMI:

[BACKUP_H_TIMI ::]
	global label address: 0x0040ad

[	LD BC , [ H_TIMI + 0 ]] Z80:22cyc, R800:8cyc
0040ad: ed 4b 9f fd

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
0040b1: 71

[	INC HL] Z80:7cyc, R800:1cyc
0040b2: 23

[	LD [ HL ] , B] Z80:8cyc, R800:4cyc
0040b3: 70

[	INC HL] Z80:7cyc, R800:1cyc
0040b4: 23

[	LD BC , [ H_TIMI + 2 ]] Z80:22cyc, R800:8cyc
0040b5: ed 4b a1 fd

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
0040b9: 71

[	INC HL] Z80:7cyc, R800:1cyc
0040ba: 23

[	LD [ HL ] , B] Z80:8cyc, R800:4cyc
0040bb: 70

[	INC HL] Z80:7cyc, R800:1cyc
0040bc: 23

[	LD BC , [ H_TIMI + 4 ]] Z80:22cyc, R800:8cyc
0040bd: ed 4b a3 fd

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
0040c1: 71

[	INC HL] Z80:7cyc, R800:1cyc
0040c2: 23

[	RET] Z80:11cyc, R800:5cyc
0040c3: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_STATEMENT_ENTRY]
	Scope path: CALL_STATEMENT_ENTRY:

[CALL_STATEMENT_ENTRY ::]
	global label address: 0x0040c4

[	PUSH HL] Z80:12cyc, R800:6cyc
0040c4: e5

[	LD DE , COMMAND_JUMP_TABLE] Z80:11cyc, R800:3cyc
0040c5: 11 e0 4d

[SEARCH_COMMAND_LOOP :]
	label address: 0x0040c8

[	LD HL , PROCNM] Z80:11cyc, R800:3cyc
0040c8: 21 89 fd

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0040cb: 1a

[	OR A , A] Z80:5cyc, R800:1cyc
0040cc: b7

[	JP Z , NO_MATCH] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040cd: ca 05 41

[	INC DE] Z80:7cyc, R800:1cyc
0040d0: 13

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0040d1: be

[	JP NZ , SEARCH_NEXT_COMMAND] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040d2: c2 f9 40

[	INC HL] Z80:7cyc, R800:1cyc
0040d5: 23

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0040d6: 1a

[	INC DE] Z80:7cyc, R800:1cyc
0040d7: 13

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0040d8: be

[	JP NZ , SEARCH_NEXT_COMMAND] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040d9: c2 f9 40

[	INC HL] Z80:7cyc, R800:1cyc
0040dc: 23

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0040dd: 1a

[	INC DE] Z80:7cyc, R800:1cyc
0040de: 13

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0040df: be

[	JP NZ , SEARCH_NEXT_COMMAND] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040e0: c2 f9 40

[	INC HL] Z80:7cyc, R800:1cyc
0040e3: 23

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0040e4: 1a

[	INC DE] Z80:7cyc, R800:1cyc
0040e5: 13

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0040e6: be

[	JP NZ , SEARCH_NEXT_COMMAND] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040e7: c2 f9 40

[	INC HL] Z80:7cyc, R800:1cyc
0040ea: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0040eb: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
0040ec: b7

[	JP NZ , SEARCH_NEXT_COMMAND] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0040ed: c2 f9 40

[	EX DE , HL] Z80:5cyc, R800:1cyc
0040f0: eb

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0040f1: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0040f2: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0040f3: 56

[	POP HL] Z80:11cyc, R800:5cyc
0040f4: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
0040f5: d5

[	RET] Z80:11cyc, R800:5cyc
0040f6: c9

[EXIT_CALL_STATEMENT ::]
	global label address: 0x0040f7

[	OR A , A] Z80:5cyc, R800:1cyc
0040f7: b7

[	RET] Z80:11cyc, R800:5cyc
0040f8: c9

[SEARCH_NEXT_COMMAND :]
	label address: 0x0040f9

[	LD A , E] Z80:5cyc, R800:2cyc
0040f9: 7b

[	AND A , 0XF8] Z80:8cyc, R800:2cyc
0040fa: e6 f8

[	LD E , A] Z80:5cyc, R800:2cyc
0040fc: 5f

[	LD HL , 8] Z80:11cyc, R800:3cyc
0040fd: 21 08 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004100: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
004101: eb

[	JP SEARCH_COMMAND_LOOP] Z80:11cyc, R800:5cyc
004102: c3 c8 40

[NO_MATCH :]
	label address: 0x004105

[	POP HL] Z80:11cyc, R800:5cyc
004105: e1

[	SCF] Z80:5cyc, R800:1cyc
004106: 37

[	RET] Z80:11cyc, R800:5cyc
004107: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SC15]
	Scope path: CALL_SC15:

[CALL_SC15 ::]
	global label address: 0x004108

[	PUSH HL] Z80:12cyc, R800:6cyc
004108: e5

[	CALL INIGRP] Z80:18cyc, R800:5cyc
004109: cd 72 00

[	LD A , 1] Z80:8cyc, R800:2cyc
00410c: 3e 01

[	LD [ SCRMOD ] , A] Z80:14cyc, R800:6cyc
00410e: 32 af fc

[	LD A , 32] Z80:8cyc, R800:2cyc
004111: 3e 20

[	LD [ LINL32 ] , A] Z80:14cyc, R800:6cyc
004113: 32 af f3

[	LD [ LINLEN ] , A] Z80:14cyc, R800:6cyc
004116: 32 b0 f3

[	LD A , 32] Z80:8cyc, R800:2cyc
004119: 3e 20

[	LD HL , 0X1800] Z80:11cyc, R800:3cyc
00411b: 21 00 18

[	LD BC , 0X300] Z80:11cyc, R800:3cyc
00411e: 01 00 03

[	CALL BSUP_FILVRM] Z80:18cyc, R800:5cyc
004121: cd 1c 43

[	LD HL , [ 0X0004 ]] Z80:17cyc, R800:7cyc
004124: 2a 04 00

[	LD DE , 0X0000] Z80:11cyc, R800:3cyc
004127: 11 00 00

[	LD BC , 0X800 - 8] Z80:11cyc, R800:3cyc
00412a: 01 f8 07

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
00412d: cd 33 43

[	LD HL , [ 0X0004 ]] Z80:17cyc, R800:7cyc
004130: 2a 04 00

[	LD DE , 0X0800] Z80:11cyc, R800:3cyc
004133: 11 00 08

[	LD BC , 0X800 - 8] Z80:11cyc, R800:3cyc
004136: 01 f8 07

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004139: cd 33 43

[	LD HL , [ 0X0004 ]] Z80:17cyc, R800:7cyc
00413c: 2a 04 00

[	LD DE , 0X1000] Z80:11cyc, R800:3cyc
00413f: 11 00 10

[	LD BC , 0X800 - 8] Z80:11cyc, R800:3cyc
004142: 01 f8 07

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004145: cd 33 43

[	LD HL , 0X1000 - 8] Z80:11cyc, R800:3cyc
004148: 21 f8 0f

[	LD BC , 8] Z80:11cyc, R800:3cyc
00414b: 01 08 00

[	LD A , 0XFF] Z80:8cyc, R800:2cyc
00414e: 3e ff

[	CALL BSUP_FILVRM] Z80:18cyc, R800:5cyc
004150: cd 1c 43

[	LD HL , 0X1800 - 8] Z80:11cyc, R800:3cyc
004153: 21 f8 17

[	LD BC , 8] Z80:11cyc, R800:3cyc
004156: 01 08 00

[	LD A , 0XFF] Z80:8cyc, R800:2cyc
004159: 3e ff

[	CALL BSUP_FILVRM] Z80:18cyc, R800:5cyc
00415b: cd 1c 43

[	LD A , [ FORCLR ]] Z80:14cyc, R800:6cyc
00415e: 3a e9 f3

[	ADD A , A] Z80:5cyc, R800:1cyc
004161: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004162: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004163: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004164: 87

[	LD B , A] Z80:5cyc, R800:2cyc
004165: 47

[	LD A , [ BAKCLR ]] Z80:14cyc, R800:6cyc
004166: 3a ea f3

[	OR A , B] Z80:5cyc, R800:1cyc
004169: b0

[	LD HL , 0X2000] Z80:11cyc, R800:3cyc
00416a: 21 00 20

[	LD BC , 0X1800] Z80:11cyc, R800:3cyc
00416d: 01 00 18

[	CALL BSUP_FILVRM] Z80:18cyc, R800:5cyc
004170: cd 1c 43

[	POP HL] Z80:11cyc, R800:5cyc
004173: e1

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004174: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE SYNTAX_ERROR]
	Scope path: SYNTAX_ERROR:

[SYNTAX_ERROR ::]
	global label address: 0x004177

[	LD E , 2] Z80:8cyc, R800:2cyc
004177: 1e 02

[	LD IX , CALBAS_ERRHAND] Z80:16cyc, R800:4cyc
004179: dd 21 6f 40

[	JP CALBAS] Z80:11cyc, R800:5cyc
00417d: c3 59 01

[	ENDSCOPE]
	Scope path: 

[	SCOPE ILLEGAL_FUNCTION_CALL_ERROR]
	Scope path: ILLEGAL_FUNCTION_CALL_ERROR:

[ILLEGAL_FUNCTION_CALL_ERROR ::]
	global label address: 0x004180

[	LD E , 5] Z80:8cyc, R800:2cyc
004180: 1e 05

[	LD IX , CALBAS_ERRHAND] Z80:16cyc, R800:4cyc
004182: dd 21 6f 40

[	JP CALBAS] Z80:11cyc, R800:5cyc
004186: c3 59 01

[	ENDSCOPE]
	Scope path: 

[	SCOPE TYPE_MISMATCH_ERROR]
	Scope path: TYPE_MISMATCH_ERROR:

[TYPE_MISMATCH_ERROR ::]
	global label address: 0x004189

[	LD E , 13] Z80:8cyc, R800:2cyc
004189: 1e 0d

[	LD IX , CALBAS_ERRHAND] Z80:16cyc, R800:4cyc
00418b: dd 21 6f 40

[	JP CALBAS] Z80:11cyc, R800:5cyc
00418f: c3 59 01

[	ENDSCOPE]
	Scope path: 

[	SCOPE INTERVAL_TIMER_PROC_FOR_ROM]
	Scope path: INTERVAL_TIMER_PROC_FOR_ROM:

[INTERVAL_TIMER_PROC_FOR_ROM ::]
	global label address: 0x004192

[	CALL GET_P1_SLOT] Z80:18cyc, R800:5cyc
004192: cd d4 41

[	CALL GET_SLTWRK] Z80:18cyc, R800:5cyc
004195: cd 72 42

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004198: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004199: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00419a: 56

[	INC HL] Z80:7cyc, R800:1cyc
00419b: 23

[	PUSH HL] Z80:12cyc, R800:6cyc
00419c: e5

[	LD IXL , E] Z80:10cyc, R800:2cyc
00419d: dd 6b

[	LD IXH , D] Z80:10cyc, R800:2cyc
00419f: dd 62

[	LD DE , 5] Z80:11cyc, R800:3cyc
0041a1: 11 05 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0041a4: 19

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0041a5: 56

[	CALL GET_P2_SLOT] Z80:18cyc, R800:5cyc
0041a6: cd 00 42

[	PUSH AF] Z80:12cyc, R800:6cyc
0041a9: f5

[	LD A , D] Z80:5cyc, R800:2cyc
0041aa: 7a

[	CALL SET_P2_SLOT] Z80:18cyc, R800:5cyc
0041ab: cd 2f 42

[	POP AF] Z80:11cyc, R800:5cyc
0041ae: f1

[	LD [ IX + WORK_CURRENT_P2_SLOT ] , A] Z80:8cyc, R800:4cyc
0041af: dd 77 02

[	CALL INTERVAL_TIMER_PROC] Z80:18cyc, R800:5cyc
0041b2: cd c8 41

[	LD A , [ IX + WORK_CURRENT_P2_SLOT ]] Z80:21cyc, R800:7cyc
0041b5: dd 7e 02

[	CALL SET_P2_SLOT] Z80:18cyc, R800:5cyc
0041b8: cd 2f 42

[	POP HL] Z80:11cyc, R800:5cyc
0041bb: e1

[	JP HL] Z80:5cyc, R800:3cyc
0041bc: e9

[	ENDSCOPE]
	Scope path: 

[	SCOPE INTERVAL_TIMER_PROC_FOR_RAM]
	Scope path: INTERVAL_TIMER_PROC_FOR_RAM:

[INTERVAL_TIMER_PROC_FOR_RAM ::]
	global label address: 0x0041bd

[	LD IX , 0X8000 - WORK_AREA_SIZE] Z80:16cyc, R800:4cyc
0041bd: dd 21 f7 7d

[	CALL INTERVAL_TIMER_PROC] Z80:18cyc, R800:5cyc
0041c1: cd c8 41

[	LD HL , 0X8000 - WORK_AREA_SIZE - H_TIMI_BACKUP_SIZE] Z80:11cyc, R800:3cyc
0041c4: 21 f2 7d

[	JP HL] Z80:5cyc, R800:3cyc
0041c7: e9

[	ENDSCOPE]
	Scope path: 

[	SCOPE INTERVAL_TIMER_PROC]
	Scope path: INTERVAL_TIMER_PROC:

[INTERVAL_TIMER_PROC ::]
	global label address: 0x0041c8

[	CALL VSYNC_COUNTER] Z80:18cyc, R800:5cyc
0041c8: cd 68 4d

[	CALL SPRITE_DRIVER] Z80:18cyc, R800:5cyc
0041cb: cd 9f 4b

[	RET] Z80:11cyc, R800:5cyc
0041ce: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE NEW_H_TIMI]
	Scope path: NEW_H_TIMI:

[NEW_H_TIMI ::]
	global label address: 0x0041cf

[	RST 0X30] Z80:12cyc, R800:6 or 7cyc
0041cf: f7

[	DB 0]
0041d0: 00

[	DW INTERVAL_TIMER_PROC_FOR_RAM]
0041d1: bd 41

[	RET] Z80:11cyc, R800:5cyc
0041d3: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//SLTWRK.ASM"] begin
[	SCOPE GET_P1_SLOT]
	Scope path: GET_P1_SLOT:

[GET_P1_SLOT ::]
	global label address: 0x0041d4

[	IN A , [ 0XA8 ]] Z80:12cyc, R800:10 or 9cyc
0041d4: db a8

[	LD C , A] Z80:5cyc, R800:2cyc
0041d6: 4f

[	AND A , 0X0C] Z80:8cyc, R800:2cyc
0041d7: e6 0c

[	RRCA] Z80:5cyc, R800:1cyc
0041d9: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0041da: 0f

[	LD B , A] Z80:5cyc, R800:2cyc
0041db: 47

[	ADD A , 0XC1] Z80:8cyc, R800:2cyc
0041dc: c6 c1

[	LD L , A] Z80:5cyc, R800:2cyc
0041de: 6f

[	LD H , 0XFC] Z80:8cyc, R800:2cyc
0041df: 26 fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0041e1: 7e

[	AND A , 0X80] Z80:8cyc, R800:2cyc
0041e2: e6 80

[	LD A , B] Z80:5cyc, R800:2cyc
0041e4: 78

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0041e5: c8

[	RRCA] Z80:5cyc, R800:1cyc
0041e6: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0041e7: 0f

[	LD L , A] Z80:5cyc, R800:2cyc
0041e8: 6f

[	LD A , C] Z80:5cyc, R800:2cyc
0041e9: 79

[	AND A , 0X3F] Z80:8cyc, R800:2cyc
0041ea: e6 3f

[	OR A , L] Z80:5cyc, R800:1cyc
0041ec: b5

[	DI] Z80:5cyc, R800:2cyc
0041ed: f3

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
0041ee: d3 a8

[	LD A , [ 0XFFFF ]] Z80:14cyc, R800:6cyc
0041f0: 3a ff ff

[	LD L , A] Z80:5cyc, R800:2cyc
0041f3: 6f

[	LD A , C] Z80:5cyc, R800:2cyc
0041f4: 79

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
0041f5: d3 a8

[	EI] Z80:5cyc, R800:1cyc
0041f7: fb

[	LD A , L] Z80:5cyc, R800:2cyc
0041f8: 7d

[	CPL] Z80:5cyc, R800:1cyc
0041f9: 2f

[	AND A , 0X0C] Z80:8cyc, R800:2cyc
0041fa: e6 0c

[	OR A , B] Z80:5cyc, R800:1cyc
0041fc: b0

[	OR A , 0X80] Z80:8cyc, R800:2cyc
0041fd: f6 80

[	RET] Z80:11cyc, R800:5cyc
0041ff: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_P2_SLOT]
	Scope path: GET_P2_SLOT:

[GET_P2_SLOT ::]
	global label address: 0x004200

[	IN A , [ 0XA8 ]] Z80:12cyc, R800:10 or 9cyc
004200: db a8

[	LD C , A] Z80:5cyc, R800:2cyc
004202: 4f

[	AND A , 0X30] Z80:8cyc, R800:2cyc
004203: e6 30

[	RRCA] Z80:5cyc, R800:1cyc
004205: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004206: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004207: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004208: 0f

[	LD B , A] Z80:5cyc, R800:2cyc
004209: 47

[	ADD A , 0XC1] Z80:8cyc, R800:2cyc
00420a: c6 c1

[	LD L , A] Z80:5cyc, R800:2cyc
00420c: 6f

[	LD H , 0XFC] Z80:8cyc, R800:2cyc
00420d: 26 fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00420f: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
004210: b7

[	LD A , B] Z80:5cyc, R800:2cyc
004211: 78

[	RET P] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
004212: f0

[	RRCA] Z80:5cyc, R800:1cyc
004213: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004214: 0f

[	LD L , A] Z80:5cyc, R800:2cyc
004215: 6f

[	LD A , C] Z80:5cyc, R800:2cyc
004216: 79

[	AND A , 0X3F] Z80:8cyc, R800:2cyc
004217: e6 3f

[	OR A , L] Z80:5cyc, R800:1cyc
004219: b5

[	DI] Z80:5cyc, R800:2cyc
00421a: f3

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
00421b: d3 a8

[	LD A , [ 0XFFFF ]] Z80:14cyc, R800:6cyc
00421d: 3a ff ff

[	LD L , A] Z80:5cyc, R800:2cyc
004220: 6f

[	LD A , C] Z80:5cyc, R800:2cyc
004221: 79

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
004222: d3 a8

[	EI] Z80:5cyc, R800:1cyc
004224: fb

[	LD A , L] Z80:5cyc, R800:2cyc
004225: 7d

[	CPL] Z80:5cyc, R800:1cyc
004226: 2f

[	RRCA] Z80:5cyc, R800:1cyc
004227: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004228: 0f

[	AND A , 0X0C] Z80:8cyc, R800:2cyc
004229: e6 0c

[	OR A , B] Z80:5cyc, R800:1cyc
00422b: b0

[	OR A , 0X80] Z80:8cyc, R800:2cyc
00422c: f6 80

[	RET] Z80:11cyc, R800:5cyc
00422e: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SET_P2_SLOT]
	Scope path: SET_P2_SLOT:

[SET_P2_SLOT ::]
	global label address: 0x00422f

[	OR A , A] Z80:5cyc, R800:1cyc
00422f: b7

[	JP M , EXTENDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004230: fa 43 42

[	AND A , 0X03] Z80:8cyc, R800:2cyc
004233: e6 03

[	RRCA] Z80:5cyc, R800:1cyc
004235: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004236: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004237: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004238: 0f

[	LD C , A] Z80:5cyc, R800:2cyc
004239: 4f

[	IN A , [ 0XA8 ]] Z80:12cyc, R800:10 or 9cyc
00423a: db a8

[	AND A , 0XCF] Z80:8cyc, R800:2cyc
00423c: e6 cf

[	OR A , C] Z80:5cyc, R800:1cyc
00423e: b1

[	DI] Z80:5cyc, R800:2cyc
00423f: f3

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
004240: d3 a8

[	RET] Z80:11cyc, R800:5cyc
004242: c9

[EXTENDED_SLOT :]
	label address: 0x004243

[	LD B , A] Z80:5cyc, R800:2cyc
004243: 47

[	RRCA] Z80:5cyc, R800:1cyc
004244: 0f

[	RRCA] Z80:5cyc, R800:1cyc
004245: 0f

[	AND A , 0XC0] Z80:8cyc, R800:2cyc
004246: e6 c0

[	LD C , A] Z80:5cyc, R800:2cyc
004248: 4f

[	RRCA] Z80:5cyc, R800:1cyc
004249: 0f

[	RRCA] Z80:5cyc, R800:1cyc
00424a: 0f

[	OR A , C] Z80:5cyc, R800:1cyc
00424b: b1

[	LD C , A] Z80:5cyc, R800:2cyc
00424c: 4f

[	IN A , [ 0XA8 ]] Z80:12cyc, R800:10 or 9cyc
00424d: db a8

[	LD D , A] Z80:5cyc, R800:2cyc
00424f: 57

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
004250: e6 0f

[	OR A , C] Z80:5cyc, R800:1cyc
004252: b1

[	DI] Z80:5cyc, R800:2cyc
004253: f3

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
004254: d3 a8

[	AND A , 0X3F] Z80:8cyc, R800:2cyc
004256: e6 3f

[	LD C , A] Z80:5cyc, R800:2cyc
004258: 4f

[	LD A , D] Z80:5cyc, R800:2cyc
004259: 7a

[	AND A , 0XC0] Z80:8cyc, R800:2cyc
00425a: e6 c0

[	OR A , C] Z80:5cyc, R800:1cyc
00425c: b1

[	LD C , A] Z80:5cyc, R800:2cyc
00425d: 4f

[	LD A , B] Z80:5cyc, R800:2cyc
00425e: 78

[	RLCA] Z80:5cyc, R800:1cyc
00425f: 07

[	RLCA] Z80:5cyc, R800:1cyc
004260: 07

[	AND A , 0X30] Z80:8cyc, R800:2cyc
004261: e6 30

[	LD B , A] Z80:5cyc, R800:2cyc
004263: 47

[	LD A , [ 0XFFFF ]] Z80:14cyc, R800:6cyc
004264: 3a ff ff

[	CPL] Z80:5cyc, R800:1cyc
004267: 2f

[	AND A , 0XCF] Z80:8cyc, R800:2cyc
004268: e6 cf

[	OR A , B] Z80:5cyc, R800:1cyc
00426a: b0

[	LD [ 0XFFFF ] , A] Z80:14cyc, R800:6cyc
00426b: 32 ff ff

[	LD A , C] Z80:5cyc, R800:2cyc
00426e: 79

[	OUT [ 0XA8 ] , A] Z80:12cyc, R800:10 or 9cyc
00426f: d3 a8

[	RET] Z80:11cyc, R800:5cyc
004271: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_SLTWRK]
	Scope path: GET_SLTWRK:

[GET_SLTWRK ::]
	global label address: 0x004272

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
004272: e6 0f

[	LD L , A] Z80:5cyc, R800:2cyc
004274: 6f

[	AND A , 0X03] Z80:8cyc, R800:2cyc
004275: e6 03

[	ADD A , A] Z80:5cyc, R800:1cyc
004277: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004278: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004279: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
00427a: 87

[	OR A , L] Z80:5cyc, R800:1cyc
00427b: b5

[	AND A , 0X3C] Z80:8cyc, R800:2cyc
00427c: e6 3c

[	ADD A , A] Z80:5cyc, R800:1cyc
00427e: 87

[	ADD A , 0X09] Z80:8cyc, R800:2cyc
00427f: c6 09

[	LD L , A] Z80:5cyc, R800:2cyc
004281: 6f

[	LD H , 0XFD] Z80:8cyc, R800:2cyc
004282: 26 fd

[	RET] Z80:11cyc, R800:5cyc
004284: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE CHECK_RAM]
	Scope path: CHECK_RAM:

[CHECK_RAM ::]
	global label address: 0x004285

[	PUSH HL] Z80:12cyc, R800:6cyc
004285: e5

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
004286: 21 00 40

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004289: 7e

[	CPL] Z80:5cyc, R800:1cyc
00428a: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00428b: 77

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00428c: be

[	CPL] Z80:5cyc, R800:1cyc
00428d: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00428e: 77

[	POP HL] Z80:11cyc, R800:5cyc
00428f: e1

[	RET] Z80:11cyc, R800:5cyc
004290: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE ACTIVATE_WORKAREA]
	Scope path: ACTIVATE_WORKAREA:

[ACTIVATE_WORKAREA ::]
	global label address: 0x004291

[	CALL CHECK_RAM] Z80:18cyc, R800:5cyc
004291: cd 85 42

[	LD IX , 0X8000 - WORK_AREA_SIZE] Z80:16cyc, R800:4cyc
004294: dd 21 f7 7d

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
004298: c8

[	CALL GET_P1_SLOT] Z80:18cyc, R800:5cyc
004299: cd d4 41

[	CALL GET_SLTWRK] Z80:18cyc, R800:5cyc
00429c: cd 72 42

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00429f: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0042a0: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0042a1: 56

[	LD IXL , E] Z80:10cyc, R800:2cyc
0042a2: dd 6b

[	LD IXH , D] Z80:10cyc, R800:2cyc
0042a4: dd 62

[	PUSH HL] Z80:12cyc, R800:6cyc
0042a6: e5

[	CALL GET_P2_SLOT] Z80:18cyc, R800:5cyc
0042a7: cd 00 42

[	POP HL] Z80:11cyc, R800:5cyc
0042aa: e1

[	LD DE , 6] Z80:11cyc, R800:3cyc
0042ab: 11 06 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0042ae: 19

[	LD E , A] Z80:5cyc, R800:2cyc
0042af: 5f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0042b0: 7e

[	CALL SET_P2_SLOT] Z80:18cyc, R800:5cyc
0042b1: cd 2f 42

[	LD [ IX + WORK_SAVE_P2_SLOT ] , E] Z80:8cyc, R800:4cyc
0042b4: dd 73 03

[	RET] Z80:11cyc, R800:5cyc
0042b7: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RESTORE_P2_SLOT]
	Scope path: RESTORE_P2_SLOT:

[RESTORE_P2_SLOT ::]
	global label address: 0x0042b8

[	CALL CHECK_RAM] Z80:18cyc, R800:5cyc
0042b8: cd 85 42

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0042bb: c8

[	LD A , [ IX + WORK_SAVE_P2_SLOT ]] Z80:21cyc, R800:7cyc
0042bc: dd 7e 03

[	JP SET_P2_SLOT] Z80:11cyc, R800:5cyc
0042bf: c3 2f 42

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//SLTWRK.ASM"] end

[	INCLUDE ".//VRAM.ASM"] begin
[	SCOPE CALL_VFIL]
	Scope path: CALL_VFIL:

[CALL_VFIL ::]
	global label address: 0x0042c2

[	DEC HL] Z80:7cyc, R800:1cyc
0042c2: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0042c3: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0042c7: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
0042ca: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0042cc: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0042cf: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
0042d0: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0042d4: cd 59 01

[	PUSH DE] Z80:12cyc, R800:6cyc
0042d7: d5

[	DEC HL] Z80:7cyc, R800:1cyc
0042d8: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0042d9: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0042dd: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0042e0: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0042e2: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0042e5: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
0042e6: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0042ea: cd 59 01

[	PUSH DE] Z80:12cyc, R800:6cyc
0042ed: d5

[	DEC HL] Z80:7cyc, R800:1cyc
0042ee: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0042ef: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0042f3: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0042f6: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0042f8: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0042fb: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0042fc: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004300: cd 59 01

[	EX DE , HL] Z80:5cyc, R800:1cyc
004303: eb

[	POP BC] Z80:11cyc, R800:5cyc
004304: c1

[	POP HL] Z80:11cyc, R800:5cyc
004305: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
004306: d5

[	CALL BSUP_FILVRM] Z80:18cyc, R800:5cyc
004307: cd 1c 43

[	POP HL] Z80:11cyc, R800:5cyc
00430a: e1

[	DEC HL] Z80:7cyc, R800:1cyc
00430b: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00430c: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004310: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004313: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004315: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004318: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004319: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE BSUP_FILVRM]
	Scope path: BSUP_FILVRM:

[BSUP_FILVRM ::]
	global label address: 0x00431c

[	PUSH AF] Z80:12cyc, R800:6cyc
00431c: f5

[	LD A , L] Z80:5cyc, R800:2cyc
00431d: 7d

[	DI] Z80:5cyc, R800:2cyc
00431e: f3

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
00431f: d3 99

[	LD A , H] Z80:5cyc, R800:2cyc
004321: 7c

[	OR A , 0X40] Z80:8cyc, R800:2cyc
004322: f6 40

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
004324: d3 99

[	POP AF] Z80:11cyc, R800:5cyc
004326: f1

[LOOP :]
	label address: 0x004327

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004327: d3 98

[	NOP] Z80:5cyc, R800:1cyc
004329: 00

[	DEC C] Z80:5cyc, R800:1cyc
00432a: 0d

[	JR NZ , LOOP] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00432b: 20 fa

[	DEC B] Z80:5cyc, R800:1cyc
00432d: 05

[	JP P , LOOP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00432e: f2 27 43

[	EI] Z80:5cyc, R800:1cyc
004331: fb

[	RET] Z80:11cyc, R800:5cyc
004332: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE BSUP_LDIRVM]
	Scope path: BSUP_LDIRVM:

[BSUP_LDIRVM ::]
	global label address: 0x004333

[	EX DE , HL] Z80:5cyc, R800:1cyc
004333: eb

[	LD A , L] Z80:5cyc, R800:2cyc
004334: 7d

[	DI] Z80:5cyc, R800:2cyc
004335: f3

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
004336: d3 99

[	LD A , H] Z80:5cyc, R800:2cyc
004338: 7c

[	OR A , 0X40] Z80:8cyc, R800:2cyc
004339: f6 40

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
00433b: d3 99

[	EX DE , HL] Z80:5cyc, R800:1cyc
00433d: eb

[LOOP :]
	label address: 0x00433e

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00433e: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00433f: 23

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004340: d3 98

[	DEC C] Z80:5cyc, R800:1cyc
004342: 0d

[	JR NZ , LOOP] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004343: 20 f9

[	DEC B] Z80:5cyc, R800:1cyc
004345: 05

[	JP P , LOOP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004346: f2 3e 43

[	EI] Z80:5cyc, R800:1cyc
004349: fb

[	RET] Z80:11cyc, R800:5cyc
00434a: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE BSUP_SETWRT]
	Scope path: BSUP_SETWRT:

[BSUP_SETWRT ::]
	global label address: 0x00434b

[	LD A , L] Z80:5cyc, R800:2cyc
00434b: 7d

[	DI] Z80:5cyc, R800:2cyc
00434c: f3

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
00434d: d3 99

[	LD A , H] Z80:5cyc, R800:2cyc
00434f: 7c

[	OR A , 0X40] Z80:8cyc, R800:2cyc
004350: f6 40

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
004352: d3 99

[	RET] Z80:11cyc, R800:5cyc
004354: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE BSUP_SETRD]
	Scope path: BSUP_SETRD:

[BSUP_SETRD ::]
	global label address: 0x004355

[	LD A , L] Z80:5cyc, R800:2cyc
004355: 7d

[	DI] Z80:5cyc, R800:2cyc
004356: f3

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
004357: d3 99

[	LD A , H] Z80:5cyc, R800:2cyc
004359: 7c

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
00435a: d3 99

[	RET] Z80:11cyc, R800:5cyc
00435c: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//VRAM.ASM"] end

[	INCLUDE ".//NAMETBL.ASM"] begin
[	SCOPE CALL_BFIL]
	Scope path: CALL_BFIL:

[CALL_BFIL ::]
	global label address: 0x00435d

[	DEC HL] Z80:7cyc, R800:1cyc
00435d: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00435e: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004362: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004365: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004367: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00436a: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
00436b: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00436f: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004372: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004373: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004374: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004378: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
00437b: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00437d: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004380: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004381: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004385: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004388: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004389: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00438a: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00438e: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004391: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004393: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004396: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004397: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00439b: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
00439e: f5

[	DEC HL] Z80:7cyc, R800:1cyc
00439f: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0043a0: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0043a4: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0043a7: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043a9: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0043ac: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0043ad: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0043b1: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
0043b4: f5

[	DEC HL] Z80:7cyc, R800:1cyc
0043b5: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0043b6: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0043ba: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0043bd: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043bf: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0043c2: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0043c3: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0043c7: cd 59 01

[	POP BC] Z80:11cyc, R800:5cyc
0043ca: c1

[	LD C , A] Z80:5cyc, R800:2cyc
0043cb: 4f

[	POP AF] Z80:11cyc, R800:5cyc
0043cc: f1

[	LD E , A] Z80:5cyc, R800:2cyc
0043cd: 5f

[	POP AF] Z80:11cyc, R800:5cyc
0043ce: f1

[	LD D , A] Z80:5cyc, R800:2cyc
0043cf: 57

[	POP AF] Z80:11cyc, R800:5cyc
0043d0: f1

[	PUSH HL] Z80:12cyc, R800:6cyc
0043d1: e5

[	LD L , A] Z80:5cyc, R800:2cyc
0043d2: 6f

[	OR A , A] Z80:5cyc, R800:1cyc
0043d3: b7

[	JP Z , END_OF_BFIL] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043d4: ca 22 44

[	CP A , 33] Z80:8cyc, R800:2cyc
0043d7: fe 21

[	JP NC , END_OF_BFIL] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043d9: d2 22 44

[	ADD A , E] Z80:5cyc, R800:1cyc
0043dc: 83

[	CP A , 33] Z80:8cyc, R800:2cyc
0043dd: fe 21

[	JP C , SKIP_ADJUST_W] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043df: da e6 43

[	LD A , 32] Z80:8cyc, R800:2cyc
0043e2: 3e 20

[	SUB A , H] Z80:5cyc, R800:1cyc
0043e4: 94

[	LD E , A] Z80:5cyc, R800:2cyc
0043e5: 5f

[SKIP_ADJUST_W :]
	label address: 0x0043e6

[	LD A , D] Z80:5cyc, R800:2cyc
0043e6: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
0043e7: b7

[	JP Z , END_OF_BFIL] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043e8: ca 22 44

[	CP A , 25] Z80:8cyc, R800:2cyc
0043eb: fe 19

[	JP NC , END_OF_BFIL] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043ed: d2 22 44

[	ADD A , B] Z80:5cyc, R800:1cyc
0043f0: 80

[	CP A , 25] Z80:8cyc, R800:2cyc
0043f1: fe 19

[	JP C , SKIP_ADJUST_H] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0043f3: da fa 43

[	LD A , 24] Z80:8cyc, R800:2cyc
0043f6: 3e 18

[	SUB A , D] Z80:5cyc, R800:1cyc
0043f8: 92

[	LD B , A] Z80:5cyc, R800:2cyc
0043f9: 47

[SKIP_ADJUST_H :]
	label address: 0x0043fa

[	LD A , D] Z80:5cyc, R800:2cyc
0043fa: 7a

[	LD H , 0X18 >> 2] Z80:8cyc, R800:2cyc
0043fb: 26 06

[	ADD A , A] Z80:5cyc, R800:1cyc
0043fd: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0043fe: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0043ff: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004400: 87

[	RL H] Z80:10cyc, R800:2cyc
004401: cb 14

[	ADD A , A] Z80:5cyc, R800:1cyc
004403: 87

[	RL H] Z80:10cyc, R800:2cyc
004404: cb 14

[	ADD A , L] Z80:5cyc, R800:1cyc
004406: 85

[	LD L , A] Z80:5cyc, R800:2cyc
004407: 6f

[	JP NC , LOOP_Y] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004408: d2 0c 44

[	INC H] Z80:5cyc, R800:1cyc
00440b: 24

[LOOP_Y :]
	label address: 0x00440c

[	PUSH HL] Z80:12cyc, R800:6cyc
00440c: e5

[	DI] Z80:5cyc, R800:2cyc
00440d: f3

[	CALL SETWRT] Z80:18cyc, R800:5cyc
00440e: cd 53 00

[	LD A , C] Z80:5cyc, R800:2cyc
004411: 79

[	LD H , E] Z80:5cyc, R800:2cyc
004412: 63

[LOOP_X :]
	label address: 0x004413

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004413: d3 98

[	NOP] Z80:5cyc, R800:1cyc
004415: 00

[	DEC H] Z80:5cyc, R800:1cyc
004416: 25

[	JR NZ , LOOP_X] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004417: 20 fa

[	POP HL] Z80:11cyc, R800:5cyc
004419: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
00441a: d5

[	LD DE , 32] Z80:11cyc, R800:3cyc
00441b: 11 20 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00441e: 19

[	POP DE] Z80:11cyc, R800:5cyc
00441f: d1

[	DJNZ LOOP_Y] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004420: 10 ea

[END_OF_BFIL :]
	label address: 0x004422

[	EI] Z80:5cyc, R800:1cyc
004422: fb

[	POP HL] Z80:11cyc, R800:5cyc
004423: e1

[	DEC HL] Z80:7cyc, R800:1cyc
004424: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004425: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004429: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
00442c: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00442e: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004431: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004432: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_BCPY]
	Scope path: CALL_BCPY:

[CALL_BCPY ::]
	global label address: 0x004435

[	DEC HL] Z80:7cyc, R800:1cyc
004435: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004436: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00443a: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
00443d: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00443f: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004442: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004443: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004447: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
00444a: f5

[	DEC HL] Z80:7cyc, R800:1cyc
00444b: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00444c: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004450: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004453: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004455: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004458: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004459: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00445d: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004460: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004461: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004462: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004466: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004469: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00446b: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00446e: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
00446f: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004473: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004476: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004477: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004478: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00447c: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
00447f: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004481: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004484: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004485: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004489: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
00448c: f5

[	DEC HL] Z80:7cyc, R800:1cyc
00448d: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00448e: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004492: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004495: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004497: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00449a: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
00449b: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00449f: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
0044a2: f5

[	DEC HL] Z80:7cyc, R800:1cyc
0044a3: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0044a4: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0044a8: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0044ab: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0044ad: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0044b0: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0044b1: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0044b5: cd 59 01

[	EXX] Z80:5cyc, R800:1cyc
0044b8: d9

[	POP BC] Z80:11cyc, R800:5cyc
0044b9: c1

[	LD C , A] Z80:5cyc, R800:2cyc
0044ba: 4f

[	POP AF] Z80:11cyc, R800:5cyc
0044bb: f1

[	POP DE] Z80:11cyc, R800:5cyc
0044bc: d1

[	LD E , A] Z80:5cyc, R800:2cyc
0044bd: 5f

[	POP AF] Z80:11cyc, R800:5cyc
0044be: f1

[	POP HL] Z80:11cyc, R800:5cyc
0044bf: e1

[	LD L , A] Z80:5cyc, R800:2cyc
0044c0: 6f

[	LD IY , - 32] Z80:16cyc, R800:4cyc
0044c1: fd 21 e0 ff

[	ADD IY , SP] Z80:17cyc, R800:2cyc
0044c5: fd 39

[	LD SP , IY] Z80:12cyc, R800:2cyc
0044c7: fd f9

[	LD A , B] Z80:5cyc, R800:2cyc
0044c9: 78

[	CP A , 32] Z80:8cyc, R800:2cyc
0044ca: fe 20

[	JP NC , END_OF_BCPY] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0044cc: d2 a8 45

[	ADD A , D] Z80:5cyc, R800:1cyc
0044cf: 82

[	CP A , 32] Z80:8cyc, R800:2cyc
0044d0: fe 20

[	JP C , SKIP_ADJUST_WIDTH1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0044d2: da d9 44

[	LD A , 32] Z80:8cyc, R800:2cyc
0044d5: 3e 20

[	SUB A , B] Z80:5cyc, R800:1cyc
0044d7: 90

[	LD D , A] Z80:5cyc, R800:2cyc
0044d8: 57

[SKIP_ADJUST_WIDTH1 :]
	label address: 0x0044d9

[	LD A , H] Z80:5cyc, R800:2cyc
0044d9: 7c

[	CP A , 32] Z80:8cyc, R800:2cyc
0044da: fe 20

[	JP NC , END_OF_BCPY] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0044dc: d2 a8 45

[	ADD A , D] Z80:5cyc, R800:1cyc
0044df: 82

[	CP A , 32] Z80:8cyc, R800:2cyc
0044e0: fe 20

[	JP C , SKIP_ADJUST_WIDTH2] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0044e2: da e9 44

[	LD A , 32] Z80:8cyc, R800:2cyc
0044e5: 3e 20

[	SUB A , H] Z80:5cyc, R800:1cyc
0044e7: 94

[	LD D , A] Z80:5cyc, R800:2cyc
0044e8: 57

[SKIP_ADJUST_WIDTH2 :]
	label address: 0x0044e9

[	LD A , C] Z80:5cyc, R800:2cyc
0044e9: 79

[	CP A , 24] Z80:8cyc, R800:2cyc
0044ea: fe 18

[	JP NC , END_OF_BCPY] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0044ec: d2 a8 45

[	ADD A , E] Z80:5cyc, R800:1cyc
0044ef: 83

[	CP A , 24] Z80:8cyc, R800:2cyc
0044f0: fe 18

[	JP C , SKIP_ADJUST_HEIGHT1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0044f2: da f9 44

[	LD A , 24] Z80:8cyc, R800:2cyc
0044f5: 3e 18

[	SUB A , C] Z80:5cyc, R800:1cyc
0044f7: 91

[	LD E , A] Z80:5cyc, R800:2cyc
0044f8: 5f

[SKIP_ADJUST_HEIGHT1 :]
	label address: 0x0044f9

[	LD A , L] Z80:5cyc, R800:2cyc
0044f9: 7d

[	CP A , 24] Z80:8cyc, R800:2cyc
0044fa: fe 18

[	JP NC , END_OF_BCPY] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0044fc: d2 a8 45

[	ADD A , D] Z80:5cyc, R800:1cyc
0044ff: 82

[	CP A , 24] Z80:8cyc, R800:2cyc
004500: fe 18

[	JP C , SKIP_ADJUST_HEIGHT2] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004502: da 09 45

[	LD A , 24] Z80:8cyc, R800:2cyc
004505: 3e 18

[	SUB A , L] Z80:5cyc, R800:1cyc
004507: 95

[	LD E , A] Z80:5cyc, R800:2cyc
004508: 5f

[SKIP_ADJUST_HEIGHT2 :]
	label address: 0x004509

[	LD A , L] Z80:5cyc, R800:2cyc
004509: 7d

[	CP A , C] Z80:5cyc, R800:1cyc
00450a: b9

[	PUSH AF] Z80:12cyc, R800:6cyc
00450b: f5

[	XOR A , A] Z80:5cyc, R800:1cyc
00450c: af

[	SRL L] Z80:10cyc, R800:2cyc
00450d: cb 3d

[	RRA] Z80:5cyc, R800:1cyc
00450f: 1f

[	SRL L] Z80:10cyc, R800:2cyc
004510: cb 3d

[	RRA] Z80:5cyc, R800:1cyc
004512: 1f

[	SRL L] Z80:10cyc, R800:2cyc
004513: cb 3d

[	RRA] Z80:5cyc, R800:1cyc
004515: 1f

[	ADD A , H] Z80:5cyc, R800:1cyc
004516: 84

[	LD H , L] Z80:5cyc, R800:2cyc
004517: 65

[	LD L , A] Z80:5cyc, R800:2cyc
004518: 6f

[	LD A , 0X18] Z80:8cyc, R800:2cyc
004519: 3e 18

[	ADD A , H] Z80:5cyc, R800:1cyc
00451b: 84

[	LD H , A] Z80:5cyc, R800:2cyc
00451c: 67

[	XOR A , A] Z80:5cyc, R800:1cyc
00451d: af

[	SRL C] Z80:10cyc, R800:2cyc
00451e: cb 39

[	RRA] Z80:5cyc, R800:1cyc
004520: 1f

[	SRL C] Z80:10cyc, R800:2cyc
004521: cb 39

[	RRA] Z80:5cyc, R800:1cyc
004523: 1f

[	SRL C] Z80:10cyc, R800:2cyc
004524: cb 39

[	RRA] Z80:5cyc, R800:1cyc
004526: 1f

[	ADD A , B] Z80:5cyc, R800:1cyc
004527: 80

[	LD B , C] Z80:5cyc, R800:2cyc
004528: 41

[	LD C , A] Z80:5cyc, R800:2cyc
004529: 4f

[	LD A , 0X18] Z80:8cyc, R800:2cyc
00452a: 3e 18

[	ADD A , B] Z80:5cyc, R800:1cyc
00452c: 80

[	LD B , D] Z80:5cyc, R800:2cyc
00452d: 42

[	LD D , A] Z80:5cyc, R800:2cyc
00452e: 57

[	LD A , E] Z80:5cyc, R800:2cyc
00452f: 7b

[	LD E , C] Z80:5cyc, R800:2cyc
004530: 59

[	LD C , A] Z80:5cyc, R800:2cyc
004531: 4f

[	POP AF] Z80:11cyc, R800:5cyc
004532: f1

[	JP C , COPY_TO_BOTTOM] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004533: da 67 45

[COPY_TO_TOP :]
	label address: 0x004536

[	CALL BSUP_SETRD] Z80:18cyc, R800:5cyc
004536: cd 55 43

[	PUSH HL] Z80:12cyc, R800:6cyc
004539: e5

[	PUSH IY] Z80:17cyc, R800:7cyc
00453a: fd e5

[	POP HL] Z80:11cyc, R800:5cyc
00453c: e1

[	PUSH BC] Z80:12cyc, R800:6cyc
00453d: c5

[X_LOOP1R :]
	label address: 0x00453e

[	IN A , [ 0X98 ]] Z80:12cyc, R800:10 or 9cyc
00453e: db 98

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004540: 77

[	INC HL] Z80:7cyc, R800:1cyc
004541: 23

[	DJNZ X_LOOP1R] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004542: 10 fa

[	POP BC] Z80:11cyc, R800:5cyc
004544: c1

[	EX DE , HL] Z80:5cyc, R800:1cyc
004545: eb

[	CALL BSUP_SETWRT] Z80:18cyc, R800:5cyc
004546: cd 4b 43

[	EX DE , HL] Z80:5cyc, R800:1cyc
004549: eb

[	PUSH IY] Z80:17cyc, R800:7cyc
00454a: fd e5

[	POP HL] Z80:11cyc, R800:5cyc
00454c: e1

[	PUSH BC] Z80:12cyc, R800:6cyc
00454d: c5

[X_LOOP1W :]
	label address: 0x00454e

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00454e: 7e

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
00454f: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004551: 23

[	DJNZ X_LOOP1W] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004552: 10 fa

[	EI] Z80:5cyc, R800:1cyc
004554: fb

[	POP BC] Z80:11cyc, R800:5cyc
004555: c1

[	POP HL] Z80:11cyc, R800:5cyc
004556: e1

[	PUSH BC] Z80:12cyc, R800:6cyc
004557: c5

[	LD BC , 32] Z80:11cyc, R800:3cyc
004558: 01 20 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00455b: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
00455c: eb

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00455d: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
00455e: eb

[	POP BC] Z80:11cyc, R800:5cyc
00455f: c1

[	DEC C] Z80:5cyc, R800:1cyc
004560: 0d

[	JP NZ , COPY_TO_TOP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004561: c2 36 45

[	JP END_OF_BCPY] Z80:11cyc, R800:5cyc
004564: c3 a8 45

[COPY_TO_BOTTOM :]
	label address: 0x004567

[	PUSH BC] Z80:12cyc, R800:6cyc
004567: c5

[	LD B , C] Z80:5cyc, R800:2cyc
004568: 41

[	LD C , L] Z80:5cyc, R800:2cyc
004569: 4d

[	LD L , B] Z80:5cyc, R800:2cyc
00456a: 68

[	LD B , H] Z80:5cyc, R800:2cyc
00456b: 44

[	LD H , 0] Z80:8cyc, R800:2cyc
00456c: 26 00

[	ADD HL , HL] Z80:12cyc, R800:1cyc
00456e: 29

[	ADD HL , HL] Z80:12cyc, R800:1cyc
00456f: 29

[	ADD HL , HL] Z80:12cyc, R800:1cyc
004570: 29

[	ADD HL , HL] Z80:12cyc, R800:1cyc
004571: 29

[	ADD HL , HL] Z80:12cyc, R800:1cyc
004572: 29

[	PUSH HL] Z80:12cyc, R800:6cyc
004573: e5

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004574: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004575: eb

[	POP BC] Z80:11cyc, R800:5cyc
004576: c1

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004577: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004578: eb

[	POP BC] Z80:11cyc, R800:5cyc
004579: c1

[COPY_TO_BOTTOM_Y_LOOP :]
	label address: 0x00457a

[	CALL BSUP_SETRD] Z80:18cyc, R800:5cyc
00457a: cd 55 43

[	PUSH HL] Z80:12cyc, R800:6cyc
00457d: e5

[	PUSH IY] Z80:17cyc, R800:7cyc
00457e: fd e5

[	POP HL] Z80:11cyc, R800:5cyc
004580: e1

[	PUSH BC] Z80:12cyc, R800:6cyc
004581: c5

[X_LOOP2R :]
	label address: 0x004582

[	IN A , [ 0X98 ]] Z80:12cyc, R800:10 or 9cyc
004582: db 98

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004584: 77

[	INC HL] Z80:7cyc, R800:1cyc
004585: 23

[	DJNZ X_LOOP2R] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004586: 10 fa

[	POP BC] Z80:11cyc, R800:5cyc
004588: c1

[	EX DE , HL] Z80:5cyc, R800:1cyc
004589: eb

[	CALL BSUP_SETWRT] Z80:18cyc, R800:5cyc
00458a: cd 4b 43

[	EX DE , HL] Z80:5cyc, R800:1cyc
00458d: eb

[	PUSH IY] Z80:17cyc, R800:7cyc
00458e: fd e5

[	POP HL] Z80:11cyc, R800:5cyc
004590: e1

[	PUSH BC] Z80:12cyc, R800:6cyc
004591: c5

[X_LOOP2W :]
	label address: 0x004592

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004592: 7e

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004593: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004595: 23

[	DJNZ X_LOOP2W] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004596: 10 fa

[	EI] Z80:5cyc, R800:1cyc
004598: fb

[	POP BC] Z80:11cyc, R800:5cyc
004599: c1

[	POP HL] Z80:11cyc, R800:5cyc
00459a: e1

[	PUSH BC] Z80:12cyc, R800:6cyc
00459b: c5

[	LD BC , - 32] Z80:11cyc, R800:3cyc
00459c: 01 e0 ff

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00459f: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
0045a0: eb

[	ADD HL , BC] Z80:12cyc, R800:1cyc
0045a1: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
0045a2: eb

[	POP BC] Z80:11cyc, R800:5cyc
0045a3: c1

[	DEC C] Z80:5cyc, R800:1cyc
0045a4: 0d

[	JP NZ , COPY_TO_BOTTOM_Y_LOOP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0045a5: c2 7a 45

[END_OF_BCPY :]
	label address: 0x0045a8

[	LD HL , 32] Z80:11cyc, R800:3cyc
0045a8: 21 20 00

[	ADD HL , SP] Z80:12cyc, R800:1cyc
0045ab: 39

[	LD SP , HL] Z80:7cyc, R800:1cyc
0045ac: f9

[	EXX] Z80:5cyc, R800:1cyc
0045ad: d9

[	DEC HL] Z80:7cyc, R800:1cyc
0045ae: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0045af: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0045b3: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
0045b6: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0045b8: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0045bb: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
0045bc: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_BCLS]
	Scope path: CALL_BCLS:

[CALL_BCLS ::]
	global label address: 0x0045bf

[	PUSH HL] Z80:12cyc, R800:6cyc
0045bf: e5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
0045c0: cd 91 42

[	LD A , [ IX + WORK_SPRITE_DRIVE_ON ]] Z80:21cyc, R800:7cyc
0045c3: dd 7e 07

[	PUSH AF] Z80:12cyc, R800:6cyc
0045c6: f5

[	XOR A , A] Z80:5cyc, R800:1cyc
0045c7: af

[	LD [ IX + WORK_SPRITE_DRIVE_ON ] , A] Z80:8cyc, R800:4cyc
0045c8: dd 77 07

[	CALL CLS] Z80:18cyc, R800:5cyc
0045cb: cd c3 00

[	POP AF] Z80:11cyc, R800:5cyc
0045ce: f1

[	LD [ IX + WORK_SPRITE_DRIVE_ON ] , A] Z80:8cyc, R800:4cyc
0045cf: dd 77 07

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
0045d2: cd b8 42

[	POP HL] Z80:11cyc, R800:5cyc
0045d5: e1

[	RET] Z80:11cyc, R800:5cyc
0045d6: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//NAMETBL.ASM"] end

[	INCLUDE ".//PCG.ASM"] begin
[	SCOPE CALL_PCG_PARAM_SUB]
	Scope path: CALL_PCG_PARAM_SUB:

[CALL_PCG_PARAM_SUB ::]
	global label address: 0x0045d7

[	DEC HL] Z80:7cyc, R800:1cyc
0045d7: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0045d8: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0045dc: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
0045df: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0045e1: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0045e4: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0045e5: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0045e9: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
0045ec: f5

[	DEC HL] Z80:7cyc, R800:1cyc
0045ed: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0045ee: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0045f2: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0045f5: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0045f7: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0045fa: 23

[	LD IX , CALBAS_FRMEVL] Z80:16cyc, R800:4cyc
0045fb: dd 21 64 4c

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0045ff: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
004602: e5

[	LD IX , CALBAS_FRESTR] Z80:16cyc, R800:4cyc
004603: dd 21 d0 67

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004607: cd 59 01

[	EX DE , HL] Z80:5cyc, R800:1cyc
00460a: eb

[	POP HL] Z80:11cyc, R800:5cyc
00460b: e1

[	POP AF] Z80:11cyc, R800:5cyc
00460c: f1

[	POP BC] Z80:11cyc, R800:5cyc
00460d: c1

[	PUSH HL] Z80:12cyc, R800:6cyc
00460e: e5

[	LD HL , - 8] Z80:11cyc, R800:3cyc
00460f: 21 f8 ff

[	ADD HL , SP] Z80:12cyc, R800:1cyc
004612: 39

[	LD SP , HL] Z80:7cyc, R800:1cyc
004613: f9

[	PUSH BC] Z80:12cyc, R800:6cyc
004614: c5

[	LD B , A] Z80:5cyc, R800:2cyc
004615: 47

[	LD DE , [ DAC + 2 ]] Z80:22cyc, R800:8cyc
004616: ed 5b f8 f7

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00461a: 1a

[	CP A , 16] Z80:8cyc, R800:2cyc
00461b: fe 10

[	JP NZ , ILLEGAL_FUNCTION_CALL_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00461d: c2 80 41

[	PUSH HL] Z80:12cyc, R800:6cyc
004620: e5

[	INC DE] Z80:7cyc, R800:1cyc
004621: 13

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
004622: 1a

[	LD L , A] Z80:5cyc, R800:2cyc
004623: 6f

[	INC DE] Z80:7cyc, R800:1cyc
004624: 13

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
004625: 1a

[	LD H , A] Z80:5cyc, R800:2cyc
004626: 67

[	POP DE] Z80:11cyc, R800:5cyc
004627: d1

[	PUSH DE] Z80:12cyc, R800:6cyc
004628: d5

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
004629: cd 49 46

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
00462c: cd 49 46

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
00462f: cd 49 46

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
004632: cd 49 46

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
004635: cd 49 46

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
004638: cd 49 46

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
00463b: cd 49 46

[	CALL GET_ONE_BYTE] Z80:18cyc, R800:5cyc
00463e: cd 49 46

[	LD L , B] Z80:5cyc, R800:2cyc
004641: 68

[	LD H , 0] Z80:8cyc, R800:2cyc
004642: 26 00

[	ADD HL , HL] Z80:12cyc, R800:1cyc
004644: 29

[	ADD HL , HL] Z80:12cyc, R800:1cyc
004645: 29

[	ADD HL , HL] Z80:12cyc, R800:1cyc
004646: 29

[	POP DE] Z80:11cyc, R800:5cyc
004647: d1

[	RET] Z80:11cyc, R800:5cyc
004648: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_ONE_BYTE]
	Scope path: GET_ONE_BYTE:

[GET_ONE_BYTE ::]
	global label address: 0x004649

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004649: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00464a: 23

[	BIT 6 , A] Z80:10cyc, R800:2cyc
00464b: cb 77

[	JP Z , SKIP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00464d: ca 52 46

[	ADD A , 9] Z80:8cyc, R800:2cyc
004650: c6 09

[SKIP1 :]
	label address: 0x004652

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
004652: e6 0f

[	ADD A , A] Z80:5cyc, R800:1cyc
004654: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004655: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004656: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004657: 87

[	LD C , A] Z80:5cyc, R800:2cyc
004658: 4f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004659: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00465a: 23

[	BIT 6 , A] Z80:10cyc, R800:2cyc
00465b: cb 77

[	JP Z , SKIP2] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00465d: ca 62 46

[	ADD A , 9] Z80:8cyc, R800:2cyc
004660: c6 09

[SKIP2 :]
	label address: 0x004662

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
004662: e6 0f

[	OR A , C] Z80:5cyc, R800:1cyc
004664: b1

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
004665: 12

[	INC DE] Z80:7cyc, R800:1cyc
004666: 13

[	RET] Z80:11cyc, R800:5cyc
004667: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_PCG0]
	Scope path: CALL_PCG0:

[CALL_PCG0 ::]
	global label address: 0x004668

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
004668: cd d7 45

[	EX DE , HL] Z80:5cyc, R800:1cyc
00466b: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
00466c: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
00466f: cd 33 43

[EXIT_CALL_PCG ::]
	global label address: 0x004672

[	LD HL , 8] Z80:11cyc, R800:3cyc
004672: 21 08 00

[	ADD HL , SP] Z80:12cyc, R800:1cyc
004675: 39

[	LD SP , HL] Z80:7cyc, R800:1cyc
004676: f9

[	POP HL] Z80:11cyc, R800:5cyc
004677: e1

[	DEC HL] Z80:7cyc, R800:1cyc
004678: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004679: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00467d: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004680: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004682: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004685: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004686: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_PCG1]
	Scope path: CALL_PCG1:

[CALL_PCG1 ::]
	global label address: 0x004689

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
004689: cd d7 45

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
00468c: 01 00 08

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00468f: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004690: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004691: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004694: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
004697: c3 72 46

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_PCG2]
	Scope path: CALL_PCG2:

[CALL_PCG2 ::]
	global label address: 0x00469a

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
00469a: cd d7 45

[	LD BC , 0X1000] Z80:11cyc, R800:3cyc
00469d: 01 00 10

[	ADD HL , BC] Z80:12cyc, R800:1cyc
0046a0: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
0046a1: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
0046a2: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
0046a5: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
0046a8: c3 72 46

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_PCG3]
	Scope path: CALL_PCG3:

[CALL_PCG3 ::]
	global label address: 0x0046ab

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
0046ab: cd d7 45

[	PUSH HL] Z80:12cyc, R800:6cyc
0046ae: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
0046af: d5

[	EX DE , HL] Z80:5cyc, R800:1cyc
0046b0: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
0046b1: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
0046b4: cd 33 43

[	POP DE] Z80:11cyc, R800:5cyc
0046b7: d1

[	POP HL] Z80:11cyc, R800:5cyc
0046b8: e1

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
0046b9: 01 00 08

[	ADD HL , BC] Z80:12cyc, R800:1cyc
0046bc: 09

[	PUSH HL] Z80:12cyc, R800:6cyc
0046bd: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
0046be: d5

[	EX DE , HL] Z80:5cyc, R800:1cyc
0046bf: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
0046c0: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
0046c3: cd 33 43

[	POP DE] Z80:11cyc, R800:5cyc
0046c6: d1

[	POP HL] Z80:11cyc, R800:5cyc
0046c7: e1

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
0046c8: 01 00 08

[	ADD HL , BC] Z80:12cyc, R800:1cyc
0046cb: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
0046cc: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
0046cd: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
0046d0: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
0046d3: c3 72 46

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_COL0]
	Scope path: CALL_COL0:

[CALL_COL0 ::]
	global label address: 0x0046d6

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
0046d6: cd d7 45

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
0046d9: 01 00 20

[	ADD HL , BC] Z80:12cyc, R800:1cyc
0046dc: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
0046dd: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
0046de: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
0046e1: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
0046e4: c3 72 46

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_COL1]
	Scope path: CALL_COL1:

[CALL_COL1 ::]
	global label address: 0x0046e7

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
0046e7: cd d7 45

[	LD BC , 0X2800] Z80:11cyc, R800:3cyc
0046ea: 01 00 28

[	ADD HL , BC] Z80:12cyc, R800:1cyc
0046ed: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
0046ee: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
0046ef: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
0046f2: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
0046f5: c3 72 46

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_COL2]
	Scope path: CALL_COL2:

[CALL_COL2 ::]
	global label address: 0x0046f8

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
0046f8: cd d7 45

[	LD BC , 0X3000] Z80:11cyc, R800:3cyc
0046fb: 01 00 30

[	ADD HL , BC] Z80:12cyc, R800:1cyc
0046fe: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
0046ff: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004700: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004703: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
004706: c3 72 46

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_COL3]
	Scope path: CALL_COL3:

[CALL_COL3 ::]
	global label address: 0x004709

[	CALL CALL_PCG_PARAM_SUB] Z80:18cyc, R800:5cyc
004709: cd d7 45

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00470c: 01 00 20

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00470f: 09

[	PUSH HL] Z80:12cyc, R800:6cyc
004710: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
004711: d5

[	EX DE , HL] Z80:5cyc, R800:1cyc
004712: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004713: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004716: cd 33 43

[	POP DE] Z80:11cyc, R800:5cyc
004719: d1

[	POP HL] Z80:11cyc, R800:5cyc
00471a: e1

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
00471b: 01 00 08

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00471e: 09

[	PUSH HL] Z80:12cyc, R800:6cyc
00471f: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
004720: d5

[	EX DE , HL] Z80:5cyc, R800:1cyc
004721: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
004722: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004725: cd 33 43

[	POP DE] Z80:11cyc, R800:5cyc
004728: d1

[	POP HL] Z80:11cyc, R800:5cyc
004729: e1

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
00472a: 01 00 08

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00472d: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
00472e: eb

[	LD BC , 8] Z80:11cyc, R800:3cyc
00472f: 01 08 00

[	CALL BSUP_LDIRVM] Z80:18cyc, R800:5cyc
004732: cd 33 43

[	JP EXIT_CALL_PCG] Z80:11cyc, R800:5cyc
004735: c3 72 46

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_BFNT]
	Scope path: CALL_BFNT:

[CALL_BFNT ::]
	global label address: 0x004738

[	PUSH HL] Z80:12cyc, R800:6cyc
004738: e5

[	LD HL , 0] Z80:11cyc, R800:3cyc
004739: 21 00 00

[	DI] Z80:5cyc, R800:2cyc
00473c: f3

[	CALL SETWRT] Z80:18cyc, R800:5cyc
00473d: cd 53 00

[	CALL SET_FONT] Z80:18cyc, R800:5cyc
004740: cd 4e 47

[	CALL SET_FONT] Z80:18cyc, R800:5cyc
004743: cd 4e 47

[	CALL SET_FONT] Z80:18cyc, R800:5cyc
004746: cd 4e 47

[	EI] Z80:5cyc, R800:1cyc
004749: fb

[	POP HL] Z80:11cyc, R800:5cyc
00474a: e1

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
00474b: c3 f7 40

[SET_FONT :]
	label address: 0x00474e

[	LD HL , [ 0X0004 ]] Z80:17cyc, R800:7cyc
00474e: 2a 04 00

[	LD BC , 0X800] Z80:11cyc, R800:3cyc
004751: 01 00 08

[LOOP1 :]
	label address: 0x004754

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004754: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004755: 23

[	LD D , A] Z80:5cyc, R800:2cyc
004756: 57

[	SRL A] Z80:10cyc, R800:2cyc
004757: cb 3f

[	OR A , D] Z80:5cyc, R800:1cyc
004759: b2

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
00475a: d3 98

[	DEC BC] Z80:7cyc, R800:1cyc
00475c: 0b

[	LD A , C] Z80:5cyc, R800:2cyc
00475d: 79

[	OR A , B] Z80:5cyc, R800:1cyc
00475e: b0

[	JP NZ , LOOP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00475f: c2 54 47

[	RET] Z80:11cyc, R800:5cyc
004762: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//PCG.ASM"] end

[	INCLUDE ".//SPRITE.ASM"] begin
[	SCOPE CALL_SDRV]
	Scope path: CALL_SDRV:

[CALL_SDRV ::]
	global label address: 0x004763

[	DEC HL] Z80:7cyc, R800:1cyc
004763: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004764: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004768: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
00476b: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00476d: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004770: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004771: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004775: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
004778: e5

[	PUSH AF] Z80:12cyc, R800:6cyc
004779: f5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
00477a: cd 91 42

[	POP AF] Z80:11cyc, R800:5cyc
00477d: f1

[	LD [ IX + WORK_SPRITE_DRIVE_ON ] , A] Z80:8cyc, R800:4cyc
00477e: dd 77 07

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
004781: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
004784: fb

[	POP HL] Z80:11cyc, R800:5cyc
004785: e1

[	DEC HL] Z80:7cyc, R800:1cyc
004786: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004787: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00478b: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
00478e: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004790: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004793: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004794: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SSTP]
	Scope path: CALL_SSTP:

[CALL_SSTP ::]
	global label address: 0x004797

[	DEC HL] Z80:7cyc, R800:1cyc
004797: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004798: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00479c: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
00479f: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0047a1: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0047a4: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0047a5: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0047a9: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
0047ac: e5

[	PUSH AF] Z80:12cyc, R800:6cyc
0047ad: f5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
0047ae: cd 91 42

[	POP AF] Z80:11cyc, R800:5cyc
0047b1: f1

[	LD [ IX + WORK_SPRITE_STOP_AUTO_MOVE ] , A] Z80:8cyc, R800:4cyc
0047b2: dd 77 08

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
0047b5: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
0047b8: fb

[	POP HL] Z80:11cyc, R800:5cyc
0047b9: e1

[	DEC HL] Z80:7cyc, R800:1cyc
0047ba: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0047bb: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0047bf: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
0047c2: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0047c4: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0047c7: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
0047c8: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SPUT]
	Scope path: CALL_SPUT:

[CALL_SPUT ::]
	global label address: 0x0047cb

[	DEC HL] Z80:7cyc, R800:1cyc
0047cb: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0047cc: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0047d0: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
0047d3: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0047d5: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0047d8: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0047d9: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0047dd: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
0047e0: e5

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
0047e1: e6 1f

[	ADD A , A] Z80:5cyc, R800:1cyc
0047e3: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0047e4: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0047e5: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0047e6: 87

[	LD H , 0] Z80:8cyc, R800:2cyc
0047e7: 26 00

[	RL H] Z80:10cyc, R800:2cyc
0047e9: cb 14

[	LD L , A] Z80:5cyc, R800:2cyc
0047eb: 6f

[	LD DE , WORK_SPRITE_INFO + 12] Z80:11cyc, R800:3cyc
0047ec: 11 15 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0047ef: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
0047f0: eb

[	POP HL] Z80:11cyc, R800:5cyc
0047f1: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
0047f2: d5

[	DEC HL] Z80:7cyc, R800:1cyc
0047f3: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0047f4: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0047f8: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0047fb: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0047fd: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004800: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004801: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004805: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004808: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004809: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00480a: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00480e: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004811: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004813: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004816: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004817: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00481b: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
00481e: f5

[	DEC HL] Z80:7cyc, R800:1cyc
00481f: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004820: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004824: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004827: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004829: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00482c: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
00482d: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004831: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004834: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004835: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004836: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00483a: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
00483d: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00483f: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004842: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004843: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004847: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
00484a: f5

[	EXX] Z80:5cyc, R800:1cyc
00484b: d9

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
00484c: cd 91 42

[	LD HL , 8] Z80:11cyc, R800:3cyc
00484f: 21 08 00

[	ADD HL , SP] Z80:12cyc, R800:1cyc
004852: 39

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004853: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004854: 23

[	LD H , [ HL ]] Z80:8cyc, R800:4cyc
004855: 66

[	LD L , E] Z80:5cyc, R800:2cyc
004856: 6b

[	LD E , IXL] Z80:10cyc, R800:2cyc
004857: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
004859: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00485b: 19

[	DI] Z80:5cyc, R800:2cyc
00485c: f3

[	LD E , 0] Z80:8cyc, R800:2cyc
00485d: 1e 00

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
00485f: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004860: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004861: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004862: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004863: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004864: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004865: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004866: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004867: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004868: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004869: 73

[	DEC HL] Z80:7cyc, R800:1cyc
00486a: 2b

[	POP AF] Z80:11cyc, R800:5cyc
00486b: f1

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00486c: 77

[	DEC HL] Z80:7cyc, R800:1cyc
00486d: 2b

[	POP AF] Z80:11cyc, R800:5cyc
00486e: f1

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00486f: 77

[	DEC HL] Z80:7cyc, R800:1cyc
004870: 2b

[	POP DE] Z80:11cyc, R800:5cyc
004871: d1

[	POP BC] Z80:11cyc, R800:5cyc
004872: c1

[	XOR A , A] Z80:5cyc, R800:1cyc
004873: af

[	LD E , A] Z80:5cyc, R800:2cyc
004874: 5f

[	SRA D] Z80:10cyc, R800:2cyc
004875: cb 2a

[	RR E] Z80:10cyc, R800:2cyc
004877: cb 1b

[	LD C , A] Z80:5cyc, R800:2cyc
004879: 4f

[	SRA B] Z80:10cyc, R800:2cyc
00487a: cb 28

[	RR C] Z80:10cyc, R800:2cyc
00487c: cb 19

[	LD [ HL ] , B] Z80:8cyc, R800:4cyc
00487e: 70

[	DEC HL] Z80:7cyc, R800:1cyc
00487f: 2b

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
004880: 71

[	DEC HL] Z80:7cyc, R800:1cyc
004881: 2b

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004882: 72

[	DEC HL] Z80:7cyc, R800:1cyc
004883: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004884: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004885: 2b

[	INC A] Z80:5cyc, R800:1cyc
004886: 3c

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004887: 77

[	EI] Z80:5cyc, R800:1cyc
004888: fb

[	POP DE] Z80:11cyc, R800:5cyc
004889: d1

[	EXX] Z80:5cyc, R800:1cyc
00488a: d9

[	PUSH HL] Z80:12cyc, R800:6cyc
00488b: e5

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
00488c: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
00488f: fb

[	POP HL] Z80:11cyc, R800:5cyc
004890: e1

[	DEC HL] Z80:7cyc, R800:1cyc
004891: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004892: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004896: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004899: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00489b: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00489e: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
00489f: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SLNK]
	Scope path: CALL_SLNK:

[CALL_SLNK ::]
	global label address: 0x0048a2

[	DEC HL] Z80:7cyc, R800:1cyc
0048a2: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0048a3: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048a7: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
0048aa: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0048ac: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0048af: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0048b0: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048b4: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
0048b7: e5

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
0048b8: e6 1f

[	ADD A , A] Z80:5cyc, R800:1cyc
0048ba: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0048bb: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0048bc: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
0048bd: 87

[	LD H , 0] Z80:8cyc, R800:2cyc
0048be: 26 00

[	RL H] Z80:10cyc, R800:2cyc
0048c0: cb 14

[	LD L , A] Z80:5cyc, R800:2cyc
0048c2: 6f

[	LD DE , WORK_SPRITE_INFO + 12] Z80:11cyc, R800:3cyc
0048c3: 11 15 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0048c6: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
0048c7: eb

[	POP HL] Z80:11cyc, R800:5cyc
0048c8: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
0048c9: d5

[	DEC HL] Z80:7cyc, R800:1cyc
0048ca: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0048cb: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048cf: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0048d2: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0048d4: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0048d7: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0048d8: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048dc: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
0048df: f5

[	DEC HL] Z80:7cyc, R800:1cyc
0048e0: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0048e1: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048e5: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0048e8: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0048ea: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0048ed: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
0048ee: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048f2: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
0048f5: f5

[	DEC HL] Z80:7cyc, R800:1cyc
0048f6: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0048f7: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0048fb: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0048fe: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004900: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004903: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004904: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004908: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
00490b: f5

[	EXX] Z80:5cyc, R800:1cyc
00490c: d9

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
00490d: cd 91 42

[	LD HL , 6] Z80:11cyc, R800:3cyc
004910: 21 06 00

[	ADD HL , SP] Z80:12cyc, R800:1cyc
004913: 39

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004914: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004915: 23

[	LD H , [ HL ]] Z80:8cyc, R800:4cyc
004916: 66

[	LD L , E] Z80:5cyc, R800:2cyc
004917: 6b

[	LD E , IXL] Z80:10cyc, R800:2cyc
004918: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
00491a: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00491c: 19

[	DI] Z80:5cyc, R800:2cyc
00491d: f3

[	LD E , 0] Z80:8cyc, R800:2cyc
00491e: 1e 00

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004920: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004921: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004922: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004923: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004924: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004925: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004926: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004927: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004928: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004929: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
00492a: 73

[	DEC HL] Z80:7cyc, R800:1cyc
00492b: 2b

[	POP AF] Z80:11cyc, R800:5cyc
00492c: f1

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00492d: 77

[	DEC HL] Z80:7cyc, R800:1cyc
00492e: 2b

[	POP AF] Z80:11cyc, R800:5cyc
00492f: f1

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004930: 77

[	DEC HL] Z80:7cyc, R800:1cyc
004931: 2b

[	POP DE] Z80:11cyc, R800:5cyc
004932: d1

[	LD E , 0] Z80:8cyc, R800:2cyc
004933: 1e 00

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004935: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004936: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004937: 73

[	DEC HL] Z80:7cyc, R800:1cyc
004938: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004939: 73

[	DEC HL] Z80:7cyc, R800:1cyc
00493a: 2b

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
00493b: 72

[	DEC HL] Z80:7cyc, R800:1cyc
00493c: 2b

[	LD A , 2] Z80:8cyc, R800:2cyc
00493d: 3e 02

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00493f: 77

[	EI] Z80:5cyc, R800:1cyc
004940: fb

[	POP DE] Z80:11cyc, R800:5cyc
004941: d1

[	EXX] Z80:5cyc, R800:1cyc
004942: d9

[	PUSH HL] Z80:12cyc, R800:6cyc
004943: e5

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
004944: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
004947: fb

[	POP HL] Z80:11cyc, R800:5cyc
004948: e1

[	DEC HL] Z80:7cyc, R800:1cyc
004949: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00494a: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00494e: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004951: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004953: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004956: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004957: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SMOV]
	Scope path: CALL_SMOV:

[CALL_SMOV ::]
	global label address: 0x00495a

[	DEC HL] Z80:7cyc, R800:1cyc
00495a: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
00495b: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00495f: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004962: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004964: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004967: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004968: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00496c: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
00496f: e5

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
004970: e6 1f

[	ADD A , A] Z80:5cyc, R800:1cyc
004972: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004973: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004974: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004975: 87

[	LD H , 0] Z80:8cyc, R800:2cyc
004976: 26 00

[	RL H] Z80:10cyc, R800:2cyc
004978: cb 14

[	LD L , A] Z80:5cyc, R800:2cyc
00497a: 6f

[	LD DE , WORK_SPRITE_INFO + 12] Z80:11cyc, R800:3cyc
00497b: 11 15 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00497e: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
00497f: eb

[	POP HL] Z80:11cyc, R800:5cyc
004980: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
004981: d5

[	DEC HL] Z80:7cyc, R800:1cyc
004982: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004983: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004987: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
00498a: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00498c: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
00498f: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
004990: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004994: cd 59 01

[	PUSH DE] Z80:12cyc, R800:6cyc
004997: d5

[	DEC HL] Z80:7cyc, R800:1cyc
004998: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004999: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
00499d: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0049a0: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0049a2: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0049a5: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
0049a6: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0049aa: cd 59 01

[	PUSH DE] Z80:12cyc, R800:6cyc
0049ad: d5

[	DEC HL] Z80:7cyc, R800:1cyc
0049ae: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0049af: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0049b3: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
0049b6: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0049b8: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
0049bb: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
0049bc: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0049c0: cd 59 01

[	LD A , D] Z80:5cyc, R800:2cyc
0049c3: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
0049c4: b7

[	JP P , SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0049c5: f2 cb 49

[	LD DE , 0] Z80:11cyc, R800:3cyc
0049c8: 11 00 00

[SKIP :]
	label address: 0x0049cb

[	PUSH DE] Z80:12cyc, R800:6cyc
0049cb: d5

[	EXX] Z80:5cyc, R800:1cyc
0049cc: d9

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
0049cd: cd 91 42

[	LD HL , 6] Z80:11cyc, R800:3cyc
0049d0: 21 06 00

[	ADD HL , SP] Z80:12cyc, R800:1cyc
0049d3: 39

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0049d4: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0049d5: 23

[	LD H , [ HL ]] Z80:8cyc, R800:4cyc
0049d6: 66

[	LD L , E] Z80:5cyc, R800:2cyc
0049d7: 6b

[	LD E , IXL] Z80:10cyc, R800:2cyc
0049d8: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
0049da: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0049dc: 19

[	DI] Z80:5cyc, R800:2cyc
0049dd: f3

[	POP IY] Z80:16cyc, R800:6cyc
0049de: fd e1

[	POP DE] Z80:11cyc, R800:5cyc
0049e0: d1

[	POP BC] Z80:11cyc, R800:5cyc
0049e1: c1

[	LD [ HL ] , B] Z80:8cyc, R800:4cyc
0049e2: 70

[	DEC HL] Z80:7cyc, R800:1cyc
0049e3: 2b

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
0049e4: 71

[	DEC HL] Z80:7cyc, R800:1cyc
0049e5: 2b

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
0049e6: 72

[	DEC HL] Z80:7cyc, R800:1cyc
0049e7: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
0049e8: 73

[	DEC HL] Z80:7cyc, R800:1cyc
0049e9: 2b

[	LD E , IYL] Z80:10cyc, R800:2cyc
0049ea: fd 5d

[	LD D , IYH] Z80:10cyc, R800:2cyc
0049ec: fd 54

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
0049ee: 72

[	DEC HL] Z80:7cyc, R800:1cyc
0049ef: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
0049f0: 73

[	EI] Z80:5cyc, R800:1cyc
0049f1: fb

[	POP DE] Z80:11cyc, R800:5cyc
0049f2: d1

[	EXX] Z80:5cyc, R800:1cyc
0049f3: d9

[	PUSH HL] Z80:12cyc, R800:6cyc
0049f4: e5

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
0049f5: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
0049f8: fb

[	POP HL] Z80:11cyc, R800:5cyc
0049f9: e1

[	DEC HL] Z80:7cyc, R800:1cyc
0049fa: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
0049fb: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
0049ff: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004a02: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a04: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004a07: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004a08: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SEPT]
	Scope path: CALL_SEPT:

[CALL_SEPT ::]
	global label address: 0x004a0b

[	DEC HL] Z80:7cyc, R800:1cyc
004a0b: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004a0c: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004a10: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004a13: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a15: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004a18: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004a19: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004a1d: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
004a20: e5

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
004a21: e6 1f

[	ADD A , A] Z80:5cyc, R800:1cyc
004a23: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004a24: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004a25: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004a26: 87

[	LD H , 0] Z80:8cyc, R800:2cyc
004a27: 26 00

[	RL H] Z80:10cyc, R800:2cyc
004a29: cb 14

[	LD L , A] Z80:5cyc, R800:2cyc
004a2b: 6f

[	LD DE , WORK_SPRITE_INFO] Z80:11cyc, R800:3cyc
004a2c: 11 09 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004a2f: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
004a30: eb

[	POP HL] Z80:11cyc, R800:5cyc
004a31: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
004a32: d5

[	DEC HL] Z80:7cyc, R800:1cyc
004a33: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004a34: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004a38: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004a3b: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a3d: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004a40: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004a41: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004a45: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004a48: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004a49: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004a4a: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004a4e: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004a51: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a53: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004a56: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004a57: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004a5b: cd 59 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004a5e: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004a5f: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004a60: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004a64: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004a67: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a69: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004a6c: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004a6d: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004a71: cd 59 01

[	DEC A] Z80:5cyc, R800:1cyc
004a74: 3d

[	AND A , 127] Z80:8cyc, R800:2cyc
004a75: e6 7f

[	INC A] Z80:5cyc, R800:1cyc
004a77: 3c

[	PUSH AF] Z80:12cyc, R800:6cyc
004a78: f5

[	DEC HL] Z80:7cyc, R800:1cyc
004a79: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004a7a: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004a7e: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004a81: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004a83: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004a86: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004a87: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004a8b: cd 59 01

[	AND A , 1] Z80:8cyc, R800:2cyc
004a8e: e6 01

[	PUSH AF] Z80:12cyc, R800:6cyc
004a90: f5

[	EXX] Z80:5cyc, R800:1cyc
004a91: d9

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
004a92: cd 91 42

[	LD HL , 8] Z80:11cyc, R800:3cyc
004a95: 21 08 00

[	ADD HL , SP] Z80:12cyc, R800:1cyc
004a98: 39

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004a99: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004a9a: 23

[	LD H , [ HL ]] Z80:8cyc, R800:4cyc
004a9b: 66

[	LD L , E] Z80:5cyc, R800:2cyc
004a9c: 6b

[	LD E , IXL] Z80:10cyc, R800:2cyc
004a9d: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
004a9f: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004aa1: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
004aa2: eb

[	LD IYL , E] Z80:10cyc, R800:2cyc
004aa3: fd 6b

[	LD IYH , D] Z80:10cyc, R800:2cyc
004aa5: fd 62

[	DI] Z80:5cyc, R800:2cyc
004aa7: f3

[	XOR A , A] Z80:5cyc, R800:1cyc
004aa8: af

[	LD [ IY + 11 ] , A] Z80:8cyc, R800:4cyc
004aa9: fd 77 0b

[	POP AF] Z80:11cyc, R800:5cyc
004aac: f1

[	LD [ IY + 7 ] , A] Z80:8cyc, R800:4cyc
004aad: fd 77 07

[	LD A , 0X80] Z80:8cyc, R800:2cyc
004ab0: 3e 80

[	LD [ IY + 8 ] , A] Z80:8cyc, R800:4cyc
004ab2: fd 77 08

[	POP AF] Z80:11cyc, R800:5cyc
004ab5: f1

[	LD [ IY + 13 ] , A] Z80:8cyc, R800:4cyc
004ab6: fd 77 0d

[	POP AF] Z80:11cyc, R800:5cyc
004ab9: f1

[	LD [ IY + 14 ] , A] Z80:8cyc, R800:4cyc
004aba: fd 77 0e

[	LD E , [ IY + 1 ]] Z80:21cyc, R800:7cyc
004abd: fd 5e 01

[	RLC E] Z80:10cyc, R800:2cyc
004ac0: cb 03

[	LD D , [ IY + 2 ]] Z80:21cyc, R800:7cyc
004ac2: fd 56 02

[	RL D] Z80:10cyc, R800:2cyc
004ac5: cb 12

[	SUB A , D] Z80:5cyc, R800:1cyc
004ac7: 92

[	LD D , A] Z80:5cyc, R800:2cyc
004ac8: 57

[	JP NC , SKIP_BIGGER_THAN_EP_Y] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004ac9: d2 d7 4a

[	NEG] Z80:10cyc, R800:2cyc
004acc: ed 44

[	LD D , A] Z80:5cyc, R800:2cyc
004ace: 57

[	LD A , [ IY + 11 ]] Z80:21cyc, R800:7cyc
004acf: fd 7e 0b

[	OR A , 0X80] Z80:8cyc, R800:2cyc
004ad2: f6 80

[	LD [ IY + 11 ] , A] Z80:8cyc, R800:4cyc
004ad4: fd 77 0b

[SKIP_BIGGER_THAN_EP_Y :]
	label address: 0x004ad7

[	POP AF] Z80:11cyc, R800:5cyc
004ad7: f1

[	LD [ IY + 15 ] , A] Z80:8cyc, R800:4cyc
004ad8: fd 77 0f

[	LD E , [ IY + 3 ]] Z80:21cyc, R800:7cyc
004adb: fd 5e 03

[	RLC E] Z80:10cyc, R800:2cyc
004ade: cb 03

[	LD B , [ IY + 4 ]] Z80:21cyc, R800:7cyc
004ae0: fd 46 04

[	RL B] Z80:10cyc, R800:2cyc
004ae3: cb 10

[	SUB A , B] Z80:5cyc, R800:1cyc
004ae5: 90

[	LD B , A] Z80:5cyc, R800:2cyc
004ae6: 47

[	JP NC , SKIP_BIGGER_THAN_EP_X] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004ae7: d2 f5 4a

[	NEG] Z80:10cyc, R800:2cyc
004aea: ed 44

[	LD B , A] Z80:5cyc, R800:2cyc
004aec: 47

[	LD A , [ IY + 11 ]] Z80:21cyc, R800:7cyc
004aed: fd 7e 0b

[	OR A , 0X40] Z80:8cyc, R800:2cyc
004af0: f6 40

[	LD [ IY + 11 ] , A] Z80:8cyc, R800:4cyc
004af2: fd 77 0b

[SKIP_BIGGER_THAN_EP_X :]
	label address: 0x004af5

[	LD A , B] Z80:5cyc, R800:2cyc
004af5: 78

[	CP A , D] Z80:5cyc, R800:1cyc
004af6: ba

[	JP NC , SKIP_LONG_BOUNDARY_IS_X] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004af7: d2 05 4b

[	LD A , D] Z80:5cyc, R800:2cyc
004afa: 7a

[	LD D , B] Z80:5cyc, R800:2cyc
004afb: 50

[	LD B , A] Z80:5cyc, R800:2cyc
004afc: 47

[	LD A , [ IY + 11 ]] Z80:21cyc, R800:7cyc
004afd: fd 7e 0b

[	OR A , 0X01] Z80:8cyc, R800:2cyc
004b00: f6 01

[	LD [ IY + 11 ] , A] Z80:8cyc, R800:4cyc
004b02: fd 77 0b

[SKIP_LONG_BOUNDARY_IS_X :]
	label address: 0x004b05

[	LD [ IY + 9 ] , B] Z80:8cyc, R800:4cyc
004b05: fd 70 09

[	LD [ IY + 10 ] , D] Z80:8cyc, R800:4cyc
004b08: fd 72 0a

[	XOR A , A] Z80:5cyc, R800:1cyc
004b0b: af

[	LD [ IY + 12 ] , A] Z80:8cyc, R800:4cyc
004b0c: fd 77 0c

[	EI] Z80:5cyc, R800:1cyc
004b0f: fb

[	POP DE] Z80:11cyc, R800:5cyc
004b10: d1

[	EXX] Z80:5cyc, R800:1cyc
004b11: d9

[	PUSH HL] Z80:12cyc, R800:6cyc
004b12: e5

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
004b13: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
004b16: fb

[	POP HL] Z80:11cyc, R800:5cyc
004b17: e1

[	DEC HL] Z80:7cyc, R800:1cyc
004b18: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004b19: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004b1d: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004b20: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004b22: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004b25: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004b26: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_SSEE]
	Scope path: CALL_SSEE:

[CALL_SSEE ::]
	global label address: 0x004b29

[	DEC HL] Z80:7cyc, R800:1cyc
004b29: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004b2a: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004b2e: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004b31: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004b33: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004b36: 23

[	LD IX , CALBAS_GETBYT] Z80:16cyc, R800:4cyc
004b37: dd 21 1c 52

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004b3b: cd 59 01

[	PUSH HL] Z80:12cyc, R800:6cyc
004b3e: e5

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
004b3f: e6 1f

[	ADD A , A] Z80:5cyc, R800:1cyc
004b41: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004b42: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004b43: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004b44: 87

[	LD H , 0] Z80:8cyc, R800:2cyc
004b45: 26 00

[	RL H] Z80:10cyc, R800:2cyc
004b47: cb 14

[	LD L , A] Z80:5cyc, R800:2cyc
004b49: 6f

[	LD DE , WORK_SPRITE_INFO] Z80:11cyc, R800:3cyc
004b4a: 11 09 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004b4d: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
004b4e: eb

[	POP HL] Z80:11cyc, R800:5cyc
004b4f: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
004b50: d5

[	DEC HL] Z80:7cyc, R800:1cyc
004b51: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004b52: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004b56: cd 59 01

[	CP A , 44] Z80:8cyc, R800:2cyc
004b59: fe 2c

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004b5b: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004b5e: 23

[	XOR A , A] Z80:5cyc, R800:1cyc
004b5f: af

[	LD [ SUBFLG ] , A] Z80:14cyc, R800:6cyc
004b60: 32 a5 f6

[	LD IX , CALBAS_PTRGET] Z80:16cyc, R800:4cyc
004b63: dd 21 a4 5e

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004b67: cd 59 01

[	DEC DE] Z80:7cyc, R800:1cyc
004b6a: 1b

[	DEC DE] Z80:7cyc, R800:1cyc
004b6b: 1b

[	DEC DE] Z80:7cyc, R800:1cyc
004b6c: 1b

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
004b6d: 1a

[	CP A , 2] Z80:8cyc, R800:2cyc
004b6e: fe 02

[	JP NZ , TYPE_MISMATCH_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004b70: c2 89 41

[	INC DE] Z80:7cyc, R800:1cyc
004b73: 13

[	INC DE] Z80:7cyc, R800:1cyc
004b74: 13

[	INC DE] Z80:7cyc, R800:1cyc
004b75: 13

[	PUSH DE] Z80:12cyc, R800:6cyc
004b76: d5

[	PUSH HL] Z80:12cyc, R800:6cyc
004b77: e5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
004b78: cd 91 42

[	POP DE] Z80:11cyc, R800:5cyc
004b7b: d1

[	POP BC] Z80:11cyc, R800:5cyc
004b7c: c1

[	POP HL] Z80:11cyc, R800:5cyc
004b7d: e1

[	PUSH DE] Z80:12cyc, R800:6cyc
004b7e: d5

[	LD E , IXL] Z80:10cyc, R800:2cyc
004b7f: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
004b81: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004b83: 19

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004b84: 7e

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
004b85: 02

[	INC BC] Z80:7cyc, R800:1cyc
004b86: 03

[	XOR A , A] Z80:5cyc, R800:1cyc
004b87: af

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
004b88: 02

[	CALL RESTORE_P2_SLOT] Z80:18cyc, R800:5cyc
004b89: cd b8 42

[	EI] Z80:5cyc, R800:1cyc
004b8c: fb

[	POP HL] Z80:11cyc, R800:5cyc
004b8d: e1

[	DEC HL] Z80:7cyc, R800:1cyc
004b8e: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004b8f: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004b93: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004b96: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004b98: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004b9b: 23

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004b9c: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE SPRITE_DRIVER]
	Scope path: SPRITE_DRIVER:

[SPRITE_DRIVER ::]
	global label address: 0x004b9f

[	LD A , [ IX + WORK_SPRITE_DRIVE_ON ]] Z80:21cyc, R800:7cyc
004b9f: dd 7e 07

[	OR A , A] Z80:5cyc, R800:1cyc
004ba2: b7

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
004ba3: c8

[	LD A , [ IX + WORK_SPRITE_STOP_AUTO_MOVE ]] Z80:21cyc, R800:7cyc
004ba4: dd 7e 08

[	OR A , A] Z80:5cyc, R800:1cyc
004ba7: b7

[	JP NZ , SKIP_AUTO_MOVE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004ba8: c2 14 4c

[	LD B , 32] Z80:8cyc, R800:2cyc
004bab: 06 20

[	PUSH IX] Z80:17cyc, R800:7cyc
004bad: dd e5

[	POP HL] Z80:11cyc, R800:5cyc
004baf: e1

[	LD DE , WORK_SPRITE_INFO] Z80:11cyc, R800:3cyc
004bb0: 11 09 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004bb3: 19

[SPRITE_AUTO_MOVE :]
	label address: 0x004bb4

[	PUSH BC] Z80:12cyc, R800:6cyc
004bb4: c5

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004bb5: 7e

[	DEC A] Z80:5cyc, R800:1cyc
004bb6: 3d

[	JP NZ , SPRITE_AUTO_MOVE_NEXT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004bb7: c2 0d 4c

[	LD DE , 7] Z80:11cyc, R800:3cyc
004bba: 11 07 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004bbd: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004bbe: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004bbf: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004bc0: 56

[	LD A , D] Z80:5cyc, R800:2cyc
004bc1: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
004bc2: b7

[	JP M , SPRITE_BRESENHAM_MOVE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004bc3: fa 5a 4c

[	OR A , E] Z80:5cyc, R800:1cyc
004bc6: b3

[	LD BC , - 8] Z80:11cyc, R800:3cyc
004bc7: 01 f8 ff

[	JP Z , SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004bca: ca 0c 4c

[	DEC DE] Z80:7cyc, R800:1cyc
004bcd: 1b

[	DEC HL] Z80:7cyc, R800:1cyc
004bce: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004bcf: 73

[	INC HL] Z80:7cyc, R800:1cyc
004bd0: 23

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004bd1: 72

[	INC HL] Z80:7cyc, R800:1cyc
004bd2: 23

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004bd3: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004bd4: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004bd5: 56

[	LD C , - 10 + 1] Z80:8cyc, R800:2cyc
004bd6: 0e f7

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004bd8: 09

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
004bd9: 4e

[	INC HL] Z80:7cyc, R800:1cyc
004bda: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
004bdb: 46

[	EX DE , HL] Z80:5cyc, R800:1cyc
004bdc: eb

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004bdd: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004bde: eb

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004bdf: 72

[	DEC HL] Z80:7cyc, R800:1cyc
004be0: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004be1: 73

[	LD A , D] Z80:5cyc, R800:2cyc
004be2: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
004be3: b7

[	LD BC , - 1] Z80:11cyc, R800:3cyc
004be4: 01 ff ff

[	JP M , OUTSIDE_SPRITE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004be7: fa 06 4c

[	LD BC , - 1 + 11] Z80:11cyc, R800:3cyc
004bea: 01 0a 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004bed: 09

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004bee: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004bef: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004bf0: 56

[	LD BC , - 12 + 3] Z80:11cyc, R800:3cyc
004bf1: 01 f7 ff

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004bf4: 09

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
004bf5: 4e

[	INC HL] Z80:7cyc, R800:1cyc
004bf6: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
004bf7: 46

[	EX DE , HL] Z80:5cyc, R800:1cyc
004bf8: eb

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004bf9: 09

[	EX DE , HL] Z80:5cyc, R800:1cyc
004bfa: eb

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004bfb: 72

[	DEC HL] Z80:7cyc, R800:1cyc
004bfc: 2b

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004bfd: 73

[	LD A , D] Z80:5cyc, R800:2cyc
004bfe: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
004bff: b7

[	LD BC , - 3] Z80:11cyc, R800:3cyc
004c00: 01 fd ff

[	JP P , SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004c03: f2 0c 4c

[OUTSIDE_SPRITE :]
	label address: 0x004c06

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004c06: 09

[	XOR A , A] Z80:5cyc, R800:1cyc
004c07: af

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004c08: 77

[	JP SPRITE_AUTO_MOVE_NEXT] Z80:11cyc, R800:5cyc
004c09: c3 0d 4c

[SPRITE_AUTO_MOVE_NEXT_PRE :]
	label address: 0x004c0c

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004c0c: 09

[SPRITE_AUTO_MOVE_NEXT :]
	label address: 0x004c0d

[	LD DE , 16] Z80:11cyc, R800:3cyc
004c0d: 11 10 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004c10: 19

[	POP BC] Z80:11cyc, R800:5cyc
004c11: c1

[	DJNZ SPRITE_AUTO_MOVE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004c12: 10 a0

[SKIP_AUTO_MOVE :]
	label address: 0x004c14

[	LD HL , 0X1B00 | 0X4000] Z80:11cyc, R800:3cyc
004c14: 21 00 5b

[	LD A , L] Z80:5cyc, R800:2cyc
004c17: 7d

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
004c18: d3 99

[	LD A , H] Z80:5cyc, R800:2cyc
004c1a: 7c

[	OUT [ 0X99 ] , A] Z80:12cyc, R800:10 or 9cyc
004c1b: d3 99

[	LD E , IXL] Z80:10cyc, R800:2cyc
004c1d: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
004c1f: dd 54

[	LD HL , WORK_SPRITE_INFO] Z80:11cyc, R800:3cyc
004c21: 21 09 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004c24: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
004c25: eb

[	LD A , [ IX + WORK_1ST_SPRITE ]] Z80:21cyc, R800:7cyc
004c26: dd 7e 06

[	ADD A , 19] Z80:8cyc, R800:2cyc
004c29: c6 13

[	AND A , 31] Z80:8cyc, R800:2cyc
004c2b: e6 1f

[	LD [ IX + WORK_1ST_SPRITE ] , A] Z80:8cyc, R800:4cyc
004c2d: dd 77 06

[	ADD A , A] Z80:5cyc, R800:1cyc
004c30: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004c31: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004c32: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004c33: 87

[	LD L , A] Z80:5cyc, R800:2cyc
004c34: 6f

[	LD H , 0] Z80:8cyc, R800:2cyc
004c35: 26 00

[	RL H] Z80:10cyc, R800:2cyc
004c37: cb 14

[	LD B , 32] Z80:8cyc, R800:2cyc
004c39: 06 20

[LOOP1 :]
	label address: 0x004c3b

[	PUSH HL] Z80:12cyc, R800:6cyc
004c3b: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
004c3c: c5

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004c3d: 19

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004c3e: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004c3f: 23

[	OR A , A] Z80:5cyc, R800:1cyc
004c40: b7

[	JP Z , HIDE_SPRITE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004c41: ca 0c 4d

[	DEC A] Z80:5cyc, R800:1cyc
004c44: 3d

[	JP NZ , JOIN_SPRITE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004c45: c2 34 4d

[	JP NORMAL_SPRITE] Z80:11cyc, R800:5cyc
004c48: c3 19 4d

[NEXT_SPRITE ::]
	global label address: 0x004c4b

[	POP BC] Z80:11cyc, R800:5cyc
004c4b: c1

[	POP HL] Z80:11cyc, R800:5cyc
004c4c: e1

[	LD A , L] Z80:5cyc, R800:2cyc
004c4d: 7d

[	ADD A , 11 * 16] Z80:8cyc, R800:2cyc
004c4e: c6 b0

[	LD L , A] Z80:5cyc, R800:2cyc
004c50: 6f

[	LD A , H] Z80:5cyc, R800:2cyc
004c51: 7c

[	ADC A , 0] Z80:8cyc, R800:2cyc
004c52: ce 00

[	AND A , 1] Z80:8cyc, R800:2cyc
004c54: e6 01

[	LD H , A] Z80:5cyc, R800:2cyc
004c56: 67

[	DJNZ LOOP1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004c57: 10 e2

[	RET] Z80:11cyc, R800:5cyc
004c59: c9

[SPRITE_BRESENHAM_MOVE :]
	label address: 0x004c5a

[	INC HL] Z80:7cyc, R800:1cyc
004c5a: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
004c5b: 46

[	INC HL] Z80:7cyc, R800:1cyc
004c5c: 23

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
004c5d: 4e

[	INC HL] Z80:7cyc, R800:1cyc
004c5e: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004c5f: 56

[	INC HL] Z80:7cyc, R800:1cyc
004c60: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004c61: 7e

[	ADD A , C] Z80:5cyc, R800:1cyc
004c62: 81

[	CP A , B] Z80:5cyc, R800:1cyc
004c63: b8

[	LD C , 1] Z80:8cyc, R800:2cyc
004c64: 0e 01

[	JR C , SKIP_ADD] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004c66: 38 02

[	INC C] Z80:5cyc, R800:1cyc
004c68: 0c

[	SUB A , B] Z80:5cyc, R800:1cyc
004c69: 90

[SKIP_ADD :]
	label address: 0x004c6a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004c6a: 77

[	LD A , D] Z80:5cyc, R800:2cyc
004c6b: 7a

[	INC HL] Z80:7cyc, R800:1cyc
004c6c: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
004c6d: 46

[	DEC C] Z80:5cyc, R800:1cyc
004c6e: 0d

[	JP Z , SKIP_VECTOR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004c6f: ca 73 4c

[	LD C , B] Z80:5cyc, R800:2cyc
004c72: 48

[SKIP_VECTOR :]
	label address: 0x004c73

[	INC HL] Z80:7cyc, R800:1cyc
004c73: 23

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004c74: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004c75: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004c76: 56

[	PUSH DE] Z80:12cyc, R800:6cyc
004c77: d5

[	BIT 0 , A] Z80:10cyc, R800:2cyc
004c78: cb 47

[	JP Z , LONG_SIDE_IS_X] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004c7a: ca 80 4c

[LONG_SIDE_IS_Y :]
	label address: 0x004c7d

[	LD D , B] Z80:5cyc, R800:2cyc
004c7d: 50

[	LD B , C] Z80:5cyc, R800:2cyc
004c7e: 41

[	LD C , D] Z80:5cyc, R800:2cyc
004c7f: 4a

[LONG_SIDE_IS_X :]
	label address: 0x004c80

[	LD DE , - 12] Z80:11cyc, R800:3cyc
004c80: 11 f4 ff

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004c83: 19

[	LD D , A] Z80:5cyc, R800:2cyc
004c84: 57

[	BIT 6 , A] Z80:10cyc, R800:2cyc
004c85: cb 77

[	JP NZ , X_ENDPOINT_IS_LEFT1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004c87: c2 95 4c

[X_ENDPOINT_IS_RIGHT1 :]
	label address: 0x004c8a

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004c8a: 7e

[	ADD A , B] Z80:5cyc, R800:1cyc
004c8b: 80

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004c8c: 77

[	INC HL] Z80:7cyc, R800:1cyc
004c8d: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004c8e: 7e

[	ADC A , 0] Z80:8cyc, R800:2cyc
004c8f: ce 00

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004c91: 77

[	JP Y_MOVE1] Z80:11cyc, R800:5cyc
004c92: c3 9d 4c

[X_ENDPOINT_IS_LEFT1 :]
	label address: 0x004c95

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004c95: 7e

[	SUB A , B] Z80:5cyc, R800:1cyc
004c96: 90

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004c97: 77

[	INC HL] Z80:7cyc, R800:1cyc
004c98: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004c99: 7e

[	SBC A , 0] Z80:8cyc, R800:2cyc
004c9a: de 00

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004c9c: 77

[Y_MOVE1 :]
	label address: 0x004c9d

[	DEC HL] Z80:7cyc, R800:1cyc
004c9d: 2b

[	DEC HL] Z80:7cyc, R800:1cyc
004c9e: 2b

[	DEC HL] Z80:7cyc, R800:1cyc
004c9f: 2b

[	BIT 7 , D] Z80:10cyc, R800:2cyc
004ca0: cb 7a

[	JP NZ , Y_ENDPOINT_IS_UP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004ca2: c2 b0 4c

[Y_ENDPOINT_IS_DOWN1 :]
	label address: 0x004ca5

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004ca5: 7e

[	ADD A , C] Z80:5cyc, R800:1cyc
004ca6: 81

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004ca7: 77

[	INC HL] Z80:7cyc, R800:1cyc
004ca8: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004ca9: 7e

[	ADC A , 0] Z80:8cyc, R800:2cyc
004caa: ce 00

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004cac: 77

[	JP SPRITE_BRESENHAM_MOVE_END_CHECK] Z80:11cyc, R800:5cyc
004cad: c3 b8 4c

[Y_ENDPOINT_IS_UP1 :]
	label address: 0x004cb0

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004cb0: 7e

[	SUB A , C] Z80:5cyc, R800:1cyc
004cb1: 91

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004cb2: 77

[	INC HL] Z80:7cyc, R800:1cyc
004cb3: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004cb4: 7e

[	SBC A , 0] Z80:8cyc, R800:2cyc
004cb5: de 00

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004cb7: 77

[SPRITE_BRESENHAM_MOVE_END_CHECK :]
	label address: 0x004cb8

[	LD BC , - 2] Z80:11cyc, R800:3cyc
004cb8: 01 fe ff

[	CP A , 212 / 2] Z80:8cyc, R800:2cyc
004cbb: fe 6a

[	JP NC , SPRITE_WENT_OFFSCREEN] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004cbd: d2 06 4d

[	INC HL] Z80:7cyc, R800:1cyc
004cc0: 23

[	INC HL] Z80:7cyc, R800:1cyc
004cc1: 23

[	LD C , - 4] Z80:8cyc, R800:2cyc
004cc2: 0e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004cc4: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
004cc5: b7

[	JP M , SPRITE_WENT_OFFSCREEN] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004cc6: fa 06 4d

[	INC HL] Z80:7cyc, R800:1cyc
004cc9: 23

[	INC HL] Z80:7cyc, R800:1cyc
004cca: 23

[	INC HL] Z80:7cyc, R800:1cyc
004ccb: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004ccc: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
004ccd: b7

[	JP NZ , SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004cce: c2 0c 4c

[	LD BC , - 6] Z80:11cyc, R800:3cyc
004cd1: 01 fa ff

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004cd4: 09

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004cd5: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004cd6: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004cd7: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004cd8: 7e

[	ADC A , A] Z80:5cyc, R800:1cyc
004cd9: 8f

[	LD BC , 12] Z80:11cyc, R800:3cyc
004cda: 01 0c 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004cdd: 09

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
004cde: be

[	LD BC , - 14] Z80:11cyc, R800:3cyc
004cdf: 01 f2 ff

[	JP NZ , SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004ce2: c2 0c 4c

[	INC HL] Z80:7cyc, R800:1cyc
004ce5: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004ce6: 7e

[	LD BC , - 12] Z80:11cyc, R800:3cyc
004ce7: 01 f4 ff

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004cea: 09

[	LD B , A] Z80:5cyc, R800:2cyc
004ceb: 47

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004cec: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004ced: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004cee: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004cef: 7e

[	ADC A , A] Z80:5cyc, R800:1cyc
004cf0: 8f

[	CP A , B] Z80:5cyc, R800:1cyc
004cf1: b8

[	LD BC , - 4] Z80:11cyc, R800:3cyc
004cf2: 01 fc ff

[	JP NZ , SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004cf5: c2 0c 4c

[	INC HL] Z80:7cyc, R800:1cyc
004cf8: 23

[	INC HL] Z80:7cyc, R800:1cyc
004cf9: 23

[	INC HL] Z80:7cyc, R800:1cyc
004cfa: 23

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
004cfb: 36 00

[	INC HL] Z80:7cyc, R800:1cyc
004cfd: 23

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
004cfe: 36 00

[	LD BC , - 8] Z80:11cyc, R800:3cyc
004d00: 01 f8 ff

[	JP SPRITE_AUTO_MOVE_NEXT_PRE] Z80:11cyc, R800:5cyc
004d03: c3 0c 4c

[SPRITE_WENT_OFFSCREEN :]
	label address: 0x004d06

[	ADD HL , BC] Z80:12cyc, R800:1cyc
004d06: 09

[	XOR A , A] Z80:5cyc, R800:1cyc
004d07: af

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
004d08: 77

[	JP SPRITE_AUTO_MOVE_NEXT] Z80:11cyc, R800:5cyc
004d09: c3 0d 4c

[	ENDSCOPE]
	Scope path: 

[	SCOPE HIDE_SPRITE]
	Scope path: HIDE_SPRITE:

[HIDE_SPRITE ::]
	global label address: 0x004d0c

[	LD C , 4] Z80:8cyc, R800:2cyc
004d0c: 0e 04

[	LD A , 212] Z80:8cyc, R800:2cyc
004d0e: 3e d4

[LOOP :]
	label address: 0x004d10

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004d10: d3 98

[	NOP] Z80:5cyc, R800:1cyc
004d12: 00

[	DEC C] Z80:5cyc, R800:1cyc
004d13: 0d

[	JR NZ , LOOP] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
004d14: 20 fa

[	JP NEXT_SPRITE] Z80:11cyc, R800:5cyc
004d16: c3 4b 4c

[	ENDSCOPE]
	Scope path: 

[	SCOPE NORMAL_SPRITE]
	Scope path: NORMAL_SPRITE:

[NORMAL_SPRITE ::]
	global label address: 0x004d19

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d19: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004d1a: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004d1b: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d1c: 7e

[	RLA] Z80:5cyc, R800:1cyc
004d1d: 17

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004d1e: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004d20: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d21: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004d22: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004d23: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d24: 7e

[	RLA] Z80:5cyc, R800:1cyc
004d25: 17

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004d26: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004d28: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d29: 7e

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004d2a: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004d2c: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d2d: 7e

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004d2e: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004d30: 23

[	JP NEXT_SPRITE] Z80:11cyc, R800:5cyc
004d31: c3 4b 4c

[	ENDSCOPE]
	Scope path: 

[	SCOPE JOIN_SPRITE]
	Scope path: JOIN_SPRITE:

[JOIN_SPRITE ::]
	global label address: 0x004d34

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d34: 7e

[	PUSH HL] Z80:12cyc, R800:6cyc
004d35: e5

[	ADD A , A] Z80:5cyc, R800:1cyc
004d36: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004d37: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004d38: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
004d39: 87

[	LD L , A] Z80:5cyc, R800:2cyc
004d3a: 6f

[	LD H , 0] Z80:8cyc, R800:2cyc
004d3b: 26 00

[	RL H] Z80:10cyc, R800:2cyc
004d3d: cb 14

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004d3f: 19

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d40: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
004d41: b7

[	JP Z , SKIP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004d42: ca 64 4d

[	INC HL] Z80:7cyc, R800:1cyc
004d45: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d46: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004d47: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004d48: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d49: 7e

[	RLA] Z80:5cyc, R800:1cyc
004d4a: 17

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004d4b: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004d4d: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d4e: 7e

[	INC HL] Z80:7cyc, R800:1cyc
004d4f: 23

[	ADD A , A] Z80:5cyc, R800:1cyc
004d50: 87

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d51: 7e

[	RLA] Z80:5cyc, R800:1cyc
004d52: 17

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004d53: d3 98

[	POP HL] Z80:11cyc, R800:5cyc
004d55: e1

[	INC HL] Z80:7cyc, R800:1cyc
004d56: 23

[	INC HL] Z80:7cyc, R800:1cyc
004d57: 23

[	INC HL] Z80:7cyc, R800:1cyc
004d58: 23

[	INC HL] Z80:7cyc, R800:1cyc
004d59: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d5a: 7e

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004d5b: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
004d5d: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
004d5e: 7e

[	OUT [ 0X98 ] , A] Z80:12cyc, R800:10 or 9cyc
004d5f: d3 98

[	JP NEXT_SPRITE] Z80:11cyc, R800:5cyc
004d61: c3 4b 4c

[SKIP1 :]
	label address: 0x004d64

[	POP HL] Z80:11cyc, R800:5cyc
004d64: e1

[	JP HIDE_SPRITE] Z80:11cyc, R800:5cyc
004d65: c3 0c 4d

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//SPRITE.ASM"] end

[	INCLUDE ".//VSYNC.ASM"] begin
[	SCOPE VSYNC_COUNTER]
	Scope path: VSYNC_COUNTER:

[VSYNC_COUNTER ::]
	global label address: 0x004d68

[	LD E , [ IX + WORK_VSYNC_COUNT + 0 ]] Z80:21cyc, R800:7cyc
004d68: dd 5e 04

[	LD D , [ IX + WORK_VSYNC_COUNT + 1 ]] Z80:21cyc, R800:7cyc
004d6b: dd 56 05

[	LD A , E] Z80:5cyc, R800:2cyc
004d6e: 7b

[	OR A , D] Z80:5cyc, R800:1cyc
004d6f: b2

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
004d70: c8

[	DEC DE] Z80:7cyc, R800:1cyc
004d71: 1b

[	LD [ IX + WORK_VSYNC_COUNT + 0 ] , E] Z80:8cyc, R800:4cyc
004d72: dd 73 04

[	LD [ IX + WORK_VSYNC_COUNT + 1 ] , D] Z80:8cyc, R800:4cyc
004d75: dd 72 05

[	RET] Z80:11cyc, R800:5cyc
004d78: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_COUNT]
	Scope path: GET_COUNT:

[GET_COUNT ::]
	global label address: 0x004d79

[	DEC HL] Z80:7cyc, R800:1cyc
004d79: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004d7a: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004d7e: cd 59 01

[	CP A , 40] Z80:8cyc, R800:2cyc
004d81: fe 28

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004d83: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004d86: 23

[	LD IX , CALBAS_FRMQNT] Z80:16cyc, R800:4cyc
004d87: dd 21 2f 54

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004d8b: cd 59 01

[	PUSH DE] Z80:12cyc, R800:6cyc
004d8e: d5

[	DEC HL] Z80:7cyc, R800:1cyc
004d8f: 2b

[	LD IX , CALBAS_CHRGTR] Z80:16cyc, R800:4cyc
004d90: dd 21 66 46

[	CALL CALBAS] Z80:18cyc, R800:5cyc
004d94: cd 59 01

[	CP A , 41] Z80:8cyc, R800:2cyc
004d97: fe 29

[	JP NZ , SYNTAX_ERROR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004d99: c2 77 41

[	INC HL] Z80:7cyc, R800:1cyc
004d9c: 23

[	POP DE] Z80:11cyc, R800:5cyc
004d9d: d1

[	RET] Z80:11cyc, R800:5cyc
004d9e: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_VCST]
	Scope path: CALL_VCST:

[CALL_VCST ::]
	global label address: 0x004d9f

[	CALL GET_COUNT] Z80:18cyc, R800:5cyc
004d9f: cd 79 4d

[	PUSH HL] Z80:12cyc, R800:6cyc
004da2: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
004da3: d5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
004da4: cd 91 42

[	LD HL , WORK_VSYNC_COUNT] Z80:11cyc, R800:3cyc
004da7: 21 04 00

[	LD E , IXL] Z80:10cyc, R800:2cyc
004daa: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
004dac: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004dae: 19

[	POP DE] Z80:11cyc, R800:5cyc
004daf: d1

[	DI] Z80:5cyc, R800:2cyc
004db0: f3

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
004db1: 73

[	INC HL] Z80:7cyc, R800:1cyc
004db2: 23

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
004db3: 72

[	EI] Z80:5cyc, R800:1cyc
004db4: fb

[	POP HL] Z80:11cyc, R800:5cyc
004db5: e1

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004db6: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALL_VCWT]
	Scope path: CALL_VCWT:

[CALL_VCWT ::]
	global label address: 0x004db9

[	CALL GET_COUNT] Z80:18cyc, R800:5cyc
004db9: cd 79 4d

[	PUSH HL] Z80:12cyc, R800:6cyc
004dbc: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
004dbd: d5

[	CALL ACTIVATE_WORKAREA] Z80:18cyc, R800:5cyc
004dbe: cd 91 42

[	LD HL , WORK_VSYNC_COUNT] Z80:11cyc, R800:3cyc
004dc1: 21 04 00

[	LD E , IXL] Z80:10cyc, R800:2cyc
004dc4: dd 5d

[	LD D , IXH] Z80:10cyc, R800:2cyc
004dc6: dd 54

[	ADD HL , DE] Z80:12cyc, R800:1cyc
004dc8: 19

[	POP BC] Z80:11cyc, R800:5cyc
004dc9: c1

[WAIT_LOOP :]
	label address: 0x004dca

[	DI] Z80:5cyc, R800:2cyc
004dca: f3

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
004dcb: 5e

[	INC HL] Z80:7cyc, R800:1cyc
004dcc: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
004dcd: 56

[	EI] Z80:5cyc, R800:1cyc
004dce: fb

[	DEC HL] Z80:7cyc, R800:1cyc
004dcf: 2b

[	EX DE , HL] Z80:5cyc, R800:1cyc
004dd0: eb

[	OR A , A] Z80:5cyc, R800:1cyc
004dd1: b7

[	SBC HL , BC] Z80:17cyc, R800:2cyc
004dd2: ed 42

[	EX DE , HL] Z80:5cyc, R800:1cyc
004dd4: eb

[	JP Z , SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004dd5: ca db 4d

[	JP NC , WAIT_LOOP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
004dd8: d2 ca 4d

[SKIP :]
	label address: 0x004ddb

[	POP HL] Z80:11cyc, R800:5cyc
004ddb: e1

[	JP EXIT_CALL_STATEMENT] Z80:11cyc, R800:5cyc
004ddc: c3 f7 40

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//VSYNC.ASM"] end

Define macro {COMMAND_JUMP_TABLE_ITEM MACRO S_COMMAND , ADDRESS}

Define macro {COMMAND_JUMP_TABLE_ITEMB MACRO S_COMMAND0 , S_COMMAND1 , S_COMMAND2 , S_COMMAND3 , ADDRESS}

[ALIGN 8]
	Padding: 1byte(s)

[COMMAND_JUMP_TABLE ::]
	global label address: 0x004de0

((COMMAND_JUMP_TABLE_ITEM "SPUT" , CALL_SPUT))
	Scope path: @MACRO0:
[	DS "SPUT"]
004de0: 53 50 55 54

[	DW CALL_SPUT]
004de4: cb 47

[	DW 0]
004de6: 00 00

((COMMAND_JUMP_TABLE_ITEM "SLNK" , CALL_SLNK))
	Scope path: @MACRO1:
[	DS "SLNK"]
004de8: 53 4c 4e 4b

[	DW CALL_SLNK]
004dec: a2 48

[	DW 0]
004dee: 00 00

((COMMAND_JUMP_TABLE_ITEM "SMOV" , CALL_SMOV))
	Scope path: @MACRO2:
[	DS "SMOV"]
004df0: 53 4d 4f 56

[	DW CALL_SMOV]
004df4: 5a 49

[	DW 0]
004df6: 00 00

((COMMAND_JUMP_TABLE_ITEM "SEPT" , CALL_SEPT))
	Scope path: @MACRO3:
[	DS "SEPT"]
004df8: 53 45 50 54

[	DW CALL_SEPT]
004dfc: 0b 4a

[	DW 0]
004dfe: 00 00

((COMMAND_JUMP_TABLE_ITEM "SSEE" , CALL_SSEE))
	Scope path: @MACRO4:
[	DS "SSEE"]
004e00: 53 53 45 45

[	DW CALL_SSEE]
004e04: 29 4b

[	DW 0]
004e06: 00 00

((COMMAND_JUMP_TABLE_ITEM "BCPY" , CALL_BCPY))
	Scope path: @MACRO5:
[	DS "BCPY"]
004e08: 42 43 50 59

[	DW CALL_BCPY]
004e0c: 35 44

[	DW 0]
004e0e: 00 00

((COMMAND_JUMP_TABLE_ITEM "BFIL" , CALL_BFIL))
	Scope path: @MACRO6:
[	DS "BFIL"]
004e10: 42 46 49 4c

[	DW CALL_BFIL]
004e14: 5d 43

[	DW 0]
004e16: 00 00

((COMMAND_JUMP_TABLE_ITEM "VFIL" , CALL_VFIL))
	Scope path: @MACRO7:
[	DS "VFIL"]
004e18: 56 46 49 4c

[	DW CALL_VFIL]
004e1c: c2 42

[	DW 0]
004e1e: 00 00

((COMMAND_JUMP_TABLE_ITEM "PCG0" , CALL_PCG0))
	Scope path: @MACRO8:
[	DS "PCG0"]
004e20: 50 43 47 30

[	DW CALL_PCG0]
004e24: 68 46

[	DW 0]
004e26: 00 00

((COMMAND_JUMP_TABLE_ITEM "PCG1" , CALL_PCG1))
	Scope path: @MACRO9:
[	DS "PCG1"]
004e28: 50 43 47 31

[	DW CALL_PCG1]
004e2c: 89 46

[	DW 0]
004e2e: 00 00

((COMMAND_JUMP_TABLE_ITEM "PCG2" , CALL_PCG2))
	Scope path: @MACRO10:
[	DS "PCG2"]
004e30: 50 43 47 32

[	DW CALL_PCG2]
004e34: 9a 46

[	DW 0]
004e36: 00 00

((COMMAND_JUMP_TABLE_ITEM "PCG3" , CALL_PCG3))
	Scope path: @MACRO11:
[	DS "PCG3"]
004e38: 50 43 47 33

[	DW CALL_PCG3]
004e3c: ab 46

[	DW 0]
004e3e: 00 00

((COMMAND_JUMP_TABLE_ITEM "COL0" , CALL_COL0))
	Scope path: @MACRO12:
[	DS "COL0"]
004e40: 43 4f 4c 30

[	DW CALL_COL0]
004e44: d6 46

[	DW 0]
004e46: 00 00

((COMMAND_JUMP_TABLE_ITEM "COL1" , CALL_COL1))
	Scope path: @MACRO13:
[	DS "COL1"]
004e48: 43 4f 4c 31

[	DW CALL_COL1]
004e4c: e7 46

[	DW 0]
004e4e: 00 00

((COMMAND_JUMP_TABLE_ITEM "COL2" , CALL_COL2))
	Scope path: @MACRO14:
[	DS "COL2"]
004e50: 43 4f 4c 32

[	DW CALL_COL2]
004e54: f8 46

[	DW 0]
004e56: 00 00

((COMMAND_JUMP_TABLE_ITEM "COL3" , CALL_COL3))
	Scope path: @MACRO15:
[	DS "COL3"]
004e58: 43 4f 4c 33

[	DW CALL_COL3]
004e5c: 09 47

[	DW 0]
004e5e: 00 00

((COMMAND_JUMP_TABLE_ITEM "BCLS" , CALL_BCLS))
	Scope path: @MACRO16:
[	DS "BCLS"]
004e60: 42 43 4c 53

[	DW CALL_BCLS]
004e64: bf 45

[	DW 0]
004e66: 00 00

((COMMAND_JUMP_TABLE_ITEM "VCST" , CALL_VCST))
	Scope path: @MACRO17:
[	DS "VCST"]
004e68: 56 43 53 54

[	DW CALL_VCST]
004e6c: 9f 4d

[	DW 0]
004e6e: 00 00

((COMMAND_JUMP_TABLE_ITEM "VCWT" , CALL_VCWT))
	Scope path: @MACRO18:
[	DS "VCWT"]
004e70: 56 43 57 54

[	DW CALL_VCWT]
004e74: b9 4d

[	DW 0]
004e76: 00 00

((COMMAND_JUMP_TABLE_ITEM "BFNT" , CALL_BFNT))
	Scope path: @MACRO19:
[	DS "BFNT"]
004e78: 42 46 4e 54

[	DW CALL_BFNT]
004e7c: 38 47

[	DW 0]
004e7e: 00 00

((COMMAND_JUMP_TABLE_ITEM "SSTP" , CALL_SSTP))
	Scope path: @MACRO20:
[	DS "SSTP"]
004e80: 53 53 54 50

[	DW CALL_SSTP]
004e84: 97 47

[	DW 0]
004e86: 00 00

((COMMAND_JUMP_TABLE_ITEM "SDRV" , CALL_SDRV))
	Scope path: @MACRO21:
[	DS "SDRV"]
004e88: 53 44 52 56

[	DW CALL_SDRV]
004e8c: 63 47

[	DW 0]
004e8e: 00 00

((COMMAND_JUMP_TABLE_ITEM "SC15" , CALL_SC15))
	Scope path: @MACRO22:
[	DS "SC15"]
004e90: 53 43 31 35

[	DW CALL_SC15]
004e94: 08 41

[	DW 0]
004e96: 00 00

[	DB 0]
004e98: 00

[ALIGN 16384]
	Padding: 12647byte(s)

<< label >>
ACTIVATE_WORKAREA 17041 ( 0x4291 )
BACKUP_H_TIMI 16557 ( 0x40ad )
BAKCLR 62442 ( 0xf3ea )
BDRCLR 62443 ( 0xf3eb )
BEEP 192 ( 0xc0 )
BIGFIL 363 ( 0x16b )
BOTTOM 64584 ( 0xfc48 )
BREAKV 62245 ( 0xf325 )
BREAKX 183 ( 0xb7 )
BSUP_FILVRM 17180 ( 0x431c )
BSUP_FILVRM:LOOP 17191 ( 0x4327 )
BSUP_LDIRVM 17203 ( 0x4333 )
BSUP_LDIRVM:LOOP 17214 ( 0x433e )
BSUP_SETRD 17237 ( 0x4355 )
BSUP_SETWRT 17227 ( 0x434b )
CALATR 135 ( 0x87 )
CALBAS 345 ( 0x159 )
CALBAS_CHRGTR 18022 ( 0x4666 )
CALBAS_CRUNCH 17074 ( 0x42b2 )
CALBAS_ERRHAND 16495 ( 0x406f )
CALBAS_FRESTR 26576 ( 0x67d0 )
CALBAS_FRMEVL 19556 ( 0x4c64 )
CALBAS_FRMQNT 21551 ( 0x542f )
CALBAS_GETBYT 21020 ( 0x521c )
CALBAS_NEWSTT 17921 ( 0x4601 )
CALBAS_PTRGET 24228 ( 0x5ea4 )
CALBAS_READYR 16539 ( 0x409b )
CALLF 48 ( 0x30 )
CALL_BCLS 17855 ( 0x45bf )
CALL_BCPY 17461 ( 0x4435 )
CALL_BCPY:COPY_TO_BOTTOM 17767 ( 0x4567 )
CALL_BCPY:COPY_TO_BOTTOM_Y_LOOP 17786 ( 0x457a )
CALL_BCPY:COPY_TO_TOP 17718 ( 0x4536 )
CALL_BCPY:END_OF_BCPY 17832 ( 0x45a8 )
CALL_BCPY:SKIP_ADJUST_HEIGHT1 17657 ( 0x44f9 )
CALL_BCPY:SKIP_ADJUST_HEIGHT2 17673 ( 0x4509 )
CALL_BCPY:SKIP_ADJUST_WIDTH1 17625 ( 0x44d9 )
CALL_BCPY:SKIP_ADJUST_WIDTH2 17641 ( 0x44e9 )
CALL_BCPY:X_LOOP1R 17726 ( 0x453e )
CALL_BCPY:X_LOOP1W 17742 ( 0x454e )
CALL_BCPY:X_LOOP2R 17794 ( 0x4582 )
CALL_BCPY:X_LOOP2W 17810 ( 0x4592 )
CALL_BFIL 17245 ( 0x435d )
CALL_BFIL:END_OF_BFIL 17442 ( 0x4422 )
CALL_BFIL:LOOP_X 17427 ( 0x4413 )
CALL_BFIL:LOOP_Y 17420 ( 0x440c )
CALL_BFIL:SKIP_ADJUST_H 17402 ( 0x43fa )
CALL_BFIL:SKIP_ADJUST_W 17382 ( 0x43e6 )
CALL_BFNT 18232 ( 0x4738 )
CALL_BFNT:LOOP1 18260 ( 0x4754 )
CALL_BFNT:SET_FONT 18254 ( 0x474e )
CALL_COL0 18134 ( 0x46d6 )
CALL_COL1 18151 ( 0x46e7 )
CALL_COL2 18168 ( 0x46f8 )
CALL_COL3 18185 ( 0x4709 )
CALL_PCG0 18024 ( 0x4668 )
CALL_PCG1 18057 ( 0x4689 )
CALL_PCG2 18074 ( 0x469a )
CALL_PCG3 18091 ( 0x46ab )
CALL_PCG_PARAM_SUB 17879 ( 0x45d7 )
CALL_SC15 16648 ( 0x4108 )
CALL_SDRV 18275 ( 0x4763 )
CALL_SEPT 18955 ( 0x4a0b )
CALL_SEPT:SKIP_BIGGER_THAN_EP_X 19189 ( 0x4af5 )
CALL_SEPT:SKIP_BIGGER_THAN_EP_Y 19159 ( 0x4ad7 )
CALL_SEPT:SKIP_LONG_BOUNDARY_IS_X 19205 ( 0x4b05 )
CALL_SLNK 18594 ( 0x48a2 )
CALL_SMOV 18778 ( 0x495a )
CALL_SMOV:SKIP 18891 ( 0x49cb )
CALL_SPUT 18379 ( 0x47cb )
CALL_SSEE 19241 ( 0x4b29 )
CALL_SSTP 18327 ( 0x4797 )
CALL_STATEMENT_ENTRY 16580 ( 0x40c4 )
CALL_STATEMENT_ENTRY:NO_MATCH 16645 ( 0x4105 )
CALL_STATEMENT_ENTRY:SEARCH_COMMAND_LOOP 16584 ( 0x40c8 )
CALL_STATEMENT_ENTRY:SEARCH_NEXT_COMMAND 16633 ( 0x40f9 )
CALL_VCST 19871 ( 0x4d9f )
CALL_VCWT 19897 ( 0x4db9 )
CALL_VCWT:SKIP 19931 ( 0x4ddb )
CALL_VCWT:WAIT_LOOP 19914 ( 0x4dca )
CALL_VFIL 17090 ( 0x42c2 )
CALPAT 132 ( 0x84 )
CALSLT 28 ( 0x1c )
CHECK_RAM 17029 ( 0x4285 )
CHGCAP 306 ( 0x132 )
CHGCLR 98 ( 0x62 )
CHGCPU 384 ( 0x180 )
CHGET 159 ( 0x9f )
CHGMOD 95 ( 0x5f )
CHGSND 309 ( 0x135 )
CHKRAM 0 ( 0x0 )
CHPUT 162 ( 0xa2 )
CHRGTR 16 ( 0x10 )
CHSNS 156 ( 0x9c )
CLIKSW 62427 ( 0xf3db )
CLPRIM 62348 ( 0xf38c )
CLRSPR 105 ( 0x69 )
CLS 195 ( 0xc3 )
CNSDFG 62430 ( 0xf3de )
CNVCHR 171 ( 0xab )
COMMAND_JUMP_TABLE 19936 ( 0x4de0 )
CSRX 62429 ( 0xf3dd )
CSRY 62428 ( 0xf3dc )
CURLIN 62492 ( 0xf41c )
DAC 63478 ( 0xf7f6 )
DCOMPR 32 ( 0x20 )
DEVICE 64921 ( 0xfd99 )
DISKVE 62243 ( 0xf323 )
DISSCR 65 ( 0x41 )
DSPFNK 207 ( 0xcf )
ENASCR 68 ( 0x44 )
ENASLT 36 ( 0x24 )
EOL 360 ( 0x168 )
ERAFNK 204 ( 0xcc )
EXBRSA 64248 ( 0xfaf8 )
EXIT_CALL_PCG 18034 ( 0x4672 )
EXIT_CALL_STATEMENT 16631 ( 0x40f7 )
EXPTBL 64705 ( 0xfcc1 )
EXTBIO 65482 ( 0xffca )
EXTROM 351 ( 0x15f )
FILVRM 86 ( 0x56 )
FNKSB 201 ( 0xc9 )
FNKSTR 63615 ( 0xf87f )
FORCLR 62441 ( 0xf3e9 )
GETCPU 387 ( 0x183 )
GETYPR 40 ( 0x28 )
GET_COUNT 19833 ( 0x4d79 )
GET_ONE_BYTE 17993 ( 0x4649 )
GET_ONE_BYTE:SKIP1 18002 ( 0x4652 )
GET_ONE_BYTE:SKIP2 18018 ( 0x4662 )
GET_P1_SLOT 16852 ( 0x41d4 )
GET_P2_SLOT 16896 ( 0x4200 )
GET_SLTWRK 17010 ( 0x4272 )
GICINI 144 ( 0x90 )
GRPPRT 141 ( 0x8d )
GSPSIZ 138 ( 0x8a )
GTPAD 219 ( 0xdb )
GTPDL 222 ( 0xde )
GTSTCK 213 ( 0xd5 )
GTTRIG 216 ( 0xd8 )
HIDE_SPRITE 19724 ( 0x4d0c )
HIDE_SPRITE:LOOP 19728 ( 0x4d10 )
HIMEM 64586 ( 0xfc4a )
HOKVLD 64288 ( 0xfb20 )
H_CMD 65037 ( 0xfe0d )
H_PROMPT 62031 ( 0xf24f )
H_TIMI 64927 ( 0xfd9f )
H_TIMI_BACKUP_SIZE 5 ( 0x5 )
ILLEGAL_FUNCTION_CALL_ERROR 16768 ( 0x4180 )
INIFNK 62 ( 0x3e )
INIGRP 114 ( 0x72 )
INIMLT 117 ( 0x75 )
INIT32 111 ( 0x6f )
INITIALIZE_WORKAREA 16514 ( 0x4082 )
INITIO 59 ( 0x3b )
INITXT 108 ( 0x6c )
INIT_CODE 16400 ( 0x4010 )
INIT_CODE:THIS_IS_ON_THE_RAM 16475 ( 0x405b )
INIT_CODE:THIS_IS_ON_THE_ROM 16406 ( 0x4016 )
INLIN 177 ( 0xb1 )
INTERVAL_TIMER_PROC 16840 ( 0x41c8 )
INTERVAL_TIMER_PROC_FOR_RAM 16829 ( 0x41bd )
INTERVAL_TIMER_PROC_FOR_ROM 16786 ( 0x4192 )
ISFLIO 330 ( 0x14a )
JOIN_SPRITE 19764 ( 0x4d34 )
JOIN_SPRITE:SKIP1 19812 ( 0x4d64 )
KEYBUF 64496 ( 0xfbf0 )
KEYINT 56 ( 0x38 )
KILBUF 342 ( 0x156 )
LDIRMV 89 ( 0x59 )
LDIRVM 92 ( 0x5c )
LINL32 62383 ( 0xf3af )
LINL40 62382 ( 0xf3ae )
LINLEN 62384 ( 0xf3b0 )
LINWRK 64536 ( 0xfc18 )
LPTOUT 165 ( 0xa5 )
LPTSTT 168 ( 0xa8 )
MASTERS 62280 ( 0xf348 )
NEWKEY 64485 ( 0xfbe5 )
NEW_H_TIMI 16847 ( 0x41cf )
NEXT_SPRITE 19531 ( 0x4c4b )
NMI 102 ( 0x66 )
NORMAL_SPRITE 19737 ( 0x4d19 )
NRDVRM 372 ( 0x174 )
NSETRD 366 ( 0x16e )
NSTWRT 369 ( 0x171 )
NWRVRM 375 ( 0x177 )
OLDKEY 64474 ( 0xfbda )
OLDSCR 64688 ( 0xfcb0 )
OUTDLP 333 ( 0x14d )
OUTDO 24 ( 0x18 )
PATWRK 64576 ( 0xfc40 )
PCMPLY 390 ( 0x186 )
PCMREC 393 ( 0x189 )
PINLIN 174 ( 0xae )
POSIT 198 ( 0xc6 )
PROCNM 64905 ( 0xfd89 )
QINLIN 180 ( 0xb4 )
RAMAD0 62273 ( 0xf341 )
RAMAD1 62274 ( 0xf342 )
RAMAD2 62275 ( 0xf343 )
RAMAD3 62276 ( 0xf344 )
RDPRIM 62336 ( 0xf380 )
RDPSG 150 ( 0x96 )
RDRES 378 ( 0x17a )
RDSLT 12 ( 0xc )
RDVDP 318 ( 0x13e )
RDVRM 74 ( 0x4a )
RESTORE_P2_SLOT 17080 ( 0x42b8 )
RG0SAV 62431 ( 0xf3df )
RG1SAV 62432 ( 0xf3e0 )
RG2SAV 62433 ( 0xf3e1 )
RG3SAV 62434 ( 0xf3e2 )
RG4SAV 62435 ( 0xf3e3 )
RG5SAV 62436 ( 0xf3e4 )
RG6SAV 62437 ( 0xf3e5 )
RG7SAV 62438 ( 0xf3e6 )
RG8SAV 65511 ( 0xffe7 )
RG9SAV 65512 ( 0xffe8 )
ROM_HEADER_DEVICE 16390 ( 0x4006 )
ROM_HEADER_ID 16384 ( 0x4000 )
ROM_HEADER_INIT 16386 ( 0x4002 )
ROM_HEADER_RESERVED 16394 ( 0x400a )
ROM_HEADER_STATEMENT 16388 ( 0x4004 )
ROM_HEADER_TEXT 16392 ( 0x4008 )
RSLREG 312 ( 0x138 )
SCRMOD 64687 ( 0xfcaf )
SETGRP 126 ( 0x7e )
SETMLT 129 ( 0x81 )
SETRD 80 ( 0x50 )
SETT32 123 ( 0x7b )
SETTXT 120 ( 0x78 )
SETWRT 83 ( 0x53 )
SET_P2_SLOT 16943 ( 0x422f )
SET_P2_SLOT:EXTENDED_SLOT 16963 ( 0x4243 )
SIZE_1ST_SPRITE 1 ( 0x1 )
SIZE_CURRENT_P2_SLOT 1 ( 0x1 )
SIZE_P1_SLOT 1 ( 0x1 )
SIZE_P2_SLOT 1 ( 0x1 )
SIZE_SAVE_P2_SLOT 1 ( 0x1 )
SIZE_SPRITE_DRIVE_ON 1 ( 0x1 )
SIZE_SPRITE_INFO 512 ( 0x200 )
SIZE_SPRITE_STOP_AUTO_MOVE 1 ( 0x1 )
SIZE_VSYNC_COUNT 2 ( 0x2 )
SLTATR 64713 ( 0xfcc9 )
SLTTBL 64709 ( 0xfcc5 )
SLTWRK 64777 ( 0xfd09 )
SNSMAT 321 ( 0x141 )
SPRITE_DRIVER 19359 ( 0x4b9f )
SPRITE_DRIVER:LONG_SIDE_IS_X 19584 ( 0x4c80 )
SPRITE_DRIVER:LONG_SIDE_IS_Y 19581 ( 0x4c7d )
SPRITE_DRIVER:LOOP1 19515 ( 0x4c3b )
SPRITE_DRIVER:OUTSIDE_SPRITE 19462 ( 0x4c06 )
SPRITE_DRIVER:SKIP_ADD 19562 ( 0x4c6a )
SPRITE_DRIVER:SKIP_AUTO_MOVE 19476 ( 0x4c14 )
SPRITE_DRIVER:SKIP_VECTOR 19571 ( 0x4c73 )
SPRITE_DRIVER:SPRITE_AUTO_MOVE 19380 ( 0x4bb4 )
SPRITE_DRIVER:SPRITE_AUTO_MOVE_NEXT 19469 ( 0x4c0d )
SPRITE_DRIVER:SPRITE_AUTO_MOVE_NEXT_PRE 19468 ( 0x4c0c )
SPRITE_DRIVER:SPRITE_BRESENHAM_MOVE 19546 ( 0x4c5a )
SPRITE_DRIVER:SPRITE_BRESENHAM_MOVE_END_CHECK 19640 ( 0x4cb8 )
SPRITE_DRIVER:SPRITE_WENT_OFFSCREEN 19718 ( 0x4d06 )
SPRITE_DRIVER:X_ENDPOINT_IS_LEFT1 19605 ( 0x4c95 )
SPRITE_DRIVER:X_ENDPOINT_IS_RIGHT1 19594 ( 0x4c8a )
SPRITE_DRIVER:Y_ENDPOINT_IS_DOWN1 19621 ( 0x4ca5 )
SPRITE_DRIVER:Y_ENDPOINT_IS_UP1 19632 ( 0x4cb0 )
SPRITE_DRIVER:Y_MOVE1 19613 ( 0x4c9d )
STATFL 62439 ( 0xf3e7 )
STMOTR 243 ( 0xf3 )
STRTMS 153 ( 0x99 )
SUBFLG 63141 ( 0xf6a5 )
SUBROM 348 ( 0x15c )
SUB_BEEP 381 ( 0x17d )
SUB_CALATR 253 ( 0xfd )
SUB_CALPAT 249 ( 0xf9 )
SUB_CHGCLR 273 ( 0x111 )
SUB_CHGMDP 437 ( 0x1b5 )
SUB_CHGMOD 209 ( 0xd1 )
SUB_CLRSPR 245 ( 0xf5 )
SUB_CLSSUB 277 ( 0x115 )
SUB_DSPFNK 285 ( 0x11d )
SUB_GETPAT 261 ( 0x105 )
SUB_GETPLT 329 ( 0x149 )
SUB_GSPSIZ 257 ( 0x101 )
SUB_GTPPRT 137 ( 0x89 )
SUB_INIGRP 221 ( 0xdd )
SUB_INIMLT 225 ( 0xe1 )
SUB_INIPLT 321 ( 0x141 )
SUB_INIT32 217 ( 0xd9 )
SUB_INITXT 213 ( 0xd5 )
SUB_KNJPRT 445 ( 0x1bd )
SUB_NEWPAD 429 ( 0x1ad )
SUB_NVBXFL 205 ( 0xcd )
SUB_NVBXLN 201 ( 0xc9 )
SUB_PROMPT 385 ( 0x181 )
SUB_RDVRM 269 ( 0x10d )
SUB_REDCLK 501 ( 0x1f5 )
SUB_RSTPLT 325 ( 0x145 )
SUB_SETGRP 237 ( 0xed )
SUB_SETMLT 241 ( 0xf1 )
SUB_SETPAG 317 ( 0x13d )
SUB_SETPLT 333 ( 0x14d )
SUB_SETT32 233 ( 0xe9 )
SUB_SETTXT 229 ( 0xe5 )
SUB_VDPSTA 305 ( 0x131 )
SUB_WRTCLK 505 ( 0x1f9 )
SUB_WRTVDP 301 ( 0x12d )
SUB_WRTVRM 265 ( 0x109 )
SYNCHR 8 ( 0x8 )
SYNTAX_ERROR 16759 ( 0x4177 )
TAPIN 228 ( 0xe4 )
TAPIOF 231 ( 0xe7 )
TAPION 225 ( 0xe1 )
TAPOOF 240 ( 0xf0 )
TAPOON 234 ( 0xea )
TAPOUT 237 ( 0xed )
TOTEXT 210 ( 0xd2 )
TRPTBL 64588 ( 0xfc4c )
TYPE_MISMATCH_ERROR 16777 ( 0x4189 )
USRTAB 62362 ( 0xf39a )
VALTYP 63075 ( 0xf663 )
VSYNC_COUNTER 19816 ( 0x4d68 )
WORK_1ST_SPRITE 6 ( 0x6 )
WORK_AREA_SIZE 521 ( 0x209 )
WORK_CURRENT_P2_SLOT 2 ( 0x2 )
WORK_P1_SLOT 0 ( 0x0 )
WORK_P2_SLOT 1 ( 0x1 )
WORK_SAVE_P2_SLOT 3 ( 0x3 )
WORK_SPRITE_DRIVE_ON 7 ( 0x7 )
WORK_SPRITE_INFO 9 ( 0x9 )
WORK_SPRITE_STOP_AUTO_MOVE 8 ( 0x8 )
WORK_VSYNC_COUNT 4 ( 0x4 )
WRPRIM 62341 ( 0xf385 )
WRRES 381 ( 0x17d )
WRSLT 20 ( 0x14 )
WRTPSG 147 ( 0x93 )
WRTVDP 71 ( 0x47 )
WRTVRM 77 ( 0x4d )
WSLREG 315 ( 0x13b )
